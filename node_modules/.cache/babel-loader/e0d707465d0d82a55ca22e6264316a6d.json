{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useContext, useCallback } from 'react';\nimport LinePath from '@visx/shape/lib/shapes/LinePath';\nimport DataContext from '../../../context/DataContext';\nimport withRegisteredData from '../../../enhancers/withRegisteredData';\nimport getScaledValueFactory from '../../../utils/getScaledValueFactory';\nimport isValidNumber from '../../../typeguards/isValidNumber';\nimport { LINESERIES_EVENT_SOURCE, XYCHART_EVENT_SOURCE } from '../../../constants';\nimport { BaseGlyphSeries } from './BaseGlyphSeries';\nimport defaultRenderGlyph from './defaultRenderGlyph';\nimport useSeriesEvents from '../../../hooks/useSeriesEvents';\n\nfunction BaseLineSeries(_ref) {\n  var _ref2, _colorScale, _theme$colors;\n\n  var curve = _ref.curve,\n      data = _ref.data,\n      dataKey = _ref.dataKey,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onPointerMove = _ref.onPointerMove,\n      onPointerOut = _ref.onPointerOut,\n      onPointerUp = _ref.onPointerUp,\n      _ref$enableEvents = _ref.enableEvents,\n      enableEvents = _ref$enableEvents === void 0 ? true : _ref$enableEvents,\n      xAccessor = _ref.xAccessor,\n      xScale = _ref.xScale,\n      yAccessor = _ref.yAccessor,\n      yScale = _ref.yScale,\n      _ref$PathComponent = _ref.PathComponent,\n      PathComponent = _ref$PathComponent === void 0 ? 'path' : _ref$PathComponent,\n      lineProps = _objectWithoutPropertiesLoose(_ref, [\"curve\", \"data\", \"dataKey\", \"onBlur\", \"onFocus\", \"onPointerMove\", \"onPointerOut\", \"onPointerUp\", \"enableEvents\", \"xAccessor\", \"xScale\", \"yAccessor\", \"yScale\", \"PathComponent\"]);\n\n  var _useContext = useContext(DataContext),\n      colorScale = _useContext.colorScale,\n      theme = _useContext.theme;\n\n  var getScaledX = useCallback(getScaledValueFactory(xScale, xAccessor), [xScale, xAccessor]);\n  var getScaledY = useCallback(getScaledValueFactory(yScale, yAccessor), [yScale, yAccessor]);\n  var isDefined = useCallback(function (d) {\n    return isValidNumber(xScale(xAccessor(d))) && isValidNumber(yScale(yAccessor(d)));\n  }, [xScale, xAccessor, yScale, yAccessor]);\n  var color = (_ref2 = (_colorScale = colorScale == null ? void 0 : colorScale(dataKey)) != null ? _colorScale : theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors[0]) != null ? _ref2 : '#222';\n  var ownEventSourceKey = LINESERIES_EVENT_SOURCE + \"-\" + dataKey;\n  var eventEmitters = useSeriesEvents({\n    dataKey: dataKey,\n    enableEvents: enableEvents,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onPointerMove: onPointerMove,\n    onPointerOut: onPointerOut,\n    onPointerUp: onPointerUp,\n    source: ownEventSourceKey,\n    allowedSources: [XYCHART_EVENT_SOURCE, ownEventSourceKey]\n  }); // render invisible glyphs for focusing if onFocus/onBlur are defined\n\n  var captureFocusEvents = Boolean(onFocus || onBlur);\n  var renderGlyphs = useCallback(function (_ref3) {\n    var glyphs = _ref3.glyphs;\n    return captureFocusEvents ? glyphs.map(function (glyph) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: glyph.key\n      }, defaultRenderGlyph(_extends({}, glyph, {\n        color: 'transparent',\n        onFocus: eventEmitters.onFocus,\n        onBlur: eventEmitters.onBlur\n      })));\n    }) : null;\n  }, [captureFocusEvents, eventEmitters.onFocus, eventEmitters.onBlur]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LinePath, _extends({\n    x: getScaledX,\n    y: getScaledY,\n    defined: isDefined,\n    curve: curve\n  }, lineProps), function (_ref4) {\n    var path = _ref4.path;\n    return /*#__PURE__*/React.createElement(PathComponent, _extends({\n      stroke: color,\n      strokeWidth: 2,\n      fill: \"transparent\",\n      strokeLinecap: \"round\" // without this a datum surrounded by nulls will not be visible\n\n    }, lineProps, {\n      d: path(data) || ''\n    }, eventEmitters));\n  }), captureFocusEvents && /*#__PURE__*/React.createElement(BaseGlyphSeries, {\n    dataKey: dataKey,\n    data: data,\n    xAccessor: xAccessor,\n    yAccessor: yAccessor,\n    xScale: xScale,\n    yScale: yScale,\n    renderGlyphs: renderGlyphs\n  }));\n}\n\nexport default withRegisteredData(BaseLineSeries);","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/xychart/esm/components/series/private/BaseLineSeries.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","useContext","useCallback","LinePath","DataContext","withRegisteredData","getScaledValueFactory","isValidNumber","LINESERIES_EVENT_SOURCE","XYCHART_EVENT_SOURCE","BaseGlyphSeries","defaultRenderGlyph","useSeriesEvents","BaseLineSeries","_ref","_ref2","_colorScale","_theme$colors","curve","data","dataKey","onBlur","onFocus","onPointerMove","onPointerOut","onPointerUp","_ref$enableEvents","enableEvents","xAccessor","xScale","yAccessor","yScale","_ref$PathComponent","PathComponent","lineProps","_useContext","colorScale","theme","getScaledX","getScaledY","isDefined","d","color","colors","ownEventSourceKey","eventEmitters","allowedSources","captureFocusEvents","Boolean","renderGlyphs","_ref3","glyphs","map","glyph","createElement","Fragment","x","y","defined","_ref4","path","stroke","strokeWidth","fill","strokeLinecap"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useCallback } from 'react';\nimport LinePath from '@visx/shape/lib/shapes/LinePath';\nimport DataContext from '../../../context/DataContext';\nimport withRegisteredData from '../../../enhancers/withRegisteredData';\nimport getScaledValueFactory from '../../../utils/getScaledValueFactory';\nimport isValidNumber from '../../../typeguards/isValidNumber';\nimport { LINESERIES_EVENT_SOURCE, XYCHART_EVENT_SOURCE } from '../../../constants';\nimport { BaseGlyphSeries } from './BaseGlyphSeries';\nimport defaultRenderGlyph from './defaultRenderGlyph';\nimport useSeriesEvents from '../../../hooks/useSeriesEvents';\n\nfunction BaseLineSeries(_ref) {\n  var _ref2, _colorScale, _theme$colors;\n\n  var curve = _ref.curve,\n      data = _ref.data,\n      dataKey = _ref.dataKey,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onPointerMove = _ref.onPointerMove,\n      onPointerOut = _ref.onPointerOut,\n      onPointerUp = _ref.onPointerUp,\n      _ref$enableEvents = _ref.enableEvents,\n      enableEvents = _ref$enableEvents === void 0 ? true : _ref$enableEvents,\n      xAccessor = _ref.xAccessor,\n      xScale = _ref.xScale,\n      yAccessor = _ref.yAccessor,\n      yScale = _ref.yScale,\n      _ref$PathComponent = _ref.PathComponent,\n      PathComponent = _ref$PathComponent === void 0 ? 'path' : _ref$PathComponent,\n      lineProps = _objectWithoutPropertiesLoose(_ref, [\"curve\", \"data\", \"dataKey\", \"onBlur\", \"onFocus\", \"onPointerMove\", \"onPointerOut\", \"onPointerUp\", \"enableEvents\", \"xAccessor\", \"xScale\", \"yAccessor\", \"yScale\", \"PathComponent\"]);\n\n  var _useContext = useContext(DataContext),\n      colorScale = _useContext.colorScale,\n      theme = _useContext.theme;\n\n  var getScaledX = useCallback(getScaledValueFactory(xScale, xAccessor), [xScale, xAccessor]);\n  var getScaledY = useCallback(getScaledValueFactory(yScale, yAccessor), [yScale, yAccessor]);\n  var isDefined = useCallback(function (d) {\n    return isValidNumber(xScale(xAccessor(d))) && isValidNumber(yScale(yAccessor(d)));\n  }, [xScale, xAccessor, yScale, yAccessor]);\n  var color = (_ref2 = (_colorScale = colorScale == null ? void 0 : colorScale(dataKey)) != null ? _colorScale : theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors[0]) != null ? _ref2 : '#222';\n  var ownEventSourceKey = LINESERIES_EVENT_SOURCE + \"-\" + dataKey;\n  var eventEmitters = useSeriesEvents({\n    dataKey: dataKey,\n    enableEvents: enableEvents,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onPointerMove: onPointerMove,\n    onPointerOut: onPointerOut,\n    onPointerUp: onPointerUp,\n    source: ownEventSourceKey,\n    allowedSources: [XYCHART_EVENT_SOURCE, ownEventSourceKey]\n  }); // render invisible glyphs for focusing if onFocus/onBlur are defined\n\n  var captureFocusEvents = Boolean(onFocus || onBlur);\n  var renderGlyphs = useCallback(function (_ref3) {\n    var glyphs = _ref3.glyphs;\n    return captureFocusEvents ? glyphs.map(function (glyph) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: glyph.key\n      }, defaultRenderGlyph(_extends({}, glyph, {\n        color: 'transparent',\n        onFocus: eventEmitters.onFocus,\n        onBlur: eventEmitters.onBlur\n      })));\n    }) : null;\n  }, [captureFocusEvents, eventEmitters.onFocus, eventEmitters.onBlur]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LinePath, _extends({\n    x: getScaledX,\n    y: getScaledY,\n    defined: isDefined,\n    curve: curve\n  }, lineProps), function (_ref4) {\n    var path = _ref4.path;\n    return /*#__PURE__*/React.createElement(PathComponent, _extends({\n      stroke: color,\n      strokeWidth: 2,\n      fill: \"transparent\",\n      strokeLinecap: \"round\" // without this a datum surrounded by nulls will not be visible\n\n    }, lineProps, {\n      d: path(data) || ''\n    }, eventEmitters));\n  }), captureFocusEvents && /*#__PURE__*/React.createElement(BaseGlyphSeries, {\n    dataKey: dataKey,\n    data: data,\n    xAccessor: xAccessor,\n    yAccessor: yAccessor,\n    xScale: xScale,\n    yScale: yScale,\n    renderGlyphs: renderGlyphs\n  }));\n}\n\nexport default withRegisteredData(BaseLineSeries);"]},"metadata":{},"sourceType":"module"}