{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nvar DEFAULT_DIMS = {\n  width: 0,\n  height: 0,\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n};\n/** A hook for accessing and setting memoized width, height, and margin chart dimensions. */\n\nexport default function useDimensions(initialDims) {\n  var _useState = useState({\n    width: (initialDims == null ? void 0 : initialDims.width) == null ? DEFAULT_DIMS.width : initialDims.width,\n    height: (initialDims == null ? void 0 : initialDims.height) == null ? DEFAULT_DIMS.height : initialDims.height,\n    margin: (initialDims == null ? void 0 : initialDims.margin) == null ? DEFAULT_DIMS.margin : initialDims.margin\n  }),\n      dimensions = _useState[0],\n      privateSetDimensions = _useState[1]; // expose a setter with better memoization logic\n\n\n  var publicSetDimensions = useCallback(function (dims) {\n    if (dims.width !== dimensions.width || dims.height !== dimensions.height || dims.margin.left !== dimensions.margin.left || dims.margin.right !== dimensions.margin.right || dims.margin.top !== dimensions.margin.top || dims.margin.bottom !== dimensions.margin.bottom) {\n      privateSetDimensions(dims);\n    }\n  }, [dimensions.width, dimensions.height, dimensions.margin.left, dimensions.margin.right, dimensions.margin.bottom, dimensions.margin.top]);\n  return [dimensions, publicSetDimensions];\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/xychart/esm/hooks/useDimensions.js"],"names":["React","useCallback","useState","DEFAULT_DIMS","width","height","margin","top","right","bottom","left","useDimensions","initialDims","_useState","dimensions","privateSetDimensions","publicSetDimensions","dims"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,MAAM,EAAE,CAFS;AAGjBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,CADC;AAENC,IAAAA,KAAK,EAAE,CAFD;AAGNC,IAAAA,MAAM,EAAE,CAHF;AAINC,IAAAA,IAAI,EAAE;AAJA;AAHS,CAAnB;AAWA;;AACA,eAAe,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;AACjD,MAAIC,SAAS,GAAGX,QAAQ,CAAC;AACvBE,IAAAA,KAAK,EAAE,CAACQ,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACR,KAA5C,KAAsD,IAAtD,GAA6DD,YAAY,CAACC,KAA1E,GAAkFQ,WAAW,CAACR,KAD9E;AAEvBC,IAAAA,MAAM,EAAE,CAACO,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACP,MAA5C,KAAuD,IAAvD,GAA8DF,YAAY,CAACE,MAA3E,GAAoFO,WAAW,CAACP,MAFjF;AAGvBC,IAAAA,MAAM,EAAE,CAACM,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACN,MAA5C,KAAuD,IAAvD,GAA8DH,YAAY,CAACG,MAA3E,GAAoFM,WAAW,CAACN;AAHjF,GAAD,CAAxB;AAAA,MAKIQ,UAAU,GAAGD,SAAS,CAAC,CAAD,CAL1B;AAAA,MAMIE,oBAAoB,GAAGF,SAAS,CAAC,CAAD,CANpC,CADiD,CAOR;;;AAGzC,MAAIG,mBAAmB,GAAGf,WAAW,CAAC,UAAUgB,IAAV,EAAgB;AACpD,QAAIA,IAAI,CAACb,KAAL,KAAeU,UAAU,CAACV,KAA1B,IAAmCa,IAAI,CAACZ,MAAL,KAAgBS,UAAU,CAACT,MAA9D,IAAwEY,IAAI,CAACX,MAAL,CAAYI,IAAZ,KAAqBI,UAAU,CAACR,MAAX,CAAkBI,IAA/G,IAAuHO,IAAI,CAACX,MAAL,CAAYE,KAAZ,KAAsBM,UAAU,CAACR,MAAX,CAAkBE,KAA/J,IAAwKS,IAAI,CAACX,MAAL,CAAYC,GAAZ,KAAoBO,UAAU,CAACR,MAAX,CAAkBC,GAA9M,IAAqNU,IAAI,CAACX,MAAL,CAAYG,MAAZ,KAAuBK,UAAU,CAACR,MAAX,CAAkBG,MAAlQ,EAA0Q;AACxQM,MAAAA,oBAAoB,CAACE,IAAD,CAApB;AACD;AACF,GAJoC,EAIlC,CAACH,UAAU,CAACV,KAAZ,EAAmBU,UAAU,CAACT,MAA9B,EAAsCS,UAAU,CAACR,MAAX,CAAkBI,IAAxD,EAA8DI,UAAU,CAACR,MAAX,CAAkBE,KAAhF,EAAuFM,UAAU,CAACR,MAAX,CAAkBG,MAAzG,EAAiHK,UAAU,CAACR,MAAX,CAAkBC,GAAnI,CAJkC,CAArC;AAKA,SAAO,CAACO,UAAD,EAAaE,mBAAb,CAAP;AACD","sourcesContent":["import React, { useCallback, useState } from 'react';\nvar DEFAULT_DIMS = {\n  width: 0,\n  height: 0,\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n};\n\n/** A hook for accessing and setting memoized width, height, and margin chart dimensions. */\nexport default function useDimensions(initialDims) {\n  var _useState = useState({\n    width: (initialDims == null ? void 0 : initialDims.width) == null ? DEFAULT_DIMS.width : initialDims.width,\n    height: (initialDims == null ? void 0 : initialDims.height) == null ? DEFAULT_DIMS.height : initialDims.height,\n    margin: (initialDims == null ? void 0 : initialDims.margin) == null ? DEFAULT_DIMS.margin : initialDims.margin\n  }),\n      dimensions = _useState[0],\n      privateSetDimensions = _useState[1]; // expose a setter with better memoization logic\n\n\n  var publicSetDimensions = useCallback(function (dims) {\n    if (dims.width !== dimensions.width || dims.height !== dimensions.height || dims.margin.left !== dimensions.margin.left || dims.margin.right !== dimensions.margin.right || dims.margin.top !== dimensions.margin.top || dims.margin.bottom !== dimensions.margin.bottom) {\n      privateSetDimensions(dims);\n    }\n  }, [dimensions.width, dimensions.height, dimensions.margin.left, dimensions.margin.right, dimensions.margin.bottom, dimensions.margin.top]);\n  return [dimensions, publicSetDimensions];\n}"]},"metadata":{},"sourceType":"module"}