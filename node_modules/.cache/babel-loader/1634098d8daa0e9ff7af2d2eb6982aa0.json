{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.protos = exports.v1 = void 0;\n/**\n * @namespace google.pubsub.v1\n */\n\n/**\n * @namespace google.protobuf\n */\n\n/**\n * The default export of the `@google-cloud/pubsub` package is the\n * {@link PubSub} class.\n *\n * See {@link PubSub} and {@link ClientConfig} for client methods and\n * configuration options.\n *\n * @module {PubSub} @google-cloud/pubsub\n * @alias nodejs-pubsub\n *\n * @example <caption>Install the client library with <a href=\"https://www.npmjs.com/\">npm</a>:</caption>\n * npm install @google-cloud/pubsub\n *\n * @example <caption>Import the client library</caption>\n * const {PubSub} = require('@google-cloud/pubsub');\n *\n * @example <caption>Create a client that uses <a href=\"https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\">Application Default Credentials (ADC)</a>:</caption>\n * const pubsub = new PubSub();\n *\n * @example <caption>Create a client with <a href=\"https://cloud.google.com/docs/authentication/production#obtaining_and_providing_service_account_credentials_manually\">explicit credentials</a>:</caption>\n * const pubsub = new PubSub({\n *   projectId: 'your-project-id',\n *   keyFilename: '/path/to/keyfile.json'\n * });\n *\n * @example <caption>include:samples/quickstart.js</caption>\n * region_tag:pubsub_quickstart_create_topic\n * Full quickstart example:\n */\n\n/**\n * Reference to internal generated clients, advanced use only.\n *\n * @name PubSub.v1\n * @see v1.PublisherClient\n * @see v1.SubscriberClient\n * @type {object}\n * @property {constructor} PublisherClient\n *     Reference to {@link v1.PublisherClient}.\n * @property {constructor} SubscriberClient\n *     Reference to {@link v1.SubscriberClient}.\n */\n\n/**\n * Reference to internal generated clients, advanced use only.\n *\n * @name module:@google-cloud/pubsub.v1\n * @see v1.PublisherClient\n * @see v1.SubscriberClient\n * @type {object}\n * @property {constructor} PublisherClient\n *     Reference to {@link v1.PublisherClient}.\n * @property {constructor} SubscriberClient\n *     Reference to {@link v1.SubscriberClient}.\n */\n\nconst v1 = require(\"./v1\");\n\nexports.v1 = v1;\n\nvar iam_1 = require(\"./iam\");\n\nObject.defineProperty(exports, \"IAM\", {\n  enumerable: true,\n  get: function () {\n    return iam_1.IAM;\n  }\n});\n\nvar publish_error_1 = require(\"./publisher/publish-error\");\n\nObject.defineProperty(exports, \"PublishError\", {\n  enumerable: true,\n  get: function () {\n    return publish_error_1.PublishError;\n  }\n});\n\nvar pubsub_1 = require(\"./pubsub\");\n\nObject.defineProperty(exports, \"PubSub\", {\n  enumerable: true,\n  get: function () {\n    return pubsub_1.PubSub;\n  }\n});\n\nvar snapshot_1 = require(\"./snapshot\");\n\nObject.defineProperty(exports, \"Snapshot\", {\n  enumerable: true,\n  get: function () {\n    return snapshot_1.Snapshot;\n  }\n});\n\nvar subscriber_1 = require(\"./subscriber\");\n\nObject.defineProperty(exports, \"Message\", {\n  enumerable: true,\n  get: function () {\n    return subscriber_1.Message;\n  }\n});\n\nvar schema_1 = require(\"./schema\");\n\nObject.defineProperty(exports, \"Schema\", {\n  enumerable: true,\n  get: function () {\n    return schema_1.Schema;\n  }\n});\nObject.defineProperty(exports, \"SchemaTypes\", {\n  enumerable: true,\n  get: function () {\n    return schema_1.SchemaTypes;\n  }\n});\nObject.defineProperty(exports, \"SchemaViews\", {\n  enumerable: true,\n  get: function () {\n    return schema_1.SchemaViews;\n  }\n});\nObject.defineProperty(exports, \"Encodings\", {\n  enumerable: true,\n  get: function () {\n    return schema_1.Encodings;\n  }\n});\n\nvar subscription_1 = require(\"./subscription\");\n\nObject.defineProperty(exports, \"Subscription\", {\n  enumerable: true,\n  get: function () {\n    return subscription_1.Subscription;\n  }\n});\n\nvar topic_1 = require(\"./topic\");\n\nObject.defineProperty(exports, \"Topic\", {\n  enumerable: true,\n  get: function () {\n    return topic_1.Topic;\n  }\n});\n\nif (process.env.DEBUG_GRPC) {\n  console.info('gRPC logging set to verbose');\n\n  const grpc = require('google-gax').grpc;\n\n  grpc.setLogger(console);\n  grpc.setLogVerbosity(grpc.logVerbosity.DEBUG);\n}\n\nconst protos = require(\"../protos/protos\");\n\nexports.protos = protos;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protos = exports.v1 = void 0;\n/**\n * @namespace google.pubsub.v1\n */\n/**\n * @namespace google.protobuf\n */\n/**\n * The default export of the `@google-cloud/pubsub` package is the\n * {@link PubSub} class.\n *\n * See {@link PubSub} and {@link ClientConfig} for client methods and\n * configuration options.\n *\n * @module {PubSub} @google-cloud/pubsub\n * @alias nodejs-pubsub\n *\n * @example <caption>Install the client library with <a href=\"https://www.npmjs.com/\">npm</a>:</caption>\n * npm install @google-cloud/pubsub\n *\n * @example <caption>Import the client library</caption>\n * const {PubSub} = require('@google-cloud/pubsub');\n *\n * @example <caption>Create a client that uses <a href=\"https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application\">Application Default Credentials (ADC)</a>:</caption>\n * const pubsub = new PubSub();\n *\n * @example <caption>Create a client with <a href=\"https://cloud.google.com/docs/authentication/production#obtaining_and_providing_service_account_credentials_manually\">explicit credentials</a>:</caption>\n * const pubsub = new PubSub({\n *   projectId: 'your-project-id',\n *   keyFilename: '/path/to/keyfile.json'\n * });\n *\n * @example <caption>include:samples/quickstart.js</caption>\n * region_tag:pubsub_quickstart_create_topic\n * Full quickstart example:\n */\n/**\n * Reference to internal generated clients, advanced use only.\n *\n * @name PubSub.v1\n * @see v1.PublisherClient\n * @see v1.SubscriberClient\n * @type {object}\n * @property {constructor} PublisherClient\n *     Reference to {@link v1.PublisherClient}.\n * @property {constructor} SubscriberClient\n *     Reference to {@link v1.SubscriberClient}.\n */\n/**\n * Reference to internal generated clients, advanced use only.\n *\n * @name module:@google-cloud/pubsub.v1\n * @see v1.PublisherClient\n * @see v1.SubscriberClient\n * @type {object}\n * @property {constructor} PublisherClient\n *     Reference to {@link v1.PublisherClient}.\n * @property {constructor} SubscriberClient\n *     Reference to {@link v1.SubscriberClient}.\n */\nconst v1 = require(\"./v1\");\nexports.v1 = v1;\nvar iam_1 = require(\"./iam\");\nObject.defineProperty(exports, \"IAM\", { enumerable: true, get: function () { return iam_1.IAM; } });\nvar publish_error_1 = require(\"./publisher/publish-error\");\nObject.defineProperty(exports, \"PublishError\", { enumerable: true, get: function () { return publish_error_1.PublishError; } });\nvar pubsub_1 = require(\"./pubsub\");\nObject.defineProperty(exports, \"PubSub\", { enumerable: true, get: function () { return pubsub_1.PubSub; } });\nvar snapshot_1 = require(\"./snapshot\");\nObject.defineProperty(exports, \"Snapshot\", { enumerable: true, get: function () { return snapshot_1.Snapshot; } });\nvar subscriber_1 = require(\"./subscriber\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return subscriber_1.Message; } });\nvar schema_1 = require(\"./schema\");\nObject.defineProperty(exports, \"Schema\", { enumerable: true, get: function () { return schema_1.Schema; } });\nObject.defineProperty(exports, \"SchemaTypes\", { enumerable: true, get: function () { return schema_1.SchemaTypes; } });\nObject.defineProperty(exports, \"SchemaViews\", { enumerable: true, get: function () { return schema_1.SchemaViews; } });\nObject.defineProperty(exports, \"Encodings\", { enumerable: true, get: function () { return schema_1.Encodings; } });\nvar subscription_1 = require(\"./subscription\");\nObject.defineProperty(exports, \"Subscription\", { enumerable: true, get: function () { return subscription_1.Subscription; } });\nvar topic_1 = require(\"./topic\");\nObject.defineProperty(exports, \"Topic\", { enumerable: true, get: function () { return topic_1.Topic; } });\nif (process.env.DEBUG_GRPC) {\n    console.info('gRPC logging set to verbose');\n    const grpc = require('google-gax').grpc;\n    grpc.setLogger(console);\n    grpc.setLogVerbosity(grpc.logVerbosity.DEBUG);\n}\nconst protos = require(\"../protos/protos\");\nexports.protos = protos;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}