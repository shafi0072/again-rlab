{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useMemo } from 'react';\nimport reduceCSSCalc from 'reduce-css-calc';\nimport getStringWidth from '../util/getStringWidth';\n\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\nfunction isXOrYInValid(xOrY) {\n  return (// number that is not NaN or Infinity\n    typeof xOrY === 'number' && Number.isFinite(xOrY) || // for percentage\n    typeof xOrY === 'string'\n  );\n}\n\nexport default function useText(props) {\n  var _props$verticalAnchor = props.verticalAnchor,\n      verticalAnchor = _props$verticalAnchor === void 0 ? 'end' : _props$verticalAnchor,\n      _props$scaleToFit = props.scaleToFit,\n      scaleToFit = _props$scaleToFit === void 0 ? false : _props$scaleToFit,\n      angle = props.angle,\n      width = props.width,\n      _props$lineHeight = props.lineHeight,\n      lineHeight = _props$lineHeight === void 0 ? '1em' : _props$lineHeight,\n      _props$capHeight = props.capHeight,\n      capHeight = _props$capHeight === void 0 ? '0.71em' : _props$capHeight,\n      children = props.children,\n      style = props.style,\n      textProps = _objectWithoutPropertiesLoose(props, [\"verticalAnchor\", \"scaleToFit\", \"angle\", \"width\", \"lineHeight\", \"capHeight\", \"children\", \"style\"]);\n\n  var _textProps$x = textProps.x,\n      x = _textProps$x === void 0 ? 0 : _textProps$x,\n      _textProps$y = textProps.y,\n      y = _textProps$y === void 0 ? 0 : _textProps$y;\n  var isXOrYNotValid = !isXOrYInValid(x) || !isXOrYInValid(y);\n\n  var _useMemo = useMemo(function () {\n    var words = children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/);\n    return {\n      wordsWithWidth: words.map(function (word) {\n        return {\n          word: word,\n          wordWidth: getStringWidth(word, style) || 0\n        };\n      }),\n      spaceWidth: getStringWidth(\"\\xA0\", style) || 0\n    };\n  }, [children, style]),\n      wordsWithWidth = _useMemo.wordsWithWidth,\n      spaceWidth = _useMemo.spaceWidth;\n\n  var wordsByLines = useMemo(function () {\n    if (isXOrYNotValid) {\n      return [];\n    } // Only perform calculations if using features that require them (multiline, scaleToFit)\n\n\n    if (width || scaleToFit) {\n      return wordsWithWidth.reduce(function (result, _ref) {\n        var word = _ref.word,\n            wordWidth = _ref.wordWidth;\n        var currentLine = result[result.length - 1];\n\n        if (currentLine && (width == null || scaleToFit || (currentLine.width || 0) + wordWidth + spaceWidth < width)) {\n          // Word can be added to an existing line\n          currentLine.words.push(word);\n          currentLine.width = currentLine.width || 0;\n          currentLine.width += wordWidth + spaceWidth;\n        } else {\n          // Add first word to line or word is too long to scaleToFit on existing line\n          var newLine = {\n            words: [word],\n            width: wordWidth\n          };\n          result.push(newLine);\n        }\n\n        return result;\n      }, []);\n    }\n\n    return [{\n      words: children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/)\n    }];\n  }, [isXOrYNotValid, width, scaleToFit, children, wordsWithWidth, spaceWidth]);\n  var startDy = useMemo(function () {\n    var startDyStr = isXOrYNotValid ? '' : verticalAnchor === 'start' ? reduceCSSCalc(\"calc(\" + capHeight + \")\") : verticalAnchor === 'middle' ? reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) / 2 + \" * -\" + lineHeight + \" + (\" + capHeight + \" / 2))\") : reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) + \" * -\" + lineHeight + \")\");\n    return startDyStr;\n  }, [isXOrYNotValid, verticalAnchor, capHeight, wordsByLines.length, lineHeight]);\n  var transform = useMemo(function () {\n    var transforms = [];\n\n    if (isXOrYNotValid) {\n      return '';\n    }\n\n    if (isNumber(x) && isNumber(y) && isNumber(width) && scaleToFit && wordsByLines.length > 0) {\n      var lineWidth = wordsByLines[0].width || 1;\n      var sx = width / lineWidth;\n      var sy = sx;\n      var originX = x - sx * x;\n      var originY = y - sy * y;\n      transforms.push(\"matrix(\" + sx + \", 0, 0, \" + sy + \", \" + originX + \", \" + originY + \")\");\n    }\n\n    if (angle) {\n      transforms.push(\"rotate(\" + angle + \", \" + x + \", \" + y + \")\");\n    }\n\n    return transforms.length > 0 ? transforms.join(' ') : '';\n  }, [isXOrYNotValid, x, y, width, scaleToFit, wordsByLines, angle]);\n  return {\n    wordsByLines: wordsByLines,\n    startDy: startDy,\n    transform: transform\n  };\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/text/esm/hooks/useText.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","React","useMemo","reduceCSSCalc","getStringWidth","isNumber","val","isXOrYInValid","xOrY","Number","isFinite","useText","props","_props$verticalAnchor","verticalAnchor","_props$scaleToFit","scaleToFit","angle","width","_props$lineHeight","lineHeight","_props$capHeight","capHeight","children","style","textProps","_textProps$x","x","_textProps$y","y","isXOrYNotValid","_useMemo","words","toString","split","wordsWithWidth","map","word","wordWidth","spaceWidth","wordsByLines","reduce","result","_ref","currentLine","push","newLine","startDy","startDyStr","transform","transforms","lineWidth","sx","sy","originX","originY","join"],"mappings":"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","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useMemo } from 'react';\nimport reduceCSSCalc from 'reduce-css-calc';\nimport getStringWidth from '../util/getStringWidth';\n\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\nfunction isXOrYInValid(xOrY) {\n  return (// number that is not NaN or Infinity\n    typeof xOrY === 'number' && Number.isFinite(xOrY) || // for percentage\n    typeof xOrY === 'string'\n  );\n}\n\nexport default function useText(props) {\n  var _props$verticalAnchor = props.verticalAnchor,\n      verticalAnchor = _props$verticalAnchor === void 0 ? 'end' : _props$verticalAnchor,\n      _props$scaleToFit = props.scaleToFit,\n      scaleToFit = _props$scaleToFit === void 0 ? false : _props$scaleToFit,\n      angle = props.angle,\n      width = props.width,\n      _props$lineHeight = props.lineHeight,\n      lineHeight = _props$lineHeight === void 0 ? '1em' : _props$lineHeight,\n      _props$capHeight = props.capHeight,\n      capHeight = _props$capHeight === void 0 ? '0.71em' : _props$capHeight,\n      children = props.children,\n      style = props.style,\n      textProps = _objectWithoutPropertiesLoose(props, [\"verticalAnchor\", \"scaleToFit\", \"angle\", \"width\", \"lineHeight\", \"capHeight\", \"children\", \"style\"]);\n\n  var _textProps$x = textProps.x,\n      x = _textProps$x === void 0 ? 0 : _textProps$x,\n      _textProps$y = textProps.y,\n      y = _textProps$y === void 0 ? 0 : _textProps$y;\n  var isXOrYNotValid = !isXOrYInValid(x) || !isXOrYInValid(y);\n\n  var _useMemo = useMemo(function () {\n    var words = children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/);\n    return {\n      wordsWithWidth: words.map(function (word) {\n        return {\n          word: word,\n          wordWidth: getStringWidth(word, style) || 0\n        };\n      }),\n      spaceWidth: getStringWidth(\"\\xA0\", style) || 0\n    };\n  }, [children, style]),\n      wordsWithWidth = _useMemo.wordsWithWidth,\n      spaceWidth = _useMemo.spaceWidth;\n\n  var wordsByLines = useMemo(function () {\n    if (isXOrYNotValid) {\n      return [];\n    } // Only perform calculations if using features that require them (multiline, scaleToFit)\n\n\n    if (width || scaleToFit) {\n      return wordsWithWidth.reduce(function (result, _ref) {\n        var word = _ref.word,\n            wordWidth = _ref.wordWidth;\n        var currentLine = result[result.length - 1];\n\n        if (currentLine && (width == null || scaleToFit || (currentLine.width || 0) + wordWidth + spaceWidth < width)) {\n          // Word can be added to an existing line\n          currentLine.words.push(word);\n          currentLine.width = currentLine.width || 0;\n          currentLine.width += wordWidth + spaceWidth;\n        } else {\n          // Add first word to line or word is too long to scaleToFit on existing line\n          var newLine = {\n            words: [word],\n            width: wordWidth\n          };\n          result.push(newLine);\n        }\n\n        return result;\n      }, []);\n    }\n\n    return [{\n      words: children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/)\n    }];\n  }, [isXOrYNotValid, width, scaleToFit, children, wordsWithWidth, spaceWidth]);\n  var startDy = useMemo(function () {\n    var startDyStr = isXOrYNotValid ? '' : verticalAnchor === 'start' ? reduceCSSCalc(\"calc(\" + capHeight + \")\") : verticalAnchor === 'middle' ? reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) / 2 + \" * -\" + lineHeight + \" + (\" + capHeight + \" / 2))\") : reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) + \" * -\" + lineHeight + \")\");\n    return startDyStr;\n  }, [isXOrYNotValid, verticalAnchor, capHeight, wordsByLines.length, lineHeight]);\n  var transform = useMemo(function () {\n    var transforms = [];\n\n    if (isXOrYNotValid) {\n      return '';\n    }\n\n    if (isNumber(x) && isNumber(y) && isNumber(width) && scaleToFit && wordsByLines.length > 0) {\n      var lineWidth = wordsByLines[0].width || 1;\n      var sx = width / lineWidth;\n      var sy = sx;\n      var originX = x - sx * x;\n      var originY = y - sy * y;\n      transforms.push(\"matrix(\" + sx + \", 0, 0, \" + sy + \", \" + originX + \", \" + originY + \")\");\n    }\n\n    if (angle) {\n      transforms.push(\"rotate(\" + angle + \", \" + x + \", \" + y + \")\");\n    }\n\n    return transforms.length > 0 ? transforms.join(' ') : '';\n  }, [isXOrYNotValid, x, y, width, scaleToFit, wordsByLines, angle]);\n  return {\n    wordsByLines: wordsByLines,\n    startDy: startDy,\n    transform: transform\n  };\n}"]},"metadata":{},"sourceType":"module"}