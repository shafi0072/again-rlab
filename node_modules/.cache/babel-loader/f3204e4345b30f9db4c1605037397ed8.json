{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { coerceNumber } from '@visx/scale';\n\nfunction animatedValue(animationTrajectory, positionOnScale, scaleMin, scaleMax, scaleHalfwayPoint) {\n  var _ref;\n\n  switch (animationTrajectory) {\n    case 'center':\n      return scaleHalfwayPoint;\n\n    case 'min':\n      return scaleMin != null ? scaleMin : 0;\n\n    case 'max':\n      return scaleMax != null ? scaleMax : 0;\n\n    case 'outside':\n    default:\n      return (_ref = (positionOnScale != null ? positionOnScale : 0) < scaleHalfwayPoint ? scaleMin : scaleMax) != null ? _ref : 0;\n  }\n}\n\nfunction enterUpdate(_ref2) {\n  var from = _ref2.from,\n      to = _ref2.to;\n  return {\n    fromX: from.x,\n    toX: to.x,\n    fromY: from.y,\n    toY: to.y,\n    opacity: 1\n  };\n}\n/**\n * A hook that returns `react-spring` transition config for animating a Line\n * horizontally, vertically, and from a specific starting point.\n */\n\n\nexport default function useLineTransitionConfig(_ref3) {\n  var scale = _ref3.scale,\n      animateXOrY = _ref3.animateXOrY,\n      _ref3$animationTrajec = _ref3.animationTrajectory,\n      initAnimationTrajectory = _ref3$animationTrajec === void 0 ? 'outside' : _ref3$animationTrajec;\n  var shouldAnimateX = animateXOrY === 'x';\n  return useMemo(function () {\n    var _scale$range$map = scale.range().map(coerceNumber),\n        a = _scale$range$map[0],\n        b = _scale$range$map[1];\n\n    var isDescending = b != null && a != null && b < a;\n\n    var _ref4 = isDescending ? [b, a] : [a, b],\n        scaleMin = _ref4[0],\n        scaleMax = _ref4[1];\n\n    var scaleLength = b != null && a != null ? Math.abs(b - a) : 0;\n    var scaleHalfwayPoint = (scaleMin != null ? scaleMin : 0) + scaleLength / 2;\n    var animationTrajectory = initAnimationTrajectory; // correct direction for y-axis which is inverted due to svg coords\n\n    if (!shouldAnimateX && initAnimationTrajectory === 'min') animationTrajectory = 'max';\n    if (!shouldAnimateX && initAnimationTrajectory === 'max') animationTrajectory = 'min';\n\n    var fromLeave = function fromLeave(_ref5) {\n      var from = _ref5.from,\n          to = _ref5.to;\n      return {\n        fromX: shouldAnimateX ? animatedValue(animationTrajectory, from.x, scaleMin, scaleMax, scaleHalfwayPoint) : from.x,\n        toX: shouldAnimateX ? animatedValue(animationTrajectory, from.x, scaleMin, scaleMax, scaleHalfwayPoint) : to.x,\n        fromY: shouldAnimateX ? from.y : animatedValue(animationTrajectory, from.y, scaleMin, scaleMax, scaleHalfwayPoint),\n        toY: shouldAnimateX ? to.y : animatedValue(animationTrajectory, from.y, scaleMin, scaleMax, scaleHalfwayPoint),\n        opacity: 0\n      };\n    };\n\n    return {\n      unique: true,\n      from: fromLeave,\n      leave: fromLeave,\n      enter: enterUpdate,\n      update: enterUpdate\n    };\n  }, [scale, shouldAnimateX, initAnimationTrajectory]);\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/react-spring/esm/spring-configs/useLineTransitionConfig.js"],"names":["React","useMemo","coerceNumber","animatedValue","animationTrajectory","positionOnScale","scaleMin","scaleMax","scaleHalfwayPoint","_ref","enterUpdate","_ref2","from","to","fromX","x","toX","fromY","y","toY","opacity","useLineTransitionConfig","_ref3","scale","animateXOrY","_ref3$animationTrajec","initAnimationTrajectory","shouldAnimateX","_scale$range$map","range","map","a","b","isDescending","_ref4","scaleLength","Math","abs","fromLeave","_ref5","unique","leave","enter","update"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { coerceNumber } from '@visx/scale';\n\nfunction animatedValue(animationTrajectory, positionOnScale, scaleMin, scaleMax, scaleHalfwayPoint) {\n  var _ref;\n\n  switch (animationTrajectory) {\n    case 'center':\n      return scaleHalfwayPoint;\n\n    case 'min':\n      return scaleMin != null ? scaleMin : 0;\n\n    case 'max':\n      return scaleMax != null ? scaleMax : 0;\n\n    case 'outside':\n    default:\n      return (_ref = (positionOnScale != null ? positionOnScale : 0) < scaleHalfwayPoint ? scaleMin : scaleMax) != null ? _ref : 0;\n  }\n}\n\nfunction enterUpdate(_ref2) {\n  var from = _ref2.from,\n      to = _ref2.to;\n  return {\n    fromX: from.x,\n    toX: to.x,\n    fromY: from.y,\n    toY: to.y,\n    opacity: 1\n  };\n}\n\n/**\n * A hook that returns `react-spring` transition config for animating a Line\n * horizontally, vertically, and from a specific starting point.\n */\nexport default function useLineTransitionConfig(_ref3) {\n  var scale = _ref3.scale,\n      animateXOrY = _ref3.animateXOrY,\n      _ref3$animationTrajec = _ref3.animationTrajectory,\n      initAnimationTrajectory = _ref3$animationTrajec === void 0 ? 'outside' : _ref3$animationTrajec;\n  var shouldAnimateX = animateXOrY === 'x';\n  return useMemo(function () {\n    var _scale$range$map = scale.range().map(coerceNumber),\n        a = _scale$range$map[0],\n        b = _scale$range$map[1];\n\n    var isDescending = b != null && a != null && b < a;\n\n    var _ref4 = isDescending ? [b, a] : [a, b],\n        scaleMin = _ref4[0],\n        scaleMax = _ref4[1];\n\n    var scaleLength = b != null && a != null ? Math.abs(b - a) : 0;\n    var scaleHalfwayPoint = (scaleMin != null ? scaleMin : 0) + scaleLength / 2;\n    var animationTrajectory = initAnimationTrajectory; // correct direction for y-axis which is inverted due to svg coords\n\n    if (!shouldAnimateX && initAnimationTrajectory === 'min') animationTrajectory = 'max';\n    if (!shouldAnimateX && initAnimationTrajectory === 'max') animationTrajectory = 'min';\n\n    var fromLeave = function fromLeave(_ref5) {\n      var from = _ref5.from,\n          to = _ref5.to;\n      return {\n        fromX: shouldAnimateX ? animatedValue(animationTrajectory, from.x, scaleMin, scaleMax, scaleHalfwayPoint) : from.x,\n        toX: shouldAnimateX ? animatedValue(animationTrajectory, from.x, scaleMin, scaleMax, scaleHalfwayPoint) : to.x,\n        fromY: shouldAnimateX ? from.y : animatedValue(animationTrajectory, from.y, scaleMin, scaleMax, scaleHalfwayPoint),\n        toY: shouldAnimateX ? to.y : animatedValue(animationTrajectory, from.y, scaleMin, scaleMax, scaleHalfwayPoint),\n        opacity: 0\n      };\n    };\n\n    return {\n      unique: true,\n      from: fromLeave,\n      leave: fromLeave,\n      enter: enterUpdate,\n      update: enterUpdate\n    };\n  }, [scale, shouldAnimateX, initAnimationTrajectory]);\n}"]},"metadata":{},"sourceType":"module"}