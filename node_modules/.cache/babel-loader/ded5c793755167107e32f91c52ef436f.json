{"ast":null,"code":"var _jsxFileName = \"C:\\\\remotePackRlab\\\\remotePackRlab\\\\src\\\\Components\\\\Home\\\\DeviceDashBoard\\\\DeviceDashBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../Shared/Navbar';\nimport DeveiceMeter from '../Locations/DeveiceMeter';\nimport logo from '../../../Resorces/logo_RLAB.png';\nimport './DeviceDashBoard.css';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport db from '../../FirebaseConfig/Firebase';\nimport { useContext } from 'react';\nimport { userContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeviceDashBoard = () => {\n  _s();\n\n  let {\n    format,\n    id\n  } = useParams();\n  const [status, setStatus] = useState([]);\n  const [loading, setLoading] = useState(true); // const [pastData, setPastData] = useState({\n  //   present:true,\n  //   week:false,\n  //   day:false,\n  //   halfDay:false,\n  //   sixH:false,\n  //   oneH:false\n  // })\n\n  const [user, setUser] = useContext(userContext);\n\n  async function arrayFunc(arr, key) {\n    let resultArray = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].dateSocket <= key) {\n        resultArray = await arr[i];\n      }\n    }\n\n    return resultArray;\n  }\n\n  ; //  function for liner search start\n  // finish |^ linear search \n  //shorting data \n\n  useEffect(() => {\n    if (user.present === true) {\n      const userDb = db.collection(\"RealTime\").doc(id).onSnapshot(querySnapshot => {\n        setStatus({ ...querySnapshot.data(),\n          key: querySnapshot.id\n        }); // const maxNumber1 = maxNumber(getDataFirebase);\n      });\n      return userDb;\n    } else if (user.week === true) {\n      // const userDb2 =  db.collection(id).orderBy('dateSocket', 'desc').limit(1999).onSnapshot((querySnapshot) => {\n      //   let getDataFirebase = [];\n      //   querySnapshot.forEach((doc) => {\n      //     getDataFirebase.push({...doc.data(), key:doc.id});\n      //   });\n      //   let UnixTimeFOrToday = Math.floor(Date.now() / 1000);\n      //   let unixToWeek = UnixTimeFOrToday - 604800;\n      //  const Aweek= arrayFunc(getDataFirebase, unixToWeek)\n      //   console.log({Aweek})\n      //     // const maxNumber1 = maxNumber(getDataFirebase);\n      //   return userDb2\n      // });\n      db.collection(\"cities\").where(\"capital\", \"==\", true).get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n        });\n      }).catch(error => {\n        console.log(\"Error getting documents: \", error);\n      });\n    }\n  }, [loading, format, id, user]);\n  console.log({\n    status\n  });\n  console.log('dateSocket', 1627894069369 - 6.048e+8);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-1\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-11 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\",\n        style: {\n          width: '20%'\n        },\n        className: \"mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeveiceMeter, {\n        data: status,\n        pastDataTrig: user,\n        setProps: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeviceDashBoard, \"CPZPek0WU3Y7H58K7ZKpshSrdrY=\", false, function () {\n  return [useParams];\n});\n\n_c = DeviceDashBoard;\nexport default DeviceDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDashBoard\");","map":{"version":3,"sources":["C:/remotePackRlab/remotePackRlab/src/Components/Home/DeviceDashBoard/DeviceDashBoard.js"],"names":["React","useEffect","useState","Navbar","DeveiceMeter","logo","BrowserRouter","Router","Switch","Route","Link","useParams","db","useContext","userContext","DeviceDashBoard","format","id","status","setStatus","loading","setLoading","user","setUser","arrayFunc","arr","key","resultArray","i","length","dateSocket","present","userDb","collection","doc","onSnapshot","querySnapshot","data","week","where","get","then","forEach","console","log","catch","error","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeveiceMeter from '../Locations/DeveiceMeter';\r\n\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport './DeviceDashBoard.css';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nimport db from '../../FirebaseConfig/Firebase'\r\nimport { useContext } from 'react';\r\nimport { userContext } from '../../../App';\r\n\r\n\r\n\r\nconst DeviceDashBoard = () => {\r\n    let { format, id } = useParams();\r\n\r\n\r\n    const [status,setStatus] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    // const [pastData, setPastData] = useState({\r\n    //   present:true,\r\n    //   week:false,\r\n    //   day:false,\r\n    //   halfDay:false,\r\n    //   sixH:false,\r\n    //   oneH:false\r\n    // })\r\n    const [user, setUser] = useContext(userContext)\r\n\r\n   async function arrayFunc(arr,key) {\r\n        let resultArray = [];\r\n       for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].dateSocket <= key){\r\n               resultArray = await arr[i];\r\n            }\r\n        }\r\n        return resultArray\r\n    };\r\n\r\n    //  function for liner search start\r\n    \r\n\r\n    \r\n// finish |^ linear search \r\n//shorting data \r\n\r\n    useEffect(() => {\r\n       if(user.present === true){\r\n        const userDb =  db.collection(\"RealTime\").doc(id).onSnapshot((querySnapshot) => {\r\n            \r\n          setStatus({...querySnapshot.data(), key:querySnapshot.id});\r\n              \r\n           \r\n            // const maxNumber1 = maxNumber(getDataFirebase);\r\n            \r\n        });\r\n        return userDb;\r\n       }\r\n       else if(user.week === true){\r\n        // const userDb2 =  db.collection(id).orderBy('dateSocket', 'desc').limit(1999).onSnapshot((querySnapshot) => {\r\n        //   let getDataFirebase = [];\r\n        //   querySnapshot.forEach((doc) => {\r\n        //     getDataFirebase.push({...doc.data(), key:doc.id});\r\n        //   });\r\n        //   let UnixTimeFOrToday = Math.floor(Date.now() / 1000);\r\n        //   let unixToWeek = UnixTimeFOrToday - 604800;\r\n        //  const Aweek= arrayFunc(getDataFirebase, unixToWeek)\r\n        //   console.log({Aweek})\r\n        //     // const maxNumber1 = maxNumber(getDataFirebase);\r\n        //   return userDb2\r\n        // });\r\n\r\n        db.collection(\"cities\").where(\"capital\", \"==\", true)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            // doc.data() is never undefined for query doc snapshots\r\n            console.log(doc.id, \" => \", doc.data());\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n       }\r\n     \r\n    }, [loading, format, id, user]);\r\n  console.log({status});\r\n  console.log('dateSocket', 1627894069369 - 6.048e+8)\r\n\r\n  \r\n  \r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-1\">\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-11 text-center\">\r\n            <img src={logo} alt=\"\" style={{width:'20%'}} className='mt-5' />\r\n                \r\n                <DeveiceMeter data={status} pastDataTrig={user} setProps = {user}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceDashBoard;"]},"metadata":{},"sourceType":"module"}