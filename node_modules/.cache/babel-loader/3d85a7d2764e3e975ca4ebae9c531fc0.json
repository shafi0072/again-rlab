{"ast":null,"code":"import { timeSecond, timeMinute, timeHour, timeDay, timeYear, timeMonth, timeWeek, utcSecond, utcMinute, utcHour, utcDay, utcWeek, utcMonth, utcYear } from 'd3-time';\nimport isUtcScale from '../utils/isUtcScale';\nvar localTimeIntervals = {\n  day: timeDay,\n  hour: timeHour,\n  minute: timeMinute,\n  month: timeMonth,\n  second: timeSecond,\n  week: timeWeek,\n  year: timeYear\n};\nvar utcIntervals = {\n  day: utcDay,\n  hour: utcHour,\n  minute: utcMinute,\n  month: utcMonth,\n  second: utcSecond,\n  week: utcWeek,\n  year: utcYear\n};\nexport default function applyNice(scale, config) {\n  if ('nice' in config && typeof config.nice !== 'undefined' && 'nice' in scale) {\n    var nice = config.nice;\n\n    if (typeof nice === 'boolean') {\n      if (nice) {\n        scale.nice();\n      }\n    } else if (typeof nice === 'number') {\n      scale.nice(nice);\n    } else {\n      var timeScale = scale;\n      var isUtc = isUtcScale(timeScale);\n\n      if (typeof nice === 'string') {\n        timeScale.nice(isUtc ? utcIntervals[nice] : localTimeIntervals[nice]);\n      } else {\n        var interval = nice.interval,\n            step = nice.step;\n        var parsedInterval = (isUtc ? utcIntervals[interval] : localTimeIntervals[interval]).every(step);\n\n        if (parsedInterval != null) {\n          timeScale.nice(parsedInterval);\n        }\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/scale/esm/operators/nice.js"],"names":["timeSecond","timeMinute","timeHour","timeDay","timeYear","timeMonth","timeWeek","utcSecond","utcMinute","utcHour","utcDay","utcWeek","utcMonth","utcYear","isUtcScale","localTimeIntervals","day","hour","minute","month","second","week","year","utcIntervals","applyNice","scale","config","nice","timeScale","isUtc","interval","step","parsedInterval","every"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,QAApD,EAA8DC,SAA9D,EAAyEC,QAAzE,EAAmFC,SAAnF,EAA8FC,SAA9F,EAAyGC,OAAzG,EAAkHC,MAAlH,EAA0HC,OAA1H,EAAmIC,QAAnI,EAA6IC,OAA7I,QAA4J,SAA5J;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,GAAG,EAAEb,OADkB;AAEvBc,EAAAA,IAAI,EAAEf,QAFiB;AAGvBgB,EAAAA,MAAM,EAAEjB,UAHe;AAIvBkB,EAAAA,KAAK,EAAEd,SAJgB;AAKvBe,EAAAA,MAAM,EAAEpB,UALe;AAMvBqB,EAAAA,IAAI,EAAEf,QANiB;AAOvBgB,EAAAA,IAAI,EAAElB;AAPiB,CAAzB;AASA,IAAImB,YAAY,GAAG;AACjBP,EAAAA,GAAG,EAAEN,MADY;AAEjBO,EAAAA,IAAI,EAAER,OAFW;AAGjBS,EAAAA,MAAM,EAAEV,SAHS;AAIjBW,EAAAA,KAAK,EAAEP,QAJU;AAKjBQ,EAAAA,MAAM,EAAEb,SALS;AAMjBc,EAAAA,IAAI,EAAEV,OANW;AAOjBW,EAAAA,IAAI,EAAET;AAPW,CAAnB;AASA,eAAe,SAASW,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;AAC/C,MAAI,UAAUA,MAAV,IAAoB,OAAOA,MAAM,CAACC,IAAd,KAAuB,WAA3C,IAA0D,UAAUF,KAAxE,EAA+E;AAC7E,QAAIE,IAAI,GAAGD,MAAM,CAACC,IAAlB;;AAEA,QAAI,OAAOA,IAAP,KAAgB,SAApB,EAA+B;AAC7B,UAAIA,IAAJ,EAAU;AACRF,QAAAA,KAAK,CAACE,IAAN;AACD;AACF,KAJD,MAIO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AACnCF,MAAAA,KAAK,CAACE,IAAN,CAAWA,IAAX;AACD,KAFM,MAEA;AACL,UAAIC,SAAS,GAAGH,KAAhB;AACA,UAAII,KAAK,GAAGf,UAAU,CAACc,SAAD,CAAtB;;AAEA,UAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BC,QAAAA,SAAS,CAACD,IAAV,CAAeE,KAAK,GAAGN,YAAY,CAACI,IAAD,CAAf,GAAwBZ,kBAAkB,CAACY,IAAD,CAA9D;AACD,OAFD,MAEO;AACL,YAAIG,QAAQ,GAAGH,IAAI,CAACG,QAApB;AAAA,YACIC,IAAI,GAAGJ,IAAI,CAACI,IADhB;AAEA,YAAIC,cAAc,GAAG,CAACH,KAAK,GAAGN,YAAY,CAACO,QAAD,CAAf,GAA4Bf,kBAAkB,CAACe,QAAD,CAApD,EAAgEG,KAAhE,CAAsEF,IAAtE,CAArB;;AAEA,YAAIC,cAAc,IAAI,IAAtB,EAA4B;AAC1BJ,UAAAA,SAAS,CAACD,IAAV,CAAeK,cAAf;AACD;AACF;AACF;AACF;AACF","sourcesContent":["import { timeSecond, timeMinute, timeHour, timeDay, timeYear, timeMonth, timeWeek, utcSecond, utcMinute, utcHour, utcDay, utcWeek, utcMonth, utcYear } from 'd3-time';\nimport isUtcScale from '../utils/isUtcScale';\nvar localTimeIntervals = {\n  day: timeDay,\n  hour: timeHour,\n  minute: timeMinute,\n  month: timeMonth,\n  second: timeSecond,\n  week: timeWeek,\n  year: timeYear\n};\nvar utcIntervals = {\n  day: utcDay,\n  hour: utcHour,\n  minute: utcMinute,\n  month: utcMonth,\n  second: utcSecond,\n  week: utcWeek,\n  year: utcYear\n};\nexport default function applyNice(scale, config) {\n  if ('nice' in config && typeof config.nice !== 'undefined' && 'nice' in scale) {\n    var nice = config.nice;\n\n    if (typeof nice === 'boolean') {\n      if (nice) {\n        scale.nice();\n      }\n    } else if (typeof nice === 'number') {\n      scale.nice(nice);\n    } else {\n      var timeScale = scale;\n      var isUtc = isUtcScale(timeScale);\n\n      if (typeof nice === 'string') {\n        timeScale.nice(isUtc ? utcIntervals[nice] : localTimeIntervals[nice]);\n      } else {\n        var interval = nice.interval,\n            step = nice.step;\n        var parsedInterval = (isUtc ? utcIntervals[interval] : localTimeIntervals[interval]).every(step);\n\n        if (parsedInterval != null) {\n          timeScale.nice(parsedInterval);\n        }\n      }\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}