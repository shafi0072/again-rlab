{"ast":null,"code":"import { getFirstItem, getSecondItem } from '@visx/shape/lib/util/accessors';\nimport findNearestDatumY from './findNearestDatumY';\nimport findNearestDatumX from './findNearestDatumX';\n/**\n * This is a wrapper around findNearestDatumX/Y for BarStack, accounting for a\n * Bar's d0 and d1, not just d1 (which findNearestDatum uses). Additionally,\n * returns the BarSeries original `Datum`, not the `BarStackDatum` so\n * Tooltip typing is correct.\n */\n\nexport default function findNearestStackDatum(nearestDatumArgs, seriesData, horizontal) {\n  var _xScale, _xScale2, _yScale, _yScale2;\n\n  var xScale = nearestDatumArgs.xScale,\n      yScale = nearestDatumArgs.yScale,\n      point = nearestDatumArgs.point;\n  var datum = (horizontal ? findNearestDatumY : findNearestDatumX)(nearestDatumArgs);\n  var seriesDatum = (datum == null ? void 0 : datum.index) == null ? null : seriesData[datum.index];\n  return datum && seriesDatum && point ? {\n    index: datum.index,\n    datum: seriesDatum,\n    distanceX: horizontal // if mouse is ON the stack series, set 0 distance\n    ? point.x >= ((_xScale = xScale(getFirstItem(datum.datum))) != null ? _xScale : Infinity) && point.x <= ((_xScale2 = xScale(getSecondItem(datum.datum))) != null ? _xScale2 : -Infinity) ? 0 : datum.distanceX : datum.distanceX,\n    distanceY: horizontal ? datum.distanceY // if mouse is ON the stack series, set 0 distance\n    : point.y <= ((_yScale = yScale(getFirstItem(datum.datum))) != null ? _yScale : -Infinity) && point.y >= ((_yScale2 = yScale(getSecondItem(datum.datum))) != null ? _yScale2 : Infinity) ? 0 : datum.distanceY\n  } : null;\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/xychart/esm/utils/findNearestStackDatum.js"],"names":["getFirstItem","getSecondItem","findNearestDatumY","findNearestDatumX","findNearestStackDatum","nearestDatumArgs","seriesData","horizontal","_xScale","_xScale2","_yScale","_yScale2","xScale","yScale","point","datum","seriesDatum","index","distanceX","x","Infinity","distanceY","y"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gCAA5C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,qBAAT,CAA+BC,gBAA/B,EAAiDC,UAAjD,EAA6DC,UAA7D,EAAyE;AACtF,MAAIC,OAAJ,EAAaC,QAAb,EAAuBC,OAAvB,EAAgCC,QAAhC;;AAEA,MAAIC,MAAM,GAAGP,gBAAgB,CAACO,MAA9B;AAAA,MACIC,MAAM,GAAGR,gBAAgB,CAACQ,MAD9B;AAAA,MAEIC,KAAK,GAAGT,gBAAgB,CAACS,KAF7B;AAGA,MAAIC,KAAK,GAAG,CAACR,UAAU,GAAGL,iBAAH,GAAuBC,iBAAlC,EAAqDE,gBAArD,CAAZ;AACA,MAAIW,WAAW,GAAG,CAACD,KAAK,IAAI,IAAT,GAAgB,KAAK,CAArB,GAAyBA,KAAK,CAACE,KAAhC,KAA0C,IAA1C,GAAiD,IAAjD,GAAwDX,UAAU,CAACS,KAAK,CAACE,KAAP,CAApF;AACA,SAAOF,KAAK,IAAIC,WAAT,IAAwBF,KAAxB,GAAgC;AACrCG,IAAAA,KAAK,EAAEF,KAAK,CAACE,KADwB;AAErCF,IAAAA,KAAK,EAAEC,WAF8B;AAGrCE,IAAAA,SAAS,EAAEX,UAAU,CAAC;AAAD,MACnBO,KAAK,CAACK,CAAN,KAAY,CAACX,OAAO,GAAGI,MAAM,CAACZ,YAAY,CAACe,KAAK,CAACA,KAAP,CAAb,CAAjB,KAAiD,IAAjD,GAAwDP,OAAxD,GAAkEY,QAA9E,KAA2FN,KAAK,CAACK,CAAN,KAAY,CAACV,QAAQ,GAAGG,MAAM,CAACX,aAAa,CAACc,KAAK,CAACA,KAAP,CAAd,CAAlB,KAAmD,IAAnD,GAA0DN,QAA1D,GAAqE,CAACW,QAAlF,CAA3F,GAAyL,CAAzL,GAA6LL,KAAK,CAACG,SADhL,GAC4LH,KAAK,CAACG,SAJlL;AAKrCG,IAAAA,SAAS,EAAEd,UAAU,GAAGQ,KAAK,CAACM,SAAT,CAAmB;AAAnB,MACnBP,KAAK,CAACQ,CAAN,KAAY,CAACZ,OAAO,GAAGG,MAAM,CAACb,YAAY,CAACe,KAAK,CAACA,KAAP,CAAb,CAAjB,KAAiD,IAAjD,GAAwDL,OAAxD,GAAkE,CAACU,QAA/E,KAA4FN,KAAK,CAACQ,CAAN,KAAY,CAACX,QAAQ,GAAGE,MAAM,CAACZ,aAAa,CAACc,KAAK,CAACA,KAAP,CAAd,CAAlB,KAAmD,IAAnD,GAA0DJ,QAA1D,GAAqES,QAAjF,CAA5F,GAAyL,CAAzL,GAA6LL,KAAK,CAACM;AANhK,GAAhC,GAOH,IAPJ;AAQD","sourcesContent":["import { getFirstItem, getSecondItem } from '@visx/shape/lib/util/accessors';\nimport findNearestDatumY from './findNearestDatumY';\nimport findNearestDatumX from './findNearestDatumX';\n\n/**\n * This is a wrapper around findNearestDatumX/Y for BarStack, accounting for a\n * Bar's d0 and d1, not just d1 (which findNearestDatum uses). Additionally,\n * returns the BarSeries original `Datum`, not the `BarStackDatum` so\n * Tooltip typing is correct.\n */\nexport default function findNearestStackDatum(nearestDatumArgs, seriesData, horizontal) {\n  var _xScale, _xScale2, _yScale, _yScale2;\n\n  var xScale = nearestDatumArgs.xScale,\n      yScale = nearestDatumArgs.yScale,\n      point = nearestDatumArgs.point;\n  var datum = (horizontal ? findNearestDatumY : findNearestDatumX)(nearestDatumArgs);\n  var seriesDatum = (datum == null ? void 0 : datum.index) == null ? null : seriesData[datum.index];\n  return datum && seriesDatum && point ? {\n    index: datum.index,\n    datum: seriesDatum,\n    distanceX: horizontal // if mouse is ON the stack series, set 0 distance\n    ? point.x >= ((_xScale = xScale(getFirstItem(datum.datum))) != null ? _xScale : Infinity) && point.x <= ((_xScale2 = xScale(getSecondItem(datum.datum))) != null ? _xScale2 : -Infinity) ? 0 : datum.distanceX : datum.distanceX,\n    distanceY: horizontal ? datum.distanceY // if mouse is ON the stack series, set 0 distance\n    : point.y <= ((_yScale = yScale(getFirstItem(datum.datum))) != null ? _yScale : -Infinity) && point.y >= ((_yScale2 = yScale(getSecondItem(datum.datum))) != null ? _yScale2 : Infinity) ? 0 : datum.distanceY\n  } : null;\n}"]},"metadata":{},"sourceType":"module"}