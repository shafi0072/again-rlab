{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rlab\\\\client\\\\src\\\\Components\\\\Home\\\\DeviceDashBoard\\\\DeviceDashBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../Shared/Navbar';\nimport DeveiceMeter from '../Locations/DeveiceMeter';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\n    authDomain: \"test1-68872.firebaseapp.com\",\n    projectId: \"test1-68872\",\n    storageBucket: \"test1-68872.appspot.com\",\n    messagingSenderId: \"504703093399\",\n    appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\n  });\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nconst db = firebase.firestore();\nconst {\n  id\n} = useParams;\n\nconst DeviceDashBoard = () => {\n  _s();\n\n  const [status, setStatus] = useState([]);\n\n  function arrayFunc(arr, key) {\n    let resultArray;\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].DeviceID === key) {\n        resultArray = arr;\n      }\n    }\n\n    return resultArray;\n  }\n\n  ;\n  useEffect(() => {\n    const userDb = db.collection(\"ENER000001\").onSnapshot(querySnapshot => {\n      const getDataFirebase = [];\n      querySnapshot.forEach(doc => {\n        getDataFirebase.push({ ...doc.data(),\n          key: doc.id\n        });\n      });\n      setStatus(getDataFirebase);\n\n      if (getDataFirebase.length > 0) {\n        const functionalArray = arrayFunc(getDataFirebase, 'rO3B788gfkGzlCZ1mxOJ');\n        console.log();\n      }\n    });\n    return userDb;\n  }, []);\n  console.log(status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3\",\n      children: /*#__PURE__*/_jsxDEV(DeveiceMeter, {\n        data: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeviceDashBoard, \"c2rpNyn7yfQH8Xoqcl7KtcjbCKY=\");\n\n_c = DeviceDashBoard;\nexport default DeviceDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDashBoard\");","map":{"version":3,"sources":["F:/Rlab/client/src/Components/Home/DeviceDashBoard/DeviceDashBoard.js"],"names":["React","useEffect","useState","Navbar","DeveiceMeter","firebase","useParams","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","firestore","id","DeviceDashBoard","status","setStatus","arrayFunc","arr","key","resultArray","i","DeviceID","userDb","collection","onSnapshot","querySnapshot","getDataFirebase","forEach","doc","push","data","functionalArray","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,IAAI,CAACD,QAAQ,CAACE,IAAT,CAAcC,MAAnB,EAA2B;AACvBH,EAAAA,QAAQ,CAACI,aAAT,CAAuB;AACnBC,IAAAA,MAAM,EAAE,yCADW;AAEnBC,IAAAA,UAAU,EAAE,6BAFO;AAGnBC,IAAAA,SAAS,EAAE,aAHQ;AAInBC,IAAAA,aAAa,EAAE,yBAJI;AAKnBC,IAAAA,iBAAiB,EAAE,cALA;AAMnBC,IAAAA,KAAK,EAAE;AANY,GAAvB;AAQF,CATF,MASO;AACHV,EAAAA,QAAQ,CAACW,GAAT,GADG,CACa;AAClB;;AAEF,MAAMC,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAX;AACA,MAAM;AAACC,EAAAA;AAAD,IAAOb,SAAb;;AAEA,MAAMc,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBpB,QAAQ,CAAC,EAAD,CAAnC;;AAEA,WAASqB,SAAT,CAAmBC,GAAnB,EAAuBC,GAAvB,EAA4B;AACxB,QAAIC,WAAJ;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,GAAG,CAAChB,MAAvB,EAA+BmB,CAAC,EAAhC,EAAmC;AAC/B,UAAGH,GAAG,CAACG,CAAD,CAAH,CAAOC,QAAP,KAAoBH,GAAvB,EAA2B;AACvBC,QAAAA,WAAW,GAAGF,GAAd;AACH;AACJ;;AACD,WAAOE,WAAP;AACH;;AAAA;AACDzB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM4B,MAAM,GAAIZ,EAAE,CAACa,UAAH,CAAc,YAAd,EAA4BC,UAA5B,CAAwCC,aAAD,IAAmB;AACtE,YAAMC,eAAe,GAAG,EAAxB;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC7BF,QAAAA,eAAe,CAACG,IAAhB,CAAqB,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;AAAgBZ,UAAAA,GAAG,EAACU,GAAG,CAAChB;AAAxB,SAArB;AACD,OAFD;AAGAG,MAAAA,SAAS,CAACW,eAAD,CAAT;;AACA,UAAGA,eAAe,CAACzB,MAAhB,GAAyB,CAA5B,EAA8B;AAC1B,cAAM8B,eAAe,GAAGf,SAAS,CAACU,eAAD,EAAkB,sBAAlB,CAAjC;AACAM,QAAAA,OAAO,CAACC,GAAR;AACH;AACJ,KAVe,CAAhB;AAYD,WAAOX,MAAP;AACF,GAfQ,EAeN,EAfM,CAAT;AAgBAU,EAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvCD;;GAAMD,e;;KAAAA,e;AAyCN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeveiceMeter from '../Locations/DeveiceMeter';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\nconst {id} = useParams;\r\n\r\nconst DeviceDashBoard = () => {\r\n    const [status,setStatus] = useState([])\r\n\r\n    function arrayFunc(arr,key) {\r\n        let resultArray;\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].DeviceID === key){\r\n                resultArray = arr\r\n            }\r\n        }\r\n        return resultArray\r\n    };\r\n    useEffect(() => {\r\n        \r\n        const userDb =  db.collection(\"ENER000001\").onSnapshot((querySnapshot) => {\r\n            const getDataFirebase = [];\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setStatus(getDataFirebase)\r\n            if(getDataFirebase.length > 0){\r\n                const functionalArray = arrayFunc(getDataFirebase, 'rO3B788gfkGzlCZ1mxOJ')\r\n                console.log();\r\n            }\r\n        });\r\n        \r\n       return userDb;\r\n    }, []);\r\n    console.log(status);\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-3\">\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                <DeveiceMeter data={status}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceDashBoard;"]},"metadata":{},"sourceType":"module"}