{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { LinePath } from '@visx/shape';\nimport Area from '@visx/shape/lib/shapes/Area';\nimport { coerceNumber } from '@visx/scale';\nimport { getFirstItem, getSecondItem } from '@visx/shape/lib/util/accessors';\nimport DataContext from '../../../context/DataContext';\nimport { BaseGlyphSeries } from './BaseGlyphSeries';\nimport useStackedData from '../../../hooks/useStackedData';\nimport { getStackValue } from '../../../utils/combineBarStackData';\nimport isValidNumber from '../../../typeguards/isValidNumber';\nimport findNearestStackDatum from '../../../utils/findNearestStackDatum';\nimport { AREASTACK_EVENT_SOURCE, XYCHART_EVENT_SOURCE } from '../../../constants';\nimport useSeriesEvents from '../../../hooks/useSeriesEvents';\nimport defaultRenderGlyph from './defaultRenderGlyph';\nimport getScaleBandwidth from '../../../utils/getScaleBandwidth';\n\nvar identity = function identity(_) {\n  return _;\n};\n\nfunction BaseAreaStack(_ref) {\n  var _ref$PathComponent = _ref.PathComponent,\n      PathComponent = _ref$PathComponent === void 0 ? 'path' : _ref$PathComponent,\n      children = _ref.children,\n      curve = _ref.curve,\n      _ref$enableEvents = _ref.enableEvents,\n      enableEvents = _ref$enableEvents === void 0 ? true : _ref$enableEvents,\n      offset = _ref.offset,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onPointerMove = _ref.onPointerMove,\n      onPointerOut = _ref.onPointerOut,\n      onPointerUp = _ref.onPointerUp,\n      order = _ref.order,\n      _ref$renderLine = _ref.renderLine,\n      renderLine = _ref$renderLine === void 0 ? true : _ref$renderLine;\n\n  var _ref2 = useContext(DataContext),\n      colorScale = _ref2.colorScale,\n      dataRegistry = _ref2.dataRegistry,\n      horizontal = _ref2.horizontal,\n      xScale = _ref2.xScale,\n      yScale = _ref2.yScale,\n      theme = _ref2.theme;\n\n  var _useStackedData = useStackedData({\n    children: children,\n    order: order,\n    offset: offset\n  }),\n      dataKeys = _useStackedData.dataKeys,\n      seriesChildren = _useStackedData.seriesChildren,\n      stackedData = _useStackedData.stackedData; // accessor functions for the stack generator\n\n\n  var accessors = useMemo(function () {\n    var xOffset = getScaleBandwidth(xScale) / 2;\n    var yOffset = getScaleBandwidth(yScale) / 2;\n    return horizontal ? {\n      y: function y(d) {\n        var _coerceNumber;\n\n        return ((_coerceNumber = coerceNumber(yScale(getStackValue(d.data)))) != null ? _coerceNumber : 0) + yOffset;\n      },\n      x0: function x0(d) {\n        var _coerceNumber2;\n\n        return ((_coerceNumber2 = coerceNumber(xScale(getFirstItem(d)))) != null ? _coerceNumber2 : 0) + xOffset;\n      },\n      x1: function x1(d) {\n        var _coerceNumber3;\n\n        return ((_coerceNumber3 = coerceNumber(xScale(getSecondItem(d)))) != null ? _coerceNumber3 : 0) + xOffset;\n      },\n      defined: function defined(d) {\n        return isValidNumber(yScale(getStackValue(d.data))) && isValidNumber(xScale(getSecondItem(d)));\n      }\n    } : {\n      x: function x(d) {\n        var _coerceNumber4;\n\n        return ((_coerceNumber4 = coerceNumber(xScale(getStackValue(d.data)))) != null ? _coerceNumber4 : 0) + xOffset;\n      },\n      y0: function y0(d) {\n        var _coerceNumber5;\n\n        return ((_coerceNumber5 = coerceNumber(yScale(getFirstItem(d)))) != null ? _coerceNumber5 : 0) + yOffset;\n      },\n      y1: function y1(d) {\n        var _coerceNumber6;\n\n        return ((_coerceNumber6 = coerceNumber(yScale(getSecondItem(d)))) != null ? _coerceNumber6 : 0) + yOffset;\n      },\n      defined: function defined(d) {\n        return isValidNumber(xScale(getStackValue(d.data))) && isValidNumber(yScale(getSecondItem(d)));\n      }\n    };\n  }, [xScale, yScale, horizontal]); // pull out all area + line props for each dataKey\n\n  var stacks = useMemo(function () {\n    return stackedData.map(function (stack, stackIndex) {\n      var _ref4, _colorScale, _theme$colors;\n\n      var areaSeries = seriesChildren.find(function (child) {\n        return child.props.dataKey === stack.key;\n      });\n\n      var _ref3 = (areaSeries == null ? void 0 : areaSeries.props) || {},\n          data = _ref3.data,\n          dataKey = _ref3.dataKey,\n          xAccessor = _ref3.xAccessor,\n          yAccessor = _ref3.yAccessor,\n          _ = _ref3.curve,\n          __ = _ref3.PathComponent,\n          lineProps = _ref3.lineProps,\n          ___ = _ref3.renderLine,\n          svgPathProps = _objectWithoutPropertiesLoose(_ref3, [\"data\", \"dataKey\", \"xAccessor\", \"yAccessor\", \"curve\", \"PathComponent\", \"lineProps\", \"renderLine\"]);\n\n      var areaProps = _extends({\n        fill: (_ref4 = (_colorScale = colorScale == null ? void 0 : colorScale(stack.key)) != null ? _colorScale : theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors[0]) != null ? _ref4 : '#222'\n      }, svgPathProps);\n\n      return {\n        key: stackIndex + \"-\" + stack.key,\n        accessors: accessors,\n        data: stack,\n        areaProps: areaProps,\n        lineProps: lineProps\n      };\n    });\n  }, [stackedData, accessors, colorScale, seriesChildren, theme]); // custom logic to find the nearest AreaStackDatum (context) and return the original Datum (props)\n\n  var findNearestDatum = useCallback(function (params) {\n    var _seriesChildren$find, _seriesChildren$find$;\n\n    var childData = (_seriesChildren$find = seriesChildren.find(function (child) {\n      return child.props.dataKey === params.dataKey;\n    })) == null ? void 0 : (_seriesChildren$find$ = _seriesChildren$find.props) == null ? void 0 : _seriesChildren$find$.data;\n    return childData ? findNearestStackDatum(params, childData, horizontal) : null;\n  }, [seriesChildren, horizontal]);\n  var ownEventSourceKey = AREASTACK_EVENT_SOURCE + \"-\" + dataKeys.join('-');\n  var eventEmitters = useSeriesEvents({\n    dataKey: dataKeys,\n    enableEvents: enableEvents,\n    // @ts-ignore Datum input + return type are expected to be the same type but they differ\n    // for AreaStack (registry data is StackedDatum, return type is user Datum)\n    findNearestDatum: findNearestDatum,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onPointerMove: onPointerMove,\n    onPointerOut: onPointerOut,\n    onPointerUp: onPointerUp,\n    source: ownEventSourceKey,\n    allowedSources: [XYCHART_EVENT_SOURCE, ownEventSourceKey]\n  }); // render invisible glyphs for focusing if onFocus/onBlur are defined\n\n  var captureFocusEvents = Boolean(onFocus || onBlur);\n  var renderGlyphs = useCallback(function (_ref5) {\n    var glyphs = _ref5.glyphs;\n    return captureFocusEvents ? glyphs.map(function (glyph) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: glyph.key\n      }, defaultRenderGlyph(_extends({}, glyph, {\n        color: 'transparent',\n        onFocus: eventEmitters.onFocus,\n        onBlur: eventEmitters.onBlur\n      })));\n    }) : null;\n  }, [captureFocusEvents, eventEmitters.onFocus, eventEmitters.onBlur]); // if scales and data are not available in the registry, bail\n\n  if (dataKeys.some(function (key) {\n    return dataRegistry.get(key) == null;\n  }) || !xScale || !yScale || !colorScale) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"g\", {\n    className: \"visx-area-stack\"\n  }, stacks.map(function (stack) {\n    return /*#__PURE__*/React.createElement(Area, _extends({\n      key: stack.key,\n      curve: curve\n    }, stack.accessors), function (_ref6) {\n      var path = _ref6.path;\n      return /*#__PURE__*/React.createElement(PathComponent, _extends({\n        className: \"visx-area\",\n        stroke: \"transparent\",\n        d: path(stack.data) || ''\n      }, stack.areaProps, eventEmitters));\n    });\n  }), renderLine && stacks.map(function (stack) {\n    return /*#__PURE__*/React.createElement(LinePath, _extends({\n      key: \"line-\" + stack.key // note: this currently doesn't work well for offset=wiggle\n      // because it only draws a single line. with two lines you\n      // get overlap across stacks :/\n      ,\n      x: stack.accessors.x || stack.accessors.x1,\n      y: stack.accessors.y || stack.accessors.y1,\n      defined: stack.accessors.defined,\n      curve: curve\n    }, stack.lineProps), function (_ref7) {\n      var path = _ref7.path;\n      return /*#__PURE__*/React.createElement(PathComponent, _extends({\n        className: \"visx-line\",\n        fill: \"transparent\",\n        stroke: stack.areaProps.fill,\n        strokeWidth: 2,\n        pointerEvents: \"none\"\n      }, stack.lineProps, {\n        d: path(stack.data) || ''\n      }));\n    });\n  }), captureFocusEvents && stacks.map(function (_, i) {\n    // render in reverse stack order tab to top-values first\n    var stack = stacks[stacks.length - i - 1];\n    return /*#__PURE__*/React.createElement(BaseGlyphSeries, {\n      key: \"glyphs-\" + stack.key,\n      dataKey: stack.key,\n      data: stack.data,\n      xAccessor: stack.accessors.x || stack.accessors.x1,\n      yAccessor: stack.accessors.y || stack.accessors.y1 // accessors include scaling, so just return the scaled value\n      ,\n      xScale: identity,\n      yScale: identity,\n      renderGlyphs: renderGlyphs\n    });\n  }));\n}\n\nBaseAreaStack.propTypes = {\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]).isRequired,\n  renderLine: _pt.bool\n};\nexport default BaseAreaStack;","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/xychart/esm/components/series/private/BaseAreaStack.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","useCallback","useContext","useMemo","LinePath","Area","coerceNumber","getFirstItem","getSecondItem","DataContext","BaseGlyphSeries","useStackedData","getStackValue","isValidNumber","findNearestStackDatum","AREASTACK_EVENT_SOURCE","XYCHART_EVENT_SOURCE","useSeriesEvents","defaultRenderGlyph","getScaleBandwidth","identity","_","BaseAreaStack","_ref","_ref$PathComponent","PathComponent","children","curve","_ref$enableEvents","enableEvents","offset","onBlur","onFocus","onPointerMove","onPointerOut","onPointerUp","order","_ref$renderLine","renderLine","_ref2","colorScale","dataRegistry","horizontal","xScale","yScale","theme","_useStackedData","dataKeys","seriesChildren","stackedData","accessors","xOffset","yOffset","y","d","_coerceNumber","data","x0","_coerceNumber2","x1","_coerceNumber3","defined","x","_coerceNumber4","y0","_coerceNumber5","y1","_coerceNumber6","stacks","map","stack","stackIndex","_ref4","_colorScale","_theme$colors","areaSeries","find","child","props","dataKey","_ref3","xAccessor","yAccessor","__","lineProps","___","svgPathProps","areaProps","fill","colors","findNearestDatum","params","_seriesChildren$find","_seriesChildren$find$","childData","ownEventSourceKey","join","eventEmitters","allowedSources","captureFocusEvents","Boolean","renderGlyphs","_ref5","glyphs","glyph","createElement","Fragment","color","some","get","className","_ref6","path","stroke","_ref7","strokeWidth","pointerEvents","propTypes","oneOfType","element","arrayOf","isRequired","bool"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { LinePath } from '@visx/shape';\nimport Area from '@visx/shape/lib/shapes/Area';\nimport { coerceNumber } from '@visx/scale';\nimport { getFirstItem, getSecondItem } from '@visx/shape/lib/util/accessors';\nimport DataContext from '../../../context/DataContext';\nimport { BaseGlyphSeries } from './BaseGlyphSeries';\nimport useStackedData from '../../../hooks/useStackedData';\nimport { getStackValue } from '../../../utils/combineBarStackData';\nimport isValidNumber from '../../../typeguards/isValidNumber';\nimport findNearestStackDatum from '../../../utils/findNearestStackDatum';\nimport { AREASTACK_EVENT_SOURCE, XYCHART_EVENT_SOURCE } from '../../../constants';\nimport useSeriesEvents from '../../../hooks/useSeriesEvents';\nimport defaultRenderGlyph from './defaultRenderGlyph';\nimport getScaleBandwidth from '../../../utils/getScaleBandwidth';\n\nvar identity = function identity(_) {\n  return _;\n};\n\nfunction BaseAreaStack(_ref) {\n  var _ref$PathComponent = _ref.PathComponent,\n      PathComponent = _ref$PathComponent === void 0 ? 'path' : _ref$PathComponent,\n      children = _ref.children,\n      curve = _ref.curve,\n      _ref$enableEvents = _ref.enableEvents,\n      enableEvents = _ref$enableEvents === void 0 ? true : _ref$enableEvents,\n      offset = _ref.offset,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onPointerMove = _ref.onPointerMove,\n      onPointerOut = _ref.onPointerOut,\n      onPointerUp = _ref.onPointerUp,\n      order = _ref.order,\n      _ref$renderLine = _ref.renderLine,\n      renderLine = _ref$renderLine === void 0 ? true : _ref$renderLine;\n\n  var _ref2 = useContext(DataContext),\n      colorScale = _ref2.colorScale,\n      dataRegistry = _ref2.dataRegistry,\n      horizontal = _ref2.horizontal,\n      xScale = _ref2.xScale,\n      yScale = _ref2.yScale,\n      theme = _ref2.theme;\n\n  var _useStackedData = useStackedData({\n    children: children,\n    order: order,\n    offset: offset\n  }),\n      dataKeys = _useStackedData.dataKeys,\n      seriesChildren = _useStackedData.seriesChildren,\n      stackedData = _useStackedData.stackedData; // accessor functions for the stack generator\n\n\n  var accessors = useMemo(function () {\n    var xOffset = getScaleBandwidth(xScale) / 2;\n    var yOffset = getScaleBandwidth(yScale) / 2;\n    return horizontal ? {\n      y: function y(d) {\n        var _coerceNumber;\n\n        return ((_coerceNumber = coerceNumber(yScale(getStackValue(d.data)))) != null ? _coerceNumber : 0) + yOffset;\n      },\n      x0: function x0(d) {\n        var _coerceNumber2;\n\n        return ((_coerceNumber2 = coerceNumber(xScale(getFirstItem(d)))) != null ? _coerceNumber2 : 0) + xOffset;\n      },\n      x1: function x1(d) {\n        var _coerceNumber3;\n\n        return ((_coerceNumber3 = coerceNumber(xScale(getSecondItem(d)))) != null ? _coerceNumber3 : 0) + xOffset;\n      },\n      defined: function defined(d) {\n        return isValidNumber(yScale(getStackValue(d.data))) && isValidNumber(xScale(getSecondItem(d)));\n      }\n    } : {\n      x: function x(d) {\n        var _coerceNumber4;\n\n        return ((_coerceNumber4 = coerceNumber(xScale(getStackValue(d.data)))) != null ? _coerceNumber4 : 0) + xOffset;\n      },\n      y0: function y0(d) {\n        var _coerceNumber5;\n\n        return ((_coerceNumber5 = coerceNumber(yScale(getFirstItem(d)))) != null ? _coerceNumber5 : 0) + yOffset;\n      },\n      y1: function y1(d) {\n        var _coerceNumber6;\n\n        return ((_coerceNumber6 = coerceNumber(yScale(getSecondItem(d)))) != null ? _coerceNumber6 : 0) + yOffset;\n      },\n      defined: function defined(d) {\n        return isValidNumber(xScale(getStackValue(d.data))) && isValidNumber(yScale(getSecondItem(d)));\n      }\n    };\n  }, [xScale, yScale, horizontal]); // pull out all area + line props for each dataKey\n\n  var stacks = useMemo(function () {\n    return stackedData.map(function (stack, stackIndex) {\n      var _ref4, _colorScale, _theme$colors;\n\n      var areaSeries = seriesChildren.find(function (child) {\n        return child.props.dataKey === stack.key;\n      });\n\n      var _ref3 = (areaSeries == null ? void 0 : areaSeries.props) || {},\n          data = _ref3.data,\n          dataKey = _ref3.dataKey,\n          xAccessor = _ref3.xAccessor,\n          yAccessor = _ref3.yAccessor,\n          _ = _ref3.curve,\n          __ = _ref3.PathComponent,\n          lineProps = _ref3.lineProps,\n          ___ = _ref3.renderLine,\n          svgPathProps = _objectWithoutPropertiesLoose(_ref3, [\"data\", \"dataKey\", \"xAccessor\", \"yAccessor\", \"curve\", \"PathComponent\", \"lineProps\", \"renderLine\"]);\n\n      var areaProps = _extends({\n        fill: (_ref4 = (_colorScale = colorScale == null ? void 0 : colorScale(stack.key)) != null ? _colorScale : theme == null ? void 0 : (_theme$colors = theme.colors) == null ? void 0 : _theme$colors[0]) != null ? _ref4 : '#222'\n      }, svgPathProps);\n\n      return {\n        key: stackIndex + \"-\" + stack.key,\n        accessors: accessors,\n        data: stack,\n        areaProps: areaProps,\n        lineProps: lineProps\n      };\n    });\n  }, [stackedData, accessors, colorScale, seriesChildren, theme]); // custom logic to find the nearest AreaStackDatum (context) and return the original Datum (props)\n\n  var findNearestDatum = useCallback(function (params) {\n    var _seriesChildren$find, _seriesChildren$find$;\n\n    var childData = (_seriesChildren$find = seriesChildren.find(function (child) {\n      return child.props.dataKey === params.dataKey;\n    })) == null ? void 0 : (_seriesChildren$find$ = _seriesChildren$find.props) == null ? void 0 : _seriesChildren$find$.data;\n    return childData ? findNearestStackDatum(params, childData, horizontal) : null;\n  }, [seriesChildren, horizontal]);\n  var ownEventSourceKey = AREASTACK_EVENT_SOURCE + \"-\" + dataKeys.join('-');\n  var eventEmitters = useSeriesEvents({\n    dataKey: dataKeys,\n    enableEvents: enableEvents,\n    // @ts-ignore Datum input + return type are expected to be the same type but they differ\n    // for AreaStack (registry data is StackedDatum, return type is user Datum)\n    findNearestDatum: findNearestDatum,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onPointerMove: onPointerMove,\n    onPointerOut: onPointerOut,\n    onPointerUp: onPointerUp,\n    source: ownEventSourceKey,\n    allowedSources: [XYCHART_EVENT_SOURCE, ownEventSourceKey]\n  }); // render invisible glyphs for focusing if onFocus/onBlur are defined\n\n  var captureFocusEvents = Boolean(onFocus || onBlur);\n  var renderGlyphs = useCallback(function (_ref5) {\n    var glyphs = _ref5.glyphs;\n    return captureFocusEvents ? glyphs.map(function (glyph) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: glyph.key\n      }, defaultRenderGlyph(_extends({}, glyph, {\n        color: 'transparent',\n        onFocus: eventEmitters.onFocus,\n        onBlur: eventEmitters.onBlur\n      })));\n    }) : null;\n  }, [captureFocusEvents, eventEmitters.onFocus, eventEmitters.onBlur]); // if scales and data are not available in the registry, bail\n\n  if (dataKeys.some(function (key) {\n    return dataRegistry.get(key) == null;\n  }) || !xScale || !yScale || !colorScale) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"g\", {\n    className: \"visx-area-stack\"\n  }, stacks.map(function (stack) {\n    return /*#__PURE__*/React.createElement(Area, _extends({\n      key: stack.key,\n      curve: curve\n    }, stack.accessors), function (_ref6) {\n      var path = _ref6.path;\n      return /*#__PURE__*/React.createElement(PathComponent, _extends({\n        className: \"visx-area\",\n        stroke: \"transparent\",\n        d: path(stack.data) || ''\n      }, stack.areaProps, eventEmitters));\n    });\n  }), renderLine && stacks.map(function (stack) {\n    return /*#__PURE__*/React.createElement(LinePath, _extends({\n      key: \"line-\" + stack.key // note: this currently doesn't work well for offset=wiggle\n      // because it only draws a single line. with two lines you\n      // get overlap across stacks :/\n      ,\n      x: stack.accessors.x || stack.accessors.x1,\n      y: stack.accessors.y || stack.accessors.y1,\n      defined: stack.accessors.defined,\n      curve: curve\n    }, stack.lineProps), function (_ref7) {\n      var path = _ref7.path;\n      return /*#__PURE__*/React.createElement(PathComponent, _extends({\n        className: \"visx-line\",\n        fill: \"transparent\",\n        stroke: stack.areaProps.fill,\n        strokeWidth: 2,\n        pointerEvents: \"none\"\n      }, stack.lineProps, {\n        d: path(stack.data) || ''\n      }));\n    });\n  }), captureFocusEvents && stacks.map(function (_, i) {\n    // render in reverse stack order tab to top-values first\n    var stack = stacks[stacks.length - i - 1];\n    return /*#__PURE__*/React.createElement(BaseGlyphSeries, {\n      key: \"glyphs-\" + stack.key,\n      dataKey: stack.key,\n      data: stack.data,\n      xAccessor: stack.accessors.x || stack.accessors.x1,\n      yAccessor: stack.accessors.y || stack.accessors.y1 // accessors include scaling, so just return the scaled value\n      ,\n      xScale: identity,\n      yScale: identity,\n      renderGlyphs: renderGlyphs\n    });\n  }));\n}\n\nBaseAreaStack.propTypes = {\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]).isRequired,\n  renderLine: _pt.bool\n};\nexport default BaseAreaStack;"]},"metadata":{},"sourceType":"module"}