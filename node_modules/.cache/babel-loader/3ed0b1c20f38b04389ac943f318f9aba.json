{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rlab\\\\client\\\\src\\\\Components\\\\Home\\\\Locations\\\\DevicesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Location.css';\nimport DeveiceMeter from './DeveiceMeter';\nimport DevicesData from './DevicesData';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { userContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\n    authDomain: \"test1-68872.firebaseapp.com\",\n    projectId: \"test1-68872\",\n    storageBucket: \"test1-68872.appspot.com\",\n    messagingSenderId: \"504703093399\",\n    appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\n  });\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nconst db = firebase.firestore();\n\nconst DevicesForm = props => {\n  _s();\n\n  const [user, setUser] = useContext(userContext);\n  const [energyMeter, setEnergyMeter] = useState([]);\n  const [mainMeterData, setMainMeterData] = useState([]);\n  const [sl, setSl] = useState({\n    notClick: true,\n    click: false,\n    deviceId: ''\n  });\n\n  const handleSelect = () => {\n    const newSl = { ...sl\n    };\n    newSl.notClick = false;\n    newSl.click = true;\n    setSl(newSl);\n  };\n\n  const data = props.data;\n  useEffect(() => {\n    const getDataFirebase = [];\n    const userDb = db.collection(\"ENER000001\").onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        getDataFirebase.push({ ...doc.data(),\n          key: doc.id\n        });\n      }); // const resultArray = arrayFunc(getDataFirebase, sl.deviceId);\n      // setEnergyMeter(resultArray);\n    });\n    return userDb;\n  }, []);\n\n  function arrayFunc(arr, key) {\n    let resultArray;\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].DeviceID === key) {\n        resultArray = arr;\n      }\n    }\n\n    return resultArray;\n  }\n\n  ;\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [sl.notClick && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [data.map(data => /*#__PURE__*/_jsxDEV(DevicesData, {\n        data: data,\n        handleSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button d-flex justify-content-end deviceFrom-location-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Edit Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }, this), sl.click && /*#__PURE__*/_jsxDEV(DeveiceMeter, {\n      mainMeterData: mainMeterData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n};\n\n_s(DevicesForm, \"i8fecDe3olrHw1flFTkAyqNBqEY=\");\n\n_c = DevicesForm;\nexport default DevicesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DevicesForm\");","map":{"version":3,"sources":["F:/Rlab/client/src/Components/Home/Locations/DevicesForm.js"],"names":["React","useContext","useEffect","useState","DeveiceMeter","DevicesData","firebase","userContext","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","firestore","DevicesForm","props","user","setUser","energyMeter","setEnergyMeter","mainMeterData","setMainMeterData","sl","setSl","notClick","click","deviceId","handleSelect","newSl","data","getDataFirebase","userDb","collection","onSnapshot","querySnapshot","forEach","doc","push","key","id","arrayFunc","arr","resultArray","i","DeviceID","console","log","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './Location.css';\r\nimport DeveiceMeter from './DeveiceMeter';\r\nimport DevicesData from './DevicesData';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { userContext } from '../../../App';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst DevicesForm = (props) => {\r\n    const [user, setUser] = useContext(userContext)\r\n    const [energyMeter, setEnergyMeter] = useState([]);\r\n    const [mainMeterData, setMainMeterData] = useState([])\r\n    const [sl, setSl] = useState({\r\n       notClick: true,\r\n       click: false,\r\n       deviceId:'', \r\n    });\r\n    const handleSelect = () => {\r\n        const newSl = {...sl};\r\n        newSl.notClick = false;\r\n        newSl.click = true;\r\n        setSl(newSl);\r\n    }\r\n    const data = props.data\r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"ENER000001\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            // const resultArray = arrayFunc(getDataFirebase, sl.deviceId);\r\n            // setEnergyMeter(resultArray);\r\n            \r\n            \r\n        });\r\n        \r\n       return userDb;\r\n    }, []);\r\n\r\n    function arrayFunc(arr,key) {\r\n        let resultArray;\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].DeviceID === key){\r\n                resultArray = arr\r\n            }\r\n        }\r\n        return resultArray\r\n    };\r\n\r\n    console.log(user);\r\n    return (\r\n            <div>\r\n                {sl.notClick && <div className=\"container\">\r\n                {\r\n                    data.map(data => <DevicesData data={data} handleSelect={handleSelect}/>)\r\n                }\r\n                <div className=\"button d-flex justify-content-end deviceFrom-location-button\">\r\n                    <button className=\"btn btn-primary\">Edit Location</button>\r\n                </div>    \r\n           </div>}\r\n           {\r\n               sl.click && <DeveiceMeter mainMeterData={mainMeterData} />\r\n           }\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default DevicesForm;"]},"metadata":{},"sourceType":"module"}