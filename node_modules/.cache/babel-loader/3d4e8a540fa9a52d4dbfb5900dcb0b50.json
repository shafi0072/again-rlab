{"ast":null,"code":"var defaultCount = function defaultCount(idx, number) {\n  return Math.random() * (25 * (number - idx));\n};\n\nvar defaultBin = function defaultBin(idx, length) {\n  return idx * 150;\n};\n\nexport default function genBin(length, bin, count) {\n  if (bin === void 0) {\n    bin = defaultBin;\n  }\n\n  if (count === void 0) {\n    count = defaultCount;\n  }\n\n  return new Array(length).fill(1).reduce(function (data, d, i) {\n    return data.concat([{\n      bin: bin(i, length),\n      count: count(i, length)\n    }]);\n  }, []);\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/mock-data/esm/generators/genBin.js"],"names":["defaultCount","idx","number","Math","random","defaultBin","length","genBin","bin","count","Array","fill","reduce","data","d","i","concat"],"mappings":"AAAA,IAAIA,YAAY,GAAG,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAmC;AACpD,SAAOC,IAAI,CAACC,MAAL,MAAiB,MAAMF,MAAM,GAAGD,GAAf,CAAjB,CAAP;AACD,CAFD;;AAIA,IAAII,UAAU,GAAG,SAASA,UAAT,CAAoBJ,GAApB,EAAyBK,MAAzB,EAAiC;AAChD,SAAOL,GAAG,GAAG,GAAb;AACD,CAFD;;AAIA,eAAe,SAASM,MAAT,CAAgBD,MAAhB,EAAwBE,GAAxB,EAA6BC,KAA7B,EAAoC;AACjD,MAAID,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAGH,UAAN;AACD;;AAED,MAAII,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,IAAAA,KAAK,GAAGT,YAAR;AACD;;AAED,SAAO,IAAIU,KAAJ,CAAUJ,MAAV,EAAkBK,IAAlB,CAAuB,CAAvB,EAA0BC,MAA1B,CAAiC,UAAUC,IAAV,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC5D,WAAOF,IAAI,CAACG,MAAL,CAAY,CAAC;AAClBR,MAAAA,GAAG,EAAEA,GAAG,CAACO,CAAD,EAAIT,MAAJ,CADU;AAElBG,MAAAA,KAAK,EAAEA,KAAK,CAACM,CAAD,EAAIT,MAAJ;AAFM,KAAD,CAAZ,CAAP;AAID,GALM,EAKJ,EALI,CAAP;AAMD","sourcesContent":["var defaultCount = function defaultCount(idx, number) {\n  return Math.random() * (25 * (number - idx));\n};\n\nvar defaultBin = function defaultBin(idx, length) {\n  return idx * 150;\n};\n\nexport default function genBin(length, bin, count) {\n  if (bin === void 0) {\n    bin = defaultBin;\n  }\n\n  if (count === void 0) {\n    count = defaultCount;\n  }\n\n  return new Array(length).fill(1).reduce(function (data, d, i) {\n    return data.concat([{\n      bin: bin(i, length),\n      count: count(i, length)\n    }]);\n  }, []);\n}"]},"metadata":{},"sourceType":"module"}