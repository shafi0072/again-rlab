{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rlab\\\\client\\\\src\\\\Components\\\\Home\\\\DeviceDashBoard\\\\DeviceDashBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../Shared/Navbar';\nimport DeveiceMeter from '../Locations/DeveiceMeter';\nimport firebase from 'firebase/app';\nimport logo from '../../../Resorces/logo_RLAB.png';\nimport './DeviceDashBoard.css';\nimport 'firebase/firestore';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\n    authDomain: \"test1-68872.firebaseapp.com\",\n    projectId: \"test1-68872\",\n    storageBucket: \"test1-68872.appspot.com\",\n    messagingSenderId: \"504703093399\",\n    appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\n  });\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nconst db = firebase.firestore();\n\nconst DeviceDashBoard = () => {\n  _s();\n\n  let {\n    format,\n    id\n  } = useParams();\n  const [status, setStatus] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  function arrayFunc(arr, key) {\n    let resultArray = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].DeviceID === key) {\n        resultArray = arr[i];\n      }\n    }\n\n    return resultArray;\n  }\n\n  ;\n  useEffect(() => {\n    if (format === \"ENER01\") {\n      const userDb = db.collection(\"ENER000001\").onSnapshot(querySnapshot => {\n        const getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n\n        if (getDataFirebase.length > 0) {\n          const functionalArray = arrayFunc(getDataFirebase, id);\n          setStatus(functionalArray);\n          setLoading(false);\n        }\n      });\n      return userDb;\n    } else if (format === \"RTD01\") {\n      const userDb = db.collection(\"RTD0000001\").onSnapshot(querySnapshot => {\n        const getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n\n        if (getDataFirebase.length > 0) {\n          const functionalArray = arrayFunc(getDataFirebase, id);\n          setStatus(functionalArray);\n          setLoading(false);\n        }\n      });\n      return userDb;\n    } else if (format === \"GTY01\") {\n      const userDb = db.collection(\"GTY0000001\").where('fechaSocket', '>', queryValues.unixTimeX0).where('fechaSocket', '<', queryValues.unixTimeX1).limit(100).onSnapshot(querySnapshot => {\n        const getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n\n        if (getDataFirebase.length > 0) {\n          const functionalArray = arrayFunc(getDataFirebase, id);\n          setStatus(functionalArray);\n          setLoading(false);\n        }\n      });\n      return userDb;\n    }\n  }, [loading, format, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3 dashboard-navbar\",\n      style: {\n        margin: '0',\n        padding: '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-9 dashboard-background text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\",\n        style: {\n          width: '20%'\n        },\n        className: \"mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-light mt-2\",\n        children: [\"Format: \", format]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeveiceMeter, {\n        data: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeviceDashBoard, \"MQoZwSV3qho3QoUllczWTcyqYjk=\", false, function () {\n  return [useParams];\n});\n\n_c = DeviceDashBoard;\nexport default DeviceDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDashBoard\");","map":{"version":3,"sources":["F:/Rlab/client/src/Components/Home/DeviceDashBoard/DeviceDashBoard.js"],"names":["React","useEffect","useState","Navbar","DeveiceMeter","firebase","logo","BrowserRouter","Router","Switch","Route","Link","useParams","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","firestore","DeviceDashBoard","format","id","status","setStatus","loading","setLoading","arrayFunc","arr","key","resultArray","i","DeviceID","userDb","collection","onSnapshot","querySnapshot","getDataFirebase","forEach","doc","push","data","functionalArray","where","queryValues","unixTimeX0","unixTimeX1","limit","margin","padding","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeveiceMeter from '../Locations/DeveiceMeter';\r\nimport firebase from 'firebase/app';\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport './DeviceDashBoard.css';\r\nimport 'firebase/firestore';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyA47b6Rx0RioZApSMcyDooUmOpQFFs9WLE\",\r\n        authDomain: \"test1-68872.firebaseapp.com\",\r\n        projectId: \"test1-68872\",\r\n        storageBucket: \"test1-68872.appspot.com\",\r\n        messagingSenderId: \"504703093399\",\r\n        appId: \"1:504703093399:web:50a89636d428ac8bd2f7d2\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\nconst DeviceDashBoard = () => {\r\n    let { format, id } = useParams();\r\n\r\n\r\n    const [status,setStatus] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    function arrayFunc(arr,key) {\r\n        let resultArray = [];\r\n        for(let i = 0; i < arr.length; i++){\r\n            if(arr[i].DeviceID === key){\r\n                resultArray = arr[i];\r\n            }\r\n        }\r\n        return resultArray\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if(format === \"ENER01\"){\r\n            const userDb =  db.collection(\"ENER000001\").onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        else if(format === \"RTD01\"){\r\n            const userDb =  db.collection(\"RTD0000001\").onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        else if(format === \"GTY01\" ){\r\n            const userDb =  db.collection(\"GTY0000001\").where('fechaSocket', '>', queryValues.unixTimeX0)\r\n            .where('fechaSocket', '<', queryValues.unixTimeX1)\r\n            .limit(100)\r\n            .onSnapshot((querySnapshot) => {\r\n                const getDataFirebase = [];\r\n                querySnapshot.forEach((doc) => {\r\n                  getDataFirebase.push({...doc.data(), key:doc.id});\r\n                });\r\n                \r\n                if(getDataFirebase.length > 0){\r\n                    const functionalArray = arrayFunc(getDataFirebase, id)\r\n                    setStatus(functionalArray)\r\n                    setLoading(false)\r\n                }\r\n            });\r\n            return userDb\r\n        }\r\n        \r\n        \r\n     \r\n    }, [loading, format, id]);\r\n  \r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-3 dashboard-navbar\" style={{margin:'0', padding:'0'}}>\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-9 dashboard-background text-center\">\r\n            <img src={logo} alt=\"\" style={{width:'20%'}} className='mt-5' />\r\n                <h1 className='text-light mt-2'>Format: {format}</h1>\r\n                <DeveiceMeter data={status}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceDashBoard;"]},"metadata":{},"sourceType":"module"}