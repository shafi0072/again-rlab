{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport { isPointerEvent } from '../typeguards/events';\nimport findNearestDatumX from '../utils/findNearestDatumX';\nimport findNearestDatumY from '../utils/findNearestDatumY';\nimport useEventEmitter from './useEventEmitter';\nexport var POINTER_EVENTS_ALL = '__POINTER_EVENTS_ALL';\nexport var POINTER_EVENTS_NEAREST = '__POINTER_EVENTS_NEAREST';\n/**\n * Hook that returns PointerEvent handlers that invoke the passed pointer\n * handlers with the nearest datum to the event for the passed dataKey.\n */\n\nexport default function usePointerEventHandlers(_ref) {\n  var dataKey = _ref.dataKey,\n      findNearestDatumProps = _ref.findNearestDatum,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onPointerMove = _ref.onPointerMove,\n      onPointerOut = _ref.onPointerOut,\n      onPointerUp = _ref.onPointerUp,\n      allowedSources = _ref.allowedSources;\n\n  var _ref2 = useContext(DataContext),\n      width = _ref2.width,\n      height = _ref2.height,\n      horizontal = _ref2.horizontal,\n      dataRegistry = _ref2.dataRegistry,\n      xScale = _ref2.xScale,\n      yScale = _ref2.yScale;\n\n  var findNearestDatum = findNearestDatumProps || (horizontal ? findNearestDatumY : findNearestDatumX); // this logic is shared by pointerup, pointermove, and focus handlers\n\n  var getHandlerParams = useCallback(function (params) {\n    var _ref3 = params || {},\n        svgPoint = _ref3.svgPoint,\n        event = _ref3.event;\n\n    var pointerParamsByKey = {}; // nearest Datum across all dataKeys, if relevant\n\n    var nearestDatumPointerParams = null;\n    var nearestDatumDistance = Infinity;\n\n    if (params && event && svgPoint && width && height && xScale && yScale) {\n      var _dataRegistry$keys;\n\n      var considerAllKeys = dataKey === POINTER_EVENTS_NEAREST || dataKey === POINTER_EVENTS_ALL;\n      var dataKeys = considerAllKeys ? (_dataRegistry$keys = dataRegistry == null ? void 0 : dataRegistry.keys()) != null ? _dataRegistry$keys : [] : Array.isArray(dataKey) ? dataKey : [dataKey]; // find nearestDatum for relevant dataKey(s)\n\n      dataKeys.forEach(function (key) {\n        var entry = dataRegistry == null ? void 0 : dataRegistry.get(key);\n\n        if (entry) {\n          var nearestDatum = findNearestDatum({\n            dataKey: key,\n            data: entry.data,\n            height: height,\n            point: svgPoint,\n            width: width,\n            xAccessor: entry.xAccessor,\n            xScale: xScale,\n            yAccessor: entry.yAccessor,\n            yScale: yScale\n          });\n\n          if (nearestDatum) {\n            pointerParamsByKey[key] = _extends({\n              key: key,\n              svgPoint: svgPoint,\n              event: event\n            }, nearestDatum); // compute nearest Datum if not emitting events for all keys\n\n            if (dataKey === POINTER_EVENTS_NEAREST) {\n              var _nearestDatum$distanc, _nearestDatum$distanc2;\n\n              var distance = Math.sqrt(((_nearestDatum$distanc = nearestDatum.distanceX) != null ? _nearestDatum$distanc : Math.pow(Infinity, 2)) + ((_nearestDatum$distanc2 = nearestDatum.distanceY) != null ? _nearestDatum$distanc2 : Math.pow(Infinity, 2)));\n              nearestDatumPointerParams = distance < nearestDatumDistance ? pointerParamsByKey[key] : nearestDatumPointerParams;\n              nearestDatumDistance = Math.min(nearestDatumDistance, distance);\n            }\n          }\n        }\n      });\n      var pointerParams = dataKey === POINTER_EVENTS_NEAREST ? [nearestDatumPointerParams] : dataKey === POINTER_EVENTS_ALL || Array.isArray(dataKey) ? Object.values(pointerParamsByKey) : [pointerParamsByKey[dataKey]];\n      return pointerParams.filter(function (param) {\n        return param;\n      });\n    }\n\n    return [];\n  }, [dataKey, dataRegistry, xScale, yScale, width, height, findNearestDatum]);\n  var handlePointerMove = useCallback(function (params) {\n    if (onPointerMove) {\n      getHandlerParams(params).forEach(function (p) {\n        return onPointerMove(p);\n      });\n    }\n  }, [getHandlerParams, onPointerMove]);\n  var handlePointerUp = useCallback(function (params) {\n    if (onPointerUp) {\n      getHandlerParams(params).forEach(function (p) {\n        return onPointerUp(p);\n      });\n    }\n  }, [getHandlerParams, onPointerUp]);\n  var handleFocus = useCallback(function (params) {\n    if (onFocus) {\n      getHandlerParams(params).forEach(function (p) {\n        return onFocus(p);\n      });\n    }\n  }, [getHandlerParams, onFocus]);\n  var handlePointerOut = useCallback(function (params) {\n    var event = params == null ? void 0 : params.event;\n    if (event && isPointerEvent(event) && onPointerOut) onPointerOut(event);\n  }, [onPointerOut]);\n  var handleBlur = useCallback(function (params) {\n    var event = params == null ? void 0 : params.event;\n    if (event && !isPointerEvent(event) && onBlur) onBlur(event);\n  }, [onBlur]);\n  useEventEmitter('pointermove', onPointerMove ? handlePointerMove : undefined, allowedSources);\n  useEventEmitter('pointerout', onPointerOut ? handlePointerOut : undefined, allowedSources);\n  useEventEmitter('pointerup', onPointerUp ? handlePointerUp : undefined, allowedSources);\n  useEventEmitter('focus', onFocus ? handleFocus : undefined, allowedSources);\n  useEventEmitter('blur', onBlur ? handleBlur : undefined, allowedSources);\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/xychart/esm/hooks/useEventHandlers.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useCallback","useContext","DataContext","isPointerEvent","findNearestDatumX","findNearestDatumY","useEventEmitter","POINTER_EVENTS_ALL","POINTER_EVENTS_NEAREST","usePointerEventHandlers","_ref","dataKey","findNearestDatumProps","findNearestDatum","onBlur","onFocus","onPointerMove","onPointerOut","onPointerUp","allowedSources","_ref2","width","height","horizontal","dataRegistry","xScale","yScale","getHandlerParams","params","_ref3","svgPoint","event","pointerParamsByKey","nearestDatumPointerParams","nearestDatumDistance","Infinity","_dataRegistry$keys","considerAllKeys","dataKeys","keys","Array","isArray","forEach","entry","get","nearestDatum","data","point","xAccessor","yAccessor","_nearestDatum$distanc","_nearestDatum$distanc2","distance","Math","sqrt","distanceX","pow","distanceY","min","pointerParams","values","filter","param","handlePointerMove","p","handlePointerUp","handleFocus","handlePointerOut","handleBlur","undefined"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport { isPointerEvent } from '../typeguards/events';\nimport findNearestDatumX from '../utils/findNearestDatumX';\nimport findNearestDatumY from '../utils/findNearestDatumY';\nimport useEventEmitter from './useEventEmitter';\nexport var POINTER_EVENTS_ALL = '__POINTER_EVENTS_ALL';\nexport var POINTER_EVENTS_NEAREST = '__POINTER_EVENTS_NEAREST';\n\n/**\n * Hook that returns PointerEvent handlers that invoke the passed pointer\n * handlers with the nearest datum to the event for the passed dataKey.\n */\nexport default function usePointerEventHandlers(_ref) {\n  var dataKey = _ref.dataKey,\n      findNearestDatumProps = _ref.findNearestDatum,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onPointerMove = _ref.onPointerMove,\n      onPointerOut = _ref.onPointerOut,\n      onPointerUp = _ref.onPointerUp,\n      allowedSources = _ref.allowedSources;\n\n  var _ref2 = useContext(DataContext),\n      width = _ref2.width,\n      height = _ref2.height,\n      horizontal = _ref2.horizontal,\n      dataRegistry = _ref2.dataRegistry,\n      xScale = _ref2.xScale,\n      yScale = _ref2.yScale;\n\n  var findNearestDatum = findNearestDatumProps || (horizontal ? findNearestDatumY : findNearestDatumX); // this logic is shared by pointerup, pointermove, and focus handlers\n\n  var getHandlerParams = useCallback(function (params) {\n    var _ref3 = params || {},\n        svgPoint = _ref3.svgPoint,\n        event = _ref3.event;\n\n    var pointerParamsByKey = {}; // nearest Datum across all dataKeys, if relevant\n\n    var nearestDatumPointerParams = null;\n    var nearestDatumDistance = Infinity;\n\n    if (params && event && svgPoint && width && height && xScale && yScale) {\n      var _dataRegistry$keys;\n\n      var considerAllKeys = dataKey === POINTER_EVENTS_NEAREST || dataKey === POINTER_EVENTS_ALL;\n      var dataKeys = considerAllKeys ? (_dataRegistry$keys = dataRegistry == null ? void 0 : dataRegistry.keys()) != null ? _dataRegistry$keys : [] : Array.isArray(dataKey) ? dataKey : [dataKey]; // find nearestDatum for relevant dataKey(s)\n\n      dataKeys.forEach(function (key) {\n        var entry = dataRegistry == null ? void 0 : dataRegistry.get(key);\n\n        if (entry) {\n          var nearestDatum = findNearestDatum({\n            dataKey: key,\n            data: entry.data,\n            height: height,\n            point: svgPoint,\n            width: width,\n            xAccessor: entry.xAccessor,\n            xScale: xScale,\n            yAccessor: entry.yAccessor,\n            yScale: yScale\n          });\n\n          if (nearestDatum) {\n            pointerParamsByKey[key] = _extends({\n              key: key,\n              svgPoint: svgPoint,\n              event: event\n            }, nearestDatum); // compute nearest Datum if not emitting events for all keys\n\n            if (dataKey === POINTER_EVENTS_NEAREST) {\n              var _nearestDatum$distanc, _nearestDatum$distanc2;\n\n              var distance = Math.sqrt(((_nearestDatum$distanc = nearestDatum.distanceX) != null ? _nearestDatum$distanc : Math.pow(Infinity, 2)) + ((_nearestDatum$distanc2 = nearestDatum.distanceY) != null ? _nearestDatum$distanc2 : Math.pow(Infinity, 2)));\n              nearestDatumPointerParams = distance < nearestDatumDistance ? pointerParamsByKey[key] : nearestDatumPointerParams;\n              nearestDatumDistance = Math.min(nearestDatumDistance, distance);\n            }\n          }\n        }\n      });\n      var pointerParams = dataKey === POINTER_EVENTS_NEAREST ? [nearestDatumPointerParams] : dataKey === POINTER_EVENTS_ALL || Array.isArray(dataKey) ? Object.values(pointerParamsByKey) : [pointerParamsByKey[dataKey]];\n      return pointerParams.filter(function (param) {\n        return param;\n      });\n    }\n\n    return [];\n  }, [dataKey, dataRegistry, xScale, yScale, width, height, findNearestDatum]);\n  var handlePointerMove = useCallback(function (params) {\n    if (onPointerMove) {\n      getHandlerParams(params).forEach(function (p) {\n        return onPointerMove(p);\n      });\n    }\n  }, [getHandlerParams, onPointerMove]);\n  var handlePointerUp = useCallback(function (params) {\n    if (onPointerUp) {\n      getHandlerParams(params).forEach(function (p) {\n        return onPointerUp(p);\n      });\n    }\n  }, [getHandlerParams, onPointerUp]);\n  var handleFocus = useCallback(function (params) {\n    if (onFocus) {\n      getHandlerParams(params).forEach(function (p) {\n        return onFocus(p);\n      });\n    }\n  }, [getHandlerParams, onFocus]);\n  var handlePointerOut = useCallback(function (params) {\n    var event = params == null ? void 0 : params.event;\n    if (event && isPointerEvent(event) && onPointerOut) onPointerOut(event);\n  }, [onPointerOut]);\n  var handleBlur = useCallback(function (params) {\n    var event = params == null ? void 0 : params.event;\n    if (event && !isPointerEvent(event) && onBlur) onBlur(event);\n  }, [onBlur]);\n  useEventEmitter('pointermove', onPointerMove ? handlePointerMove : undefined, allowedSources);\n  useEventEmitter('pointerout', onPointerOut ? handlePointerOut : undefined, allowedSources);\n  useEventEmitter('pointerup', onPointerUp ? handlePointerUp : undefined, allowedSources);\n  useEventEmitter('focus', onFocus ? handleFocus : undefined, allowedSources);\n  useEventEmitter('blur', onBlur ? handleBlur : undefined, allowedSources);\n}"]},"metadata":{},"sourceType":"module"}