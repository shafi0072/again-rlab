{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rlab\\\\client\\\\src\\\\Components\\\\Home\\\\Devices\\\\Devices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './Devices.css';\nimport '../../../responsive.css';\nimport db from '../../FirebaseConfig/Firebase';\nimport { Button, Form, Segment } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useEffect } from 'react';\nimport DeviceList from './DeviceList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Devices = () => {\n  _s();\n\n  const [devicesData, setDevicesData] = useState({\n    model: '',\n    SerialNumber: '',\n    Commission: '',\n    alarm1: '',\n    alarm2: '',\n    format: 'ENER01'\n  });\n  const [devices, setDevices] = useState([]);\n\n  const handleChange = event => {\n    const newDevices = { ...devicesData\n    };\n    newDevices[event.target.name] = event.target.value;\n    console.log(newDevices);\n    setDevicesData(newDevices);\n  };\n\n  const [user, setUser] = useContext(userContext);\n\n  const handleSubmit = e => {\n    db.collection(\"Devices\").add(devicesData).then(docRef => {}).catch(error => {});\n    db.collection(devicesData.model).add(devicesData).then(docRef => {}).catch(error => {});\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    const getDataFirebase = [];\n    const userDb = db.collection(\"Devices\").onSnapshot(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        getDataFirebase.push({ ...doc.data(),\n          key: doc.id\n        });\n      });\n      setDevices(getDataFirebase);\n    });\n    return userDb;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      unstackable: \"unstackable\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          required: true,\n          label: \"Device Model\",\n          name: \"model\",\n          onChange: handleChange,\n          placeholder: \"Energy Meter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          required: true,\n          label: \"Serial Number\",\n          name: \"SerialNumber\",\n          onChange: handleChange,\n          placeholder: \"ABCb012345\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          required: true,\n          label: \"Commissioning Date\",\n          name: \"Commission\",\n          onChange: handleChange,\n          placeholder: \"153278942329\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          required: true,\n          label: \"Level_Alarm_Var01\",\n          name: \"alarm1\",\n          onChange: handleChange,\n          placeholder: \"30.35\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          required: true,\n          label: \"Level_Alarm_Var02\",\n          name: \"alarm2\",\n          onChange: handleChange,\n          placeholder: \"30.35\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Add/Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this), devices.map(data => {\n      return /*#__PURE__*/_jsxDEV(DeviceList, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Devices, \"pV6TS6lWb1Gbm0WZYrD5F7HU9Bs=\");\n\n_c = Devices;\nexport default Devices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Devices\");","map":{"version":3,"sources":["F:/Rlab/client/src/Components/Home/Devices/Devices.js"],"names":["React","useContext","useState","db","Button","Form","Segment","useEffect","DeviceList","Devices","devicesData","setDevicesData","model","SerialNumber","Commission","alarm1","alarm2","format","devices","setDevices","handleChange","event","newDevices","target","name","value","console","log","user","setUser","userContext","handleSubmit","e","collection","add","then","docRef","catch","error","preventDefault","getDataFirebase","userDb","onSnapshot","querySnapshot","forEach","doc","push","data","key","id","map"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\r\n\r\nimport './Devices.css';\r\nimport '../../../responsive.css';\r\n\r\nimport db from '../../FirebaseConfig/Firebase'\r\n\r\nimport {Button, Form, Segment} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { useEffect } from 'react';\r\nimport DeviceList from './DeviceList';\r\nconst Devices = () => {\r\n    const [devicesData, setDevicesData] = useState({\r\n        model: '',\r\n        SerialNumber: '',\r\n        Commission: '',\r\n        alarm1: '',\r\n        alarm2: '',\r\n        format: 'ENER01'\r\n    });\r\n    const [devices, setDevices] = useState([\r\n\r\n    ])\r\n    const handleChange = (event) => {\r\n        const newDevices = {\r\n            ...devicesData\r\n        };\r\n        newDevices[event.target.name] = event.target.value;\r\n        console.log(newDevices);\r\n        setDevicesData(newDevices);\r\n\r\n    };\r\n    const [user, setUser] = useContext(userContext)\r\n    const handleSubmit = (e) => {\r\n        db\r\n            .collection(\"Devices\")\r\n            .add(devicesData)\r\n            .then((docRef) => {})\r\n            .catch((error) => {});\r\n        db\r\n            .collection(devicesData.model)\r\n            .add(devicesData)\r\n            .then((docRef) => {})\r\n            .catch((error) => {});\r\n        e.preventDefault()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getDataFirebase = [];\r\n        const userDb = db.collection(\"Devices\").onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              getDataFirebase.push({...doc.data(), key:doc.id});\r\n            });\r\n            setDevices(getDataFirebase);\r\n            \r\n        });\r\n        \r\n       return userDb;\r\n    },[])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {<Form unstackable=\"unstackable\" onSubmit={handleSubmit}>\r\n                <Form.Group widths={2}>\r\n                    <Form.Input\r\n                        required\r\n                        label='Device Model'\r\n                        name=\"model\"\r\n                        onChange={handleChange}\r\n                        placeholder='Energy Meter'/>\r\n\r\n                </Form.Group>\r\n                <Form.Group widths={2}>\r\n                    <Form.Input\r\n                        required\r\n                        label='Serial Number'\r\n                        name=\"SerialNumber\"\r\n                        onChange={handleChange}\r\n                        placeholder='ABCb012345'/>\r\n                </Form.Group>\r\n                <Form.Group widths={2}>\r\n                    <Form.Input\r\n                        required\r\n                        label='Commissioning Date'\r\n                        name=\"Commission\"\r\n                        onChange={handleChange}\r\n                        placeholder='153278942329'/>\r\n\r\n                </Form.Group>\r\n                <Form.Group widths={2}>\r\n\r\n                    <Form.Input\r\n                        required\r\n                        label='Level_Alarm_Var01'\r\n                        name=\"alarm1\"\r\n                        onChange={handleChange}\r\n                        placeholder='30.35'/>\r\n                </Form.Group>\r\n                <Form.Group widths={2}>\r\n                    <Form.Input\r\n                        required\r\n                        label='Level_Alarm_Var02'\r\n                        name=\"alarm2\"\r\n                        onChange={handleChange}\r\n                        placeholder='30.35'/>\r\n                </Form.Group>\r\n                <button className=\"btn btn-primary\">Add/Save</button>\r\n            </Form>}\r\n            {\r\n                devices.map(data => {return <DeviceList data={data}/>})\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Devices;"]},"metadata":{},"sourceType":"module"}