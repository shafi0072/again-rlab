{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl =\n/** @class */\nfunction () {\n  function BaggageImpl(entries) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n\n  BaggageImpl.prototype.getEntry = function (key) {\n    var entry = this._entries.get(key);\n\n    if (!entry) {\n      return undefined;\n    }\n\n    return Object.assign({}, entry);\n  };\n\n  BaggageImpl.prototype.getAllEntries = function () {\n    return Array.from(this._entries.entries()).map(function (_a) {\n      var k = _a[0],\n          v = _a[1];\n      return [k, v];\n    });\n  };\n\n  BaggageImpl.prototype.setEntry = function (key, entry) {\n    var newBaggage = new BaggageImpl(this._entries);\n\n    newBaggage._entries.set(key, entry);\n\n    return newBaggage;\n  };\n\n  BaggageImpl.prototype.removeEntry = function (key) {\n    var newBaggage = new BaggageImpl(this._entries);\n\n    newBaggage._entries.delete(key);\n\n    return newBaggage;\n  };\n\n  BaggageImpl.prototype.removeEntries = function () {\n    var keys = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      keys[_i] = arguments[_i];\n    }\n\n    var newBaggage = new BaggageImpl(this._entries);\n\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n      var key = keys_1[_a];\n\n      newBaggage._entries.delete(key);\n    }\n\n    return newBaggage;\n  };\n\n  BaggageImpl.prototype.clear = function () {\n    return new BaggageImpl();\n  };\n\n  return BaggageImpl;\n}();\n\nexport { BaggageImpl };","map":{"version":3,"sources":["../../../../src/baggage/internal/baggage-impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAIH,IAAA,WAAA;AAAA;AAAA,YAAA;AAGE,WAAA,WAAA,CAAY,OAAZ,EAA+C;AAC7C,SAAK,QAAL,GAAgB,OAAO,GAAG,IAAI,GAAJ,CAAQ,OAAR,CAAH,GAAsB,IAAI,GAAJ,EAA7C;AACD;;AAED,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,GAAT,EAAoB;AAClB,QAAM,KAAK,GAAG,KAAK,QAAL,CAAc,GAAd,CAAkB,GAAlB,CAAd;;AACA,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,SAAP;AACD;;AAED,WAAO,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,CAAP;AACD,GAPD;;AASA,EAAA,WAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,WAAO,KAAK,CAAC,IAAN,CAAW,KAAK,QAAL,CAAc,OAAd,EAAX,EAAoC,GAApC,CAAwC,UAAC,EAAD,EAAO;UAAL,CAAC,GAAA,EAAA,CAAA,CAAA,C;UAAE,CAAC,GAAA,EAAA,CAAA,CAAA,C;AAAM,aAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;AAAM,KAA1D,CAAP;AACD,GAFD;;AAIA,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,GAAT,EAAsB,KAAtB,EAAyC;AACvC,QAAM,UAAU,GAAG,IAAI,WAAJ,CAAgB,KAAK,QAArB,CAAnB;;AACA,IAAA,UAAU,CAAC,QAAX,CAAoB,GAApB,CAAwB,GAAxB,EAA6B,KAA7B;;AACA,WAAO,UAAP;AACD,GAJD;;AAMA,EAAA,WAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,GAAZ,EAAuB;AACrB,QAAM,UAAU,GAAG,IAAI,WAAJ,CAAgB,KAAK,QAArB,CAAnB;;AACA,IAAA,UAAU,CAAC,QAAX,CAAoB,MAApB,CAA2B,GAA3B;;AACA,WAAO,UAAP;AACD,GAJD;;AAMA,EAAA,WAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AAAc,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAiB;AAAjB,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACZ,QAAM,UAAU,GAAG,IAAI,WAAJ,CAAgB,KAAK,QAArB,CAAnB;;AACA,SAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,MAAA,GAAA,IAAlB,EAAkB,EAAA,GAAA,MAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAAwB;AAAnB,UAAM,GAAG,GAAA,MAAA,CAAA,EAAA,CAAT;;AACH,MAAA,UAAU,CAAC,QAAX,CAAoB,MAApB,CAA2B,GAA3B;AACD;;AACD,WAAO,UAAP;AACD,GAND;;AAQA,EAAA,WAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,WAAO,IAAI,WAAJ,EAAP;AACD,GAFD;;AAGF,SAAA,WAAA;AAAC,CA3CD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var k = _a[0], v = _a[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\n            var key = keys_1[_a];\n            newBaggage._entries.delete(key);\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexport { BaggageImpl };\n//# sourceMappingURL=baggage-impl.js.map"]},"metadata":{},"sourceType":"module"}