{"ast":null,"code":"import isUtcScale from './isUtcScale';\nexport default function inferScaleType(scale) {\n  // Try a sequence of typeguards to figure out the scale type\n  if ('paddingInner' in scale) {\n    return 'band';\n  }\n\n  if ('padding' in scale) {\n    return 'point';\n  }\n\n  if ('quantiles' in scale) {\n    return 'quantile';\n  }\n\n  if ('base' in scale) {\n    return 'log';\n  }\n\n  if ('exponent' in scale) {\n    return scale.exponent() === 0.5 ? 'sqrt' : 'pow';\n  }\n\n  if ('constant' in scale) {\n    return 'symlog';\n  }\n\n  if ('clamp' in scale) {\n    // Linear, Time or Utc scales\n    if (scale.ticks()[0] instanceof Date) {\n      return isUtcScale(scale) ? 'utc' : 'time';\n    }\n\n    return 'linear';\n  }\n\n  if ('nice' in scale) {\n    return 'quantize';\n  }\n\n  if ('invertExtent' in scale) {\n    return 'threshold';\n  }\n\n  return 'ordinal';\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/scale/esm/utils/inferScaleType.js"],"names":["isUtcScale","inferScaleType","scale","exponent","ticks","Date"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C;AACA,MAAI,kBAAkBA,KAAtB,EAA6B;AAC3B,WAAO,MAAP;AACD;;AAED,MAAI,aAAaA,KAAjB,EAAwB;AACtB,WAAO,OAAP;AACD;;AAED,MAAI,eAAeA,KAAnB,EAA0B;AACxB,WAAO,UAAP;AACD;;AAED,MAAI,UAAUA,KAAd,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,MAAI,cAAcA,KAAlB,EAAyB;AACvB,WAAOA,KAAK,CAACC,QAAN,OAAqB,GAArB,GAA2B,MAA3B,GAAoC,KAA3C;AACD;;AAED,MAAI,cAAcD,KAAlB,EAAyB;AACvB,WAAO,QAAP;AACD;;AAED,MAAI,WAAWA,KAAf,EAAsB;AACpB;AACA,QAAIA,KAAK,CAACE,KAAN,GAAc,CAAd,aAA4BC,IAAhC,EAAsC;AACpC,aAAOL,UAAU,CAACE,KAAD,CAAV,GAAoB,KAApB,GAA4B,MAAnC;AACD;;AAED,WAAO,QAAP;AACD;;AAED,MAAI,UAAUA,KAAd,EAAqB;AACnB,WAAO,UAAP;AACD;;AAED,MAAI,kBAAkBA,KAAtB,EAA6B;AAC3B,WAAO,WAAP;AACD;;AAED,SAAO,SAAP;AACD","sourcesContent":["import isUtcScale from './isUtcScale';\nexport default function inferScaleType(scale) {\n  // Try a sequence of typeguards to figure out the scale type\n  if ('paddingInner' in scale) {\n    return 'band';\n  }\n\n  if ('padding' in scale) {\n    return 'point';\n  }\n\n  if ('quantiles' in scale) {\n    return 'quantile';\n  }\n\n  if ('base' in scale) {\n    return 'log';\n  }\n\n  if ('exponent' in scale) {\n    return scale.exponent() === 0.5 ? 'sqrt' : 'pow';\n  }\n\n  if ('constant' in scale) {\n    return 'symlog';\n  }\n\n  if ('clamp' in scale) {\n    // Linear, Time or Utc scales\n    if (scale.ticks()[0] instanceof Date) {\n      return isUtcScale(scale) ? 'utc' : 'time';\n    }\n\n    return 'linear';\n  }\n\n  if ('nice' in scale) {\n    return 'quantize';\n  }\n\n  if ('invertExtent' in scale) {\n    return 'threshold';\n  }\n\n  return 'ordinal';\n}"]},"metadata":{},"sourceType":"module"}