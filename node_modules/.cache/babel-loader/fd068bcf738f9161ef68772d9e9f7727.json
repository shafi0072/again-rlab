{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noop = exports.promisifySome = void 0;\n\nconst promisify_1 = require(\"@google-cloud/promisify\");\n/**\n * This replaces usage of promisifyAll(), going forward. Instead of opting\n * some methods out, you will need to opt methods in. Additionally, this\n * function validates method names against the class using TypeScript,\n * to generate compile-time failures for misspellings and changes.\n *\n * Future work in the library should all be Promise-first.\n *\n * @private\n */\n\n\nfunction promisifySome(class_, classProto, methods) {\n  methods.forEach(methodName => {\n    // Do the same stream checks as promisifyAll().\n    const m = classProto[methodName];\n    classProto[methodName] = promisify_1.promisify(m);\n  });\n}\n\nexports.promisifySome = promisifySome;\n\nfunction noop() {}\n\nexports.noop = noop;","map":{"version":3,"sources":["../../src/util.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;AAEH,MAAA,WAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;AAEA;;;;;;;;;AASG;;;AACH,SAAgB,aAAhB,CACE,MADF,EAEE,UAFF,EAGE,OAHF,EAGsB;AAEpB,EAAA,OAAO,CAAC,OAAR,CAAgB,UAAU,IAAG;AAC3B;AACA,UAAM,CAAC,GAAG,UAAU,CAAC,UAAD,CAApB;AACA,IAAA,UAAU,CAAC,UAAD,CAAV,GAAyB,WAAA,CAAA,SAAA,CAAU,CAAV,CAAzB;AACD,GAJD;AAKD;;AAVD,OAAA,CAAA,aAAA,GAAA,aAAA;;AAYA,SAAgB,IAAhB,GAAoB,CAAK;;AAAzB,OAAA,CAAA,IAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.noop = exports.promisifySome = void 0;\nconst promisify_1 = require(\"@google-cloud/promisify\");\n/**\n * This replaces usage of promisifyAll(), going forward. Instead of opting\n * some methods out, you will need to opt methods in. Additionally, this\n * function validates method names against the class using TypeScript,\n * to generate compile-time failures for misspellings and changes.\n *\n * Future work in the library should all be Promise-first.\n *\n * @private\n */\nfunction promisifySome(class_, classProto, methods) {\n    methods.forEach(methodName => {\n        // Do the same stream checks as promisifyAll().\n        const m = classProto[methodName];\n        classProto[methodName] = promisify_1.promisify(m);\n    });\n}\nexports.promisifySome = promisifySome;\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}