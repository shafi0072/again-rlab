{"ast":null,"code":"var _jsxFileName = \"C:\\\\remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161\\\\src\\\\Components\\\\Home\\\\Locations\\\\VisxChart\\\\VisxChat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useCallback } from 'react';\nimport { AreaClosed, Line, Bar } from '@visx/shape';\nimport appleStock from '@visx/mock-data/lib/mocks/appleStock';\nimport { curveMonotoneX } from '@visx/curve';\nimport { GridRows, GridColumns } from '@visx/grid';\nimport { scaleTime, scaleLinear } from '@visx/scale';\nimport { withTooltip, Tooltip, TooltipWithBounds, defaultStyles } from '@visx/tooltip';\nimport { localPoint } from '@visx/event';\nimport { LinearGradient } from '@visx/gradient';\nimport { max, extent, bisector } from 'd3-array';\nimport { timeFormat } from 'd3-time-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stock = appleStock.slice(800);\nexport const background = '#3b6978';\nexport const background2 = '#204051';\nexport const accentColor = '#edffea';\nexport const accentColorDark = '#75daad';\nconst tooltipStyles = { ...defaultStyles,\n  background,\n  border: '1px solid white',\n  color: 'white'\n}; // util\n\nconst formatDate = timeFormat(\"%b %d, '%y\"); // accessors\n\nconst getDate = d => new Date(d.date);\n\nconst getStockValue = d => d.close;\n\nconst bisectDate = bisector(d => new Date(d.date)).left;\nexport default _c2 = withTooltip(_c = _s(({\n  width,\n  height,\n  margin = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  showTooltip,\n  hideTooltip,\n  tooltipData,\n  tooltipTop = 0,\n  tooltipLeft = 0\n}) => {\n  _s();\n\n  if (width < 10) return null; // bounds\n\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom; // scales\n\n  const dateScale = useMemo(() => scaleTime({\n    range: [margin.left, innerWidth + margin.left],\n    domain: extent(stock, getDate)\n  }), [innerWidth, margin.left]);\n  const stockValueScale = useMemo(() => scaleLinear({\n    range: [innerHeight + margin.top, margin.top],\n    domain: [0, (max(stock, getStockValue) || 0) + innerHeight / 3],\n    nice: true\n  }), [margin.top, innerHeight]); // tooltip handler\n\n  const handleTooltip = useCallback(event => {\n    const {\n      x\n    } = localPoint(event) || {\n      x: 0\n    };\n    const x0 = dateScale.invert(x);\n    const index = bisectDate(stock, x0, 1);\n    const d0 = stock[index - 1];\n    const d1 = stock[index];\n    let d = d0;\n\n    if (d1 && getDate(d1)) {\n      d = x0.valueOf() - getDate(d0).valueOf() > getDate(d1).valueOf() - x0.valueOf() ? d1 : d0;\n    }\n\n    showTooltip({\n      tooltipData: d,\n      tooltipLeft: x,\n      tooltipTop: stockValueScale(getStockValue(d))\n    });\n  }, [showTooltip, stockValueScale, dateScale]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        fill: \"url(#area-background-gradient)\",\n        rx: 14\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LinearGradient, {\n        id: \"area-background-gradient\",\n        from: background,\n        to: background2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LinearGradient, {\n        id: \"area-gradient\",\n        from: accentColor,\n        to: accentColor,\n        toOpacity: 0.1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GridRows, {\n        left: margin.left,\n        scale: stockValueScale,\n        width: innerWidth,\n        strokeDasharray: \"1,3\",\n        stroke: accentColor,\n        strokeOpacity: 0,\n        pointerEvents: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GridColumns, {\n        top: margin.top,\n        scale: dateScale,\n        height: innerHeight,\n        strokeDasharray: \"1,3\",\n        stroke: accentColor,\n        strokeOpacity: 0.2,\n        pointerEvents: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AreaClosed, {\n        data: stock,\n        x: d => {\n          var _dateScale;\n\n          return (_dateScale = dateScale(getDate(d))) !== null && _dateScale !== void 0 ? _dateScale : 0;\n        },\n        y: d => {\n          var _stockValueScale;\n\n          return (_stockValueScale = stockValueScale(getStockValue(d))) !== null && _stockValueScale !== void 0 ? _stockValueScale : 0;\n        },\n        yScale: stockValueScale,\n        strokeWidth: 1,\n        stroke: \"url(#area-gradient)\",\n        fill: \"url(#area-gradient)\",\n        curve: curveMonotoneX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        x: margin.left,\n        y: margin.top,\n        width: innerWidth,\n        height: innerHeight,\n        fill: \"transparent\",\n        rx: 14,\n        onTouchStart: handleTooltip,\n        onTouchMove: handleTooltip,\n        onMouseMove: handleTooltip,\n        onMouseLeave: () => hideTooltip()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), tooltipData && /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          from: {\n            x: tooltipLeft,\n            y: margin.top\n          },\n          to: {\n            x: tooltipLeft,\n            y: innerHeight + margin.top\n          },\n          stroke: accentColorDark,\n          strokeWidth: 2,\n          pointerEvents: \"none\",\n          strokeDasharray: \"5,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: tooltipLeft,\n          cy: tooltipTop + 1,\n          r: 4,\n          fill: \"black\",\n          fillOpacity: 0.1,\n          stroke: \"black\",\n          strokeOpacity: 0.1,\n          strokeWidth: 2,\n          pointerEvents: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: tooltipLeft,\n          cy: tooltipTop,\n          r: 4,\n          fill: accentColorDark,\n          stroke: \"white\",\n          strokeWidth: 2,\n          pointerEvents: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), tooltipData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TooltipWithBounds, {\n        top: tooltipTop - 12,\n        left: tooltipLeft + 12,\n        style: tooltipStyles,\n        children: `$${getStockValue(tooltipData)}`\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        top: innerHeight + margin.top - 14,\n        left: tooltipLeft,\n        style: { ...defaultStyles,\n          minWidth: 72,\n          textAlign: 'center',\n          transform: 'translateX(-50%)'\n        },\n        children: formatDate(getDate(tooltipData))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n}, \"gIOYYyfwSDRce+k2Vaf31nSY8E8=\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withTooltip\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/src/Components/Home/Locations/VisxChart/VisxChat.tsx"],"names":["React","useMemo","useCallback","AreaClosed","Line","Bar","appleStock","curveMonotoneX","GridRows","GridColumns","scaleTime","scaleLinear","withTooltip","Tooltip","TooltipWithBounds","defaultStyles","localPoint","LinearGradient","max","extent","bisector","timeFormat","stock","slice","background","background2","accentColor","accentColorDark","tooltipStyles","border","color","formatDate","getDate","d","Date","date","getStockValue","close","bisectDate","left","width","height","margin","top","right","bottom","showTooltip","hideTooltip","tooltipData","tooltipTop","tooltipLeft","innerWidth","innerHeight","dateScale","range","domain","stockValueScale","nice","handleTooltip","event","x","x0","invert","index","d0","d1","valueOf","y","Math","random","minWidth","textAlign","transform"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from 'react';\r\nimport { AreaClosed, Line, Bar } from '@visx/shape';\r\nimport appleStock, { AppleStock } from '@visx/mock-data/lib/mocks/appleStock';\r\nimport { curveMonotoneX } from '@visx/curve';\r\nimport { GridRows, GridColumns } from '@visx/grid';\r\nimport { scaleTime, scaleLinear } from '@visx/scale';\r\nimport { withTooltip, Tooltip, TooltipWithBounds, defaultStyles } from '@visx/tooltip';\r\nimport { WithTooltipProvidedProps } from '@visx/tooltip/lib/enhancers/withTooltip';\r\nimport { localPoint } from '@visx/event';\r\nimport { LinearGradient } from '@visx/gradient';\r\nimport { max, extent, bisector } from 'd3-array';\r\nimport { timeFormat } from 'd3-time-format';\r\n\r\ntype TooltipData = AppleStock;\r\n\r\nconst stock = appleStock.slice(800);\r\nexport const background = '#3b6978';\r\nexport const background2 = '#204051';\r\nexport const accentColor = '#edffea';\r\nexport const accentColorDark = '#75daad';\r\nconst tooltipStyles = {\r\n  ...defaultStyles,\r\n  background,\r\n  border: '1px solid white',\r\n  color: 'white',\r\n};\r\n\r\n// util\r\nconst formatDate = timeFormat(\"%b %d, '%y\");\r\n\r\n// accessors\r\nconst getDate = (d: AppleStock) => new Date(d.date);\r\nconst getStockValue = (d: AppleStock) => d.close;\r\nconst bisectDate = bisector<AppleStock, Date>(d => new Date(d.date)).left;\r\n\r\nexport type AreaProps = {\r\n  width: number;\r\n  height: number;\r\n  margin?: { top: number; right: number; bottom: number; left: number };\r\n};\r\n\r\nexport default withTooltip<AreaProps, TooltipData>(\r\n  ({\r\n    width,\r\n    height,\r\n    margin = { top: 0, right: 0, bottom: 0, left: 0 },\r\n    showTooltip,\r\n    hideTooltip,\r\n    tooltipData,\r\n    tooltipTop = 0,\r\n    tooltipLeft = 0,\r\n  }: AreaProps & WithTooltipProvidedProps<TooltipData>) => {\r\n    if (width < 10) return null;\r\n\r\n    // bounds\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // scales\r\n    const dateScale = useMemo(\r\n      () =>\r\n        scaleTime({\r\n          range: [margin.left, innerWidth + margin.left],\r\n          domain: extent(stock, getDate) as [Date, Date],\r\n        }),\r\n      [innerWidth, margin.left],\r\n    );\r\n    const stockValueScale = useMemo(\r\n      () =>\r\n        scaleLinear({\r\n          range: [innerHeight + margin.top, margin.top],\r\n          domain: [0, (max(stock, getStockValue) || 0) + innerHeight / 3],\r\n          nice: true,\r\n        }),\r\n      [margin.top, innerHeight],\r\n    );\r\n\r\n    // tooltip handler\r\n    const handleTooltip = useCallback(\r\n      (event: React.TouchEvent<SVGRectElement> | React.MouseEvent<SVGRectElement>) => {\r\n        const { x } = localPoint(event) || { x: 0 };\r\n        const x0 = dateScale.invert(x);\r\n        const index = bisectDate(stock, x0, 1);\r\n        const d0 = stock[index - 1];\r\n        const d1 = stock[index];\r\n        let d = d0;\r\n        if (d1 && getDate(d1)) {\r\n          d = x0.valueOf() - getDate(d0).valueOf() > getDate(d1).valueOf() - x0.valueOf() ? d1 : d0;\r\n        }\r\n        showTooltip({\r\n          tooltipData: d,\r\n          tooltipLeft: x,\r\n          tooltipTop: stockValueScale(getStockValue(d)),\r\n        });\r\n      },\r\n      [showTooltip, stockValueScale, dateScale],\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <svg width={width} height={height}>\r\n          <rect\r\n            x={0}\r\n            y={0}\r\n            width={width}\r\n            height={height}\r\n            fill=\"url(#area-background-gradient)\"\r\n            rx={14}\r\n          />\r\n          <LinearGradient id=\"area-background-gradient\" from={background} to={background2} />\r\n          <LinearGradient id=\"area-gradient\" from={accentColor} to={accentColor} toOpacity={0.1} />\r\n          <GridRows\r\n            left={margin.left}\r\n            scale={stockValueScale}\r\n            width={innerWidth}\r\n            strokeDasharray=\"1,3\"\r\n            stroke={accentColor}\r\n            strokeOpacity={0}\r\n            pointerEvents=\"none\"\r\n          />\r\n          <GridColumns\r\n            top={margin.top}\r\n            scale={dateScale}\r\n            height={innerHeight}\r\n            strokeDasharray=\"1,3\"\r\n            stroke={accentColor}\r\n            strokeOpacity={0.2}\r\n            pointerEvents=\"none\"\r\n          />\r\n          <AreaClosed<AppleStock>\r\n            data={stock}\r\n            x={d => dateScale(getDate(d)) ?? 0}\r\n            y={d => stockValueScale(getStockValue(d)) ?? 0}\r\n            yScale={stockValueScale}\r\n            strokeWidth={1}\r\n            stroke=\"url(#area-gradient)\"\r\n            fill=\"url(#area-gradient)\"\r\n            curve={curveMonotoneX}\r\n          />\r\n          <Bar\r\n            x={margin.left}\r\n            y={margin.top}\r\n            width={innerWidth}\r\n            height={innerHeight}\r\n            fill=\"transparent\"\r\n            rx={14}\r\n            onTouchStart={handleTooltip}\r\n            onTouchMove={handleTooltip}\r\n            onMouseMove={handleTooltip}\r\n            onMouseLeave={() => hideTooltip()}\r\n          />\r\n          {tooltipData && (\r\n            <g>\r\n              <Line\r\n                from={{ x: tooltipLeft, y: margin.top }}\r\n                to={{ x: tooltipLeft, y: innerHeight + margin.top }}\r\n                stroke={accentColorDark}\r\n                strokeWidth={2}\r\n                pointerEvents=\"none\"\r\n                strokeDasharray=\"5,2\"\r\n              />\r\n              <circle\r\n                cx={tooltipLeft}\r\n                cy={tooltipTop + 1}\r\n                r={4}\r\n                fill=\"black\"\r\n                fillOpacity={0.1}\r\n                stroke=\"black\"\r\n                strokeOpacity={0.1}\r\n                strokeWidth={2}\r\n                pointerEvents=\"none\"\r\n              />\r\n              <circle\r\n                cx={tooltipLeft}\r\n                cy={tooltipTop}\r\n                r={4}\r\n                fill={accentColorDark}\r\n                stroke=\"white\"\r\n                strokeWidth={2}\r\n                pointerEvents=\"none\"\r\n              />\r\n            </g>\r\n          )}\r\n        </svg>\r\n        {tooltipData && (\r\n          <div>\r\n            <TooltipWithBounds\r\n              key={Math.random()}\r\n              top={tooltipTop - 12}\r\n              left={tooltipLeft + 12}\r\n              style={tooltipStyles}\r\n            >\r\n              {`$${getStockValue(tooltipData)}`}\r\n            </TooltipWithBounds>\r\n            <Tooltip\r\n              top={innerHeight + margin.top - 14}\r\n              left={tooltipLeft}\r\n              style={{\r\n                ...defaultStyles,\r\n                minWidth: 72,\r\n                textAlign: 'center',\r\n                transform: 'translateX(-50%)',\r\n              }}\r\n            >\r\n              {formatDate(getDate(tooltipData))}\r\n            </Tooltip>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  },\r\n);"]},"metadata":{},"sourceType":"module"}