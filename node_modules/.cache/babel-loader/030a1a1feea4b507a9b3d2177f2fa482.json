{"ast":null,"code":"var _jsxFileName = \"C:\\\\remotePackRlab\\\\remotePackRlab\\\\src\\\\Components\\\\Home\\\\DeviceDashBoard\\\\DeviceDashBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../Shared/Navbar';\nimport DeveiceMeter from '../Locations/DeveiceMeter';\nimport logo from '../../../Resorces/logo_RLAB.png';\nimport './DeviceDashBoard.css';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport db from '../../FirebaseConfig/Firebase';\nimport { useContext } from 'react';\nimport { userContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeviceDashBoard = () => {\n  _s();\n\n  let {\n    format,\n    id\n  } = useParams();\n  const [status, setStatus] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pastData, setPastData] = useState([]); // const [pastData, setPastData] = useState({   present:true,   week:false,\n  // day:false,   halfDay:false,   sixH:false,   oneH:false })\n\n  const [user, setUser] = useContext(userContext);\n\n  async function arrayFunc(arr, key) {\n    let resultArray = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].dateSocket <= key) {\n        resultArray = await arr[i];\n      }\n    }\n\n    return resultArray;\n  }\n\n  ; //  function for liner search start finish |^ linear search shorting data\n\n  useEffect(() => {\n    if (user.present === true) {\n      const userDb = db.collection(\"RealTime\").doc(id).onSnapshot(querySnapshot => {\n        setStatus({ ...querySnapshot.data(),\n          key: querySnapshot.id\n        }); // const maxNumber1 = maxNumber(getDataFirebase);\n      });\n      return userDb;\n    } else if (user.week === true) {\n      let UnixTimeFOrToday = Math.floor(Date.now() / 1000);\n      let unixToWeek = UnixTimeFOrToday - 604800;\n      const userDb2 = db.collection(id).where('dateSocket', '=', unixToWeek).orderBy('dateSocket', 'desc').limit(1999).onSnapshot(querySnapshot => {\n        let getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n        setPastData(getDataFirebase);\n        console.log({\n          getDataFirebase\n        });\n        return userDb2;\n      });\n    }\n  }, [loading, format, id, user]);\n  console.log('dateSocket', 1627894069369 - 6.048e+8);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-1\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-11 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\",\n        style: {\n          width: '20%'\n        },\n        className: \"mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeveiceMeter, {\n        data: status,\n        pastDataTrig: user,\n        setProps: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeviceDashBoard, \"BhpL9FTRdbpT2mwVzZ5CZpva3lA=\", false, function () {\n  return [useParams];\n});\n\n_c = DeviceDashBoard;\nexport default DeviceDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDashBoard\");","map":{"version":3,"sources":["C:/remotePackRlab/remotePackRlab/src/Components/Home/DeviceDashBoard/DeviceDashBoard.js"],"names":["React","useEffect","useState","Navbar","DeveiceMeter","logo","BrowserRouter","Router","Switch","Route","Link","useParams","db","useContext","userContext","DeviceDashBoard","format","id","status","setStatus","loading","setLoading","pastData","setPastData","user","setUser","arrayFunc","arr","key","resultArray","i","length","dateSocket","present","userDb","collection","doc","onSnapshot","querySnapshot","data","week","UnixTimeFOrToday","Math","floor","Date","now","unixToWeek","userDb2","where","orderBy","limit","getDataFirebase","forEach","push","console","log","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeveiceMeter from '../Locations/DeveiceMeter';\r\n\r\nimport logo from '../../../Resorces/logo_RLAB.png';\r\nimport './DeviceDashBoard.css';\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Link, useParams} from \"react-router-dom\";\r\n\r\nimport db from '../../FirebaseConfig/Firebase'\r\nimport {useContext} from 'react';\r\nimport {userContext} from '../../../App';\r\n\r\nconst DeviceDashBoard = () => {\r\n    let {format, id} = useParams();\r\n\r\n    const [status, setStatus] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [pastData, setPastData] = useState([])\r\n    // const [pastData, setPastData] = useState({   present:true,   week:false,\r\n    // day:false,   halfDay:false,   sixH:false,   oneH:false })\r\n    const [user, setUser] = useContext(userContext)\r\n\r\n    async function arrayFunc(arr, key) {\r\n        let resultArray = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i].dateSocket <= key) {\r\n                resultArray = await arr[i];\r\n            }\r\n        }\r\n        return resultArray\r\n    };\r\n\r\n    //  function for liner search start finish |^ linear search shorting data\r\n\r\n    useEffect(() => {\r\n        if (user.present === true) {\r\n            const userDb = db\r\n                .collection(\"RealTime\")\r\n                .doc(id)\r\n                .onSnapshot((querySnapshot) => {\r\n\r\n                    setStatus({\r\n                        ...querySnapshot.data(),\r\n                        key: querySnapshot.id\r\n                    });\r\n\r\n                    // const maxNumber1 = maxNumber(getDataFirebase);\r\n\r\n                });\r\n            return userDb;\r\n        } else if (user.week === true) {\r\n          let UnixTimeFOrToday = Math.floor(Date.now() / 1000);\r\n          let unixToWeek = UnixTimeFOrToday - 604800;\r\n            const userDb2 = db.collection(id).where('dateSocket', '=', unixToWeek).orderBy('dateSocket', 'desc').limit(1999).onSnapshot((querySnapshot) => {\r\n                    let getDataFirebase = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        getDataFirebase.push({...doc.data(),key: doc.id});\r\n                    });\r\n                    \r\n                    \r\n                    \r\n                    setPastData(getDataFirebase)\r\n                    console.log({getDataFirebase})\r\n                    return userDb2\r\n                });\r\n           \r\n       \r\n    \r\n\r\n        }\r\n\r\n    }, [loading, format, id, user]);\r\n    \r\n    console.log('dateSocket', 1627894069369 - 6.048e+8)\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-1\">\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-11 text-center\">\r\n                <img\r\n                    src={logo}\r\n                    alt=\"\"\r\n                    style={{\r\n                        width: '20%'\r\n                    }}\r\n                    className='mt-5'/>\r\n\r\n                <DeveiceMeter data={status} pastDataTrig={user} setProps={user}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeviceDashBoard;"]},"metadata":{},"sourceType":"module"}