{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rlab\\\\client\\\\src\\\\Components\\\\Home\\\\Command\\\\Command.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { PubSub } from '@google-cloud/pubsub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Command = () => {\n  _s();\n\n  const [pubSubM, setPubSubM] = useState({\n    topic: '',\n    sub: '',\n    message: ''\n  });\n\n  const handleOnChange = event => {\n    const newPubSubM = { ...pubSubM\n    };\n    newPubSubM[event.target.name] = event.target.value;\n    setPubSubM(newPubSubM);\n  };\n\n  async function quickstart(projectId = 'your-project-id', // Your Google Cloud Platform project ID\n  topicName = 'my-topic', // Name for the new topic to create\n  subscriptionName = 'my-sub' // Name for the new subscription to create\n  ) {\n    // Instantiates a client\n    const pubsub = new PubSub({\n      projectId\n    }); // Creates a new topic\n\n    const [topic] = await pubsub.createTopic(topicName);\n    console.log(`Topic ${topic.name} created.`); // Creates a subscription on that new topic\n\n    const [subscription] = await topic.createSubscription(subscriptionName); // Receive callbacks for new messages on the subscription\n\n    subscription.on('message', message => {\n      console.log('Received message:', message.data.toString());\n      process.exit(0);\n    }); // Receive callbacks for errors on the subscription\n\n    subscription.on('error', error => {\n      console.error('Received error:', error);\n      process.exit(1);\n    }); // Send a message to the topic\n\n    topic.publish(Buffer.from('Test message!'));\n  }\n\n  const handleSubmit = e => {\n    e.preventDefautl();\n  };\n\n  console.log(pubSubM);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-light\",\n      children: \"Send command in Google Cloud Pub/sub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"topic\",\n            children: \"Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"topic\",\n            name: \"topic\",\n            id: \"topic\",\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sub\",\n            children: \"Subscriptions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Subscriptions\",\n            name: \"sub\",\n            id: \"sub\",\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-around\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sub\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Message\",\n            id: \"message\",\n            name: \"message\",\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Command, \"z7N1RCwSMfkL5dD6zsRekwZG1RQ=\");\n\n_c = Command;\nexport default Command;\n\nvar _c;\n\n$RefreshReg$(_c, \"Command\");","map":{"version":3,"sources":["F:/Rlab/client/src/Components/Home/Command/Command.js"],"names":["React","useState","PubSub","Command","pubSubM","setPubSubM","topic","sub","message","handleOnChange","event","newPubSubM","target","name","value","quickstart","projectId","topicName","subscriptionName","pubsub","createTopic","console","log","subscription","createSubscription","on","data","toString","process","exit","error","publish","Buffer","from","handleSubmit","e","preventDefautl"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {PubSub} from '@google-cloud/pubsub';\r\n\r\nconst Command = () => {\r\n    const [pubSubM, setPubSubM] = useState({\r\n        topic:'',\r\n        sub:'',\r\n        message:'',\r\n    })\r\nconst handleOnChange = (event) => {\r\n    const newPubSubM = {...pubSubM};\r\n    newPubSubM[event.target.name] = event.target.value;\r\n    setPubSubM(newPubSubM)\r\n}\r\nasync function quickstart(\r\n    projectId = 'your-project-id', // Your Google Cloud Platform project ID\r\n    topicName = 'my-topic', // Name for the new topic to create\r\n    subscriptionName = 'my-sub' // Name for the new subscription to create\r\n  ) {\r\n    // Instantiates a client\r\n    const pubsub = new PubSub({projectId});\r\n  \r\n    // Creates a new topic\r\n    const [topic] = await pubsub.createTopic(topicName);\r\n    console.log(`Topic ${topic.name} created.`);\r\n  \r\n    // Creates a subscription on that new topic\r\n    const [subscription] = await topic.createSubscription(subscriptionName);\r\n  \r\n    // Receive callbacks for new messages on the subscription\r\n    subscription.on('message', message => {\r\n      console.log('Received message:', message.data.toString());\r\n      process.exit(0);\r\n    });\r\n  \r\n    // Receive callbacks for errors on the subscription\r\n    subscription.on('error', error => {\r\n      console.error('Received error:', error);\r\n      process.exit(1);\r\n    });\r\n  \r\n    // Send a message to the topic\r\n    topic.publish(Buffer.from('Test message!'));\r\n  }\r\n  \r\nconst handleSubmit = (e) => {\r\n    \r\n    e.preventDefautl()\r\n}\r\nconsole.log(pubSubM);\r\n    return (\r\n        <div>\r\n            <h1 className='text-light'>Send command in Google Cloud Pub/sub</h1>\r\n            <div>\r\n                <form action=\"\" onSubmit={handleSubmit}>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <label htmlFor=\"topic\">Topic</label>\r\n                        <input type=\"text\" placeholder=\"topic\" name=\"topic\" id=\"topic\" onChange={handleOnChange}/>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <label htmlFor=\"sub\">Subscriptions</label>\r\n                        <input type=\"text\" placeholder=\"Subscriptions\" name=\"sub\" id=\"sub\" onChange={handleOnChange}/>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <label htmlFor=\"sub\">Message</label>\r\n                        <textarea placeholder=\"Message\" id=\"message\" name=\"message\" onChange={handleOnChange}/>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" type=\"submit\" >Send</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Command;"]},"metadata":{},"sourceType":"module"}