{"ast":null,"code":"import isValidNumber from '../typeguards/isValidNumber';\nimport getScaleBandwidth from './getScaleBandwidth';\n/** Returns a function that takes a Datum as input and returns a scaled value, correcting for the scale's bandwidth if applicable. */\n\nexport default function getScaledValueFactory(scale, accessor, align) {\n  if (align === void 0) {\n    align = 'center';\n  }\n\n  return function (d) {\n    var scaledValue = scale(accessor(d));\n\n    if (isValidNumber(scaledValue)) {\n      var bandwidthOffset = (align === 'start' ? 0 : getScaleBandwidth(scale)) / (align === 'center' ? 2 : 1);\n      return scaledValue + bandwidthOffset;\n    }\n\n    return NaN;\n  };\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/xychart/esm/utils/getScaledValueFactory.js"],"names":["isValidNumber","getScaleBandwidth","getScaledValueFactory","scale","accessor","align","d","scaledValue","bandwidthOffset","NaN"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCC,QAAtC,EAAgDC,KAAhD,EAAuD;AACpE,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,IAAAA,KAAK,GAAG,QAAR;AACD;;AAED,SAAO,UAAUC,CAAV,EAAa;AAClB,QAAIC,WAAW,GAAGJ,KAAK,CAACC,QAAQ,CAACE,CAAD,CAAT,CAAvB;;AAEA,QAAIN,aAAa,CAACO,WAAD,CAAjB,EAAgC;AAC9B,UAAIC,eAAe,GAAG,CAACH,KAAK,KAAK,OAAV,GAAoB,CAApB,GAAwBJ,iBAAiB,CAACE,KAAD,CAA1C,KAAsDE,KAAK,KAAK,QAAV,GAAqB,CAArB,GAAyB,CAA/E,CAAtB;AACA,aAAOE,WAAW,GAAGC,eAArB;AACD;;AAED,WAAOC,GAAP;AACD,GATD;AAUD","sourcesContent":["import isValidNumber from '../typeguards/isValidNumber';\nimport getScaleBandwidth from './getScaleBandwidth';\n/** Returns a function that takes a Datum as input and returns a scaled value, correcting for the scale's bandwidth if applicable. */\n\nexport default function getScaledValueFactory(scale, accessor, align) {\n  if (align === void 0) {\n    align = 'center';\n  }\n\n  return function (d) {\n    var scaledValue = scale(accessor(d));\n\n    if (isValidNumber(scaledValue)) {\n      var bandwidthOffset = (align === 'start' ? 0 : getScaleBandwidth(scale)) / (align === 'center' ? 2 : 1);\n      return scaledValue + bandwidthOffset;\n    }\n\n    return NaN;\n  };\n}"]},"metadata":{},"sourceType":"module"}