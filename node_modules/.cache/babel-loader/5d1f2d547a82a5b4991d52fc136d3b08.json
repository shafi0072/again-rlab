{"ast":null,"code":"var _jsxFileName = \"C:\\\\remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161\\\\src\\\\Components\\\\Home\\\\Locations\\\\Dashboard\\\\BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport AreaClosed from \"@visx/shape/lib/shapes/AreaClosed\";\nimport { curveMonotoneX } from \"@visx/curve\";\nimport { scaleUtc, scaleLinear, scaleLog, scaleBand, coerceNumber } from \"@visx/scale\";\nimport { Orientation } from \"@visx/axis\";\nimport { AnimatedAxis, AnimatedGridRows, AnimatedGridColumns } from \"@visx/react-spring\";\nimport { LinearGradient } from \"@visx/gradient\";\nimport { timeFormat } from \"d3-time-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const backgroundColor = \"#da7cff\";\nconst axisColor = \"#fff\";\nconst tickLabelColor = \"#fff\";\nexport const labelColor = \"#340098\";\nconst gridColor = \"#6e0fca\";\nconst margin = {\n  top: 40,\n  right: 150,\n  bottom: 20,\n  left: 50\n};\n\nconst tickLabelProps = () => ({\n  fill: tickLabelColor,\n  fontSize: 12,\n  fontFamily: \"sans-serif\",\n  textAnchor: \"middle\"\n});\n\nconst getMinMax = vals => {\n  const numericVals = vals.map(coerceNumber);\n  return [Math.min(...numericVals), Math.max(...numericVals)];\n};\n\nfunction Example({\n  width: outerWidth = 800,\n  height: outerHeight = 800,\n  showControls = true\n}) {\n  _s();\n\n  const width = outerWidth - margin.left - margin.right;\n  const height = outerHeight - margin.top - margin.bottom;\n  const [dataToggle] = useState(true);\n  const [animationTrajectory] = useState(\"center\");\n  const axes = useMemo(() => {\n    const linearValues = dataToggle ? [0, 2, 4, 6, 8, 10] : [6, 8, 10, 12];\n    return [{\n      scale: scaleLinear({\n        domain: getMinMax(linearValues),\n        range: [0, width]\n      }),\n      values: linearValues,\n      tickFormat: (v, index, ticks) => index === 0 ? \"first\" : index === ticks[ticks.length - 1].index ? \"last\" : `${v}`,\n      label: \"linear\"\n    }];\n  }, [dataToggle, width]);\n  if (width < 10) return null;\n  const scalePadding = 40;\n  const scaleHeight = height / axes.length - scalePadding;\n  const yScale = scaleLinear({\n    domain: [100, 0],\n    range: [scaleHeight, 0]\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: outerWidth,\n      height: outerHeight,\n      children: [/*#__PURE__*/_jsxDEV(LinearGradient, {\n        id: \"visx-axis-gradient\",\n        from: backgroundColor,\n        to: backgroundColor,\n        toOpacity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: 0,\n        y: 0,\n        width: outerWidth,\n        height: outerHeight,\n        fill: \"url(#visx-axis-gradient)\",\n        rx: 14\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${margin.left},${margin.top})`,\n        children: axes.map(({\n          scale,\n          values,\n          label,\n          tickFormat\n        }, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(0, ${i * (scaleHeight + scalePadding)})`,\n          children: [/*#__PURE__*/_jsxDEV(AnimatedGridRows, {\n            scale: yScale,\n            stroke: gridColor,\n            width: width,\n            numTicks: dataToggle ? 1 : 3,\n            animationTrajectory: animationTrajectory\n          }, `gridrows-${animationTrajectory}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AnimatedGridColumns, {\n            scale: scale,\n            stroke: gridColor,\n            height: scaleHeight,\n            numTicks: dataToggle ? 5 : 2,\n            animationTrajectory: animationTrajectory\n          }, `gridcolumns-${animationTrajectory}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AreaClosed, {\n            data: values.map(x => {\n              var _scale;\n\n              return [((_scale = scale(x)) !== null && _scale !== void 0 ? _scale : 0) + (\"bandwidth\" in scale && typeof scale.bandwidth !== \"undefined\" ? scale.bandwidth() / 2 : 0), yScale(10 + Math.random() * 90)];\n            }),\n            yScale: yScale,\n            curve: curveMonotoneX,\n            fill: gridColor,\n            fillOpacity: 0.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AnimatedAxis, {\n            orientation: Orientation.bottom,\n            top: scaleHeight,\n            scale: scale,\n            tickFormat: tickFormat,\n            stroke: axisColor,\n            tickStroke: axisColor,\n            tickLabelProps: tickLabelProps,\n            tickValues: label === \"log\" || label === \"time\" ? undefined : values,\n            numTicks: label === \"time\" ? 6 : undefined,\n            label: label,\n            labelProps: {\n              x: width + 30,\n              y: -10,\n              fill: labelColor,\n              fontSize: 18,\n              strokeWidth: 0,\n              stroke: \"#fff\",\n              paintOrder: \"stroke\",\n              fontFamily: \"sans-serif\",\n              textAnchor: \"start\"\n            },\n            animationTrajectory: animationTrajectory\n          }, `axis-${animationTrajectory}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, `scale-${i}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Example, \"kWkE+Bg+VMdKJz/LHX2EpBcZvoA=\");\n\n_c = Example;\n\nconst BarChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = BarChart;\nexport default BarChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"BarChart\");","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/src/Components/Home/Locations/Dashboard/BarChart.js"],"names":["React","useState","useMemo","AreaClosed","curveMonotoneX","scaleUtc","scaleLinear","scaleLog","scaleBand","coerceNumber","Orientation","AnimatedAxis","AnimatedGridRows","AnimatedGridColumns","LinearGradient","timeFormat","backgroundColor","axisColor","tickLabelColor","labelColor","gridColor","margin","top","right","bottom","left","tickLabelProps","fill","fontSize","fontFamily","textAnchor","getMinMax","vals","numericVals","map","Math","min","max","Example","width","outerWidth","height","outerHeight","showControls","dataToggle","animationTrajectory","axes","linearValues","scale","domain","range","values","tickFormat","v","index","ticks","length","label","scalePadding","scaleHeight","yScale","i","x","bandwidth","random","undefined","y","strokeWidth","stroke","paintOrder","BarChart"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport AreaClosed from \"@visx/shape/lib/shapes/AreaClosed\";\r\nimport { curveMonotoneX } from \"@visx/curve\";\r\nimport {\r\n  scaleUtc,\r\n  scaleLinear,\r\n  scaleLog,\r\n  scaleBand,\r\n  coerceNumber\r\n} from \"@visx/scale\";\r\nimport { Orientation } from \"@visx/axis\";\r\nimport {\r\n  AnimatedAxis,\r\n  AnimatedGridRows,\r\n  AnimatedGridColumns\r\n} from \"@visx/react-spring\";\r\nimport { LinearGradient } from \"@visx/gradient\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nexport const backgroundColor = \"#da7cff\";\r\nconst axisColor = \"#fff\";\r\nconst tickLabelColor = \"#fff\";\r\nexport const labelColor = \"#340098\";\r\nconst gridColor = \"#6e0fca\";\r\nconst margin = {\r\n  top: 40,\r\n  right: 150,\r\n  bottom: 20,\r\n  left: 50\r\n};\r\n\r\nconst tickLabelProps = () => ({\r\n  fill: tickLabelColor,\r\n  fontSize: 12,\r\n  fontFamily: \"sans-serif\",\r\n  textAnchor: \"middle\"\r\n});\r\n\r\nconst getMinMax = (vals) => {\r\n  const numericVals = vals.map(coerceNumber);\r\n  return [Math.min(...numericVals), Math.max(...numericVals)];\r\n};\r\n\r\nfunction Example({\r\n  width: outerWidth = 800,\r\n  height: outerHeight = 800,\r\n  showControls = true\r\n}) {\r\n  const width = outerWidth - margin.left - margin.right;\r\n  const height = outerHeight - margin.top - margin.bottom;\r\n  const [dataToggle] = useState(true);\r\n  const [animationTrajectory] = useState(\"center\");\r\n\r\n  const axes = useMemo(() => {\r\n    const linearValues = dataToggle ? [0, 2, 4, 6, 8, 10] : [6, 8, 10, 12];\r\n\r\n  return [\r\n      {\r\n        scale: scaleLinear({\r\n          domain: getMinMax(linearValues),\r\n          range: [0, width]\r\n        }),\r\n        values: linearValues,\r\n        tickFormat: (v, index, ticks) =>\r\n          index === 0\r\n            ? \"first\"\r\n            : index === ticks[ticks.length - 1].index\r\n            ? \"last\"\r\n            : `${v}`,\r\n        label: \"linear\"\r\n      }\r\n    ];\r\n  }, [dataToggle, width]);\r\n\r\n  if (width < 10) return null;\r\n\r\n  const scalePadding = 40;\r\n  const scaleHeight = height / axes.length - scalePadding;\r\n\r\n  const yScale = scaleLinear({\r\n    domain: [100, 0],\r\n    range: [scaleHeight, 0]\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <svg width={outerWidth} height={outerHeight}>\r\n        <LinearGradient\r\n          id=\"visx-axis-gradient\"\r\n          from={backgroundColor}\r\n          to={backgroundColor}\r\n          toOpacity={0.5}\r\n        />\r\n        <rect\r\n          x={0}\r\n          y={0}\r\n          width={outerWidth}\r\n          height={outerHeight}\r\n          fill={\"url(#visx-axis-gradient)\"}\r\n          rx={14}\r\n        />\r\n        <g transform={`translate(${margin.left},${margin.top})`}>\r\n          {axes.map(({ scale, values, label, tickFormat }, i) => (\r\n            <g\r\n              key={`scale-${i}`}\r\n              transform={`translate(0, ${i * (scaleHeight + scalePadding)})`}\r\n            >\r\n              <AnimatedGridRows\r\n                key={`gridrows-${animationTrajectory}`}\r\n                scale={yScale}\r\n                stroke={gridColor}\r\n                width={width}\r\n                numTicks={dataToggle ? 1 : 3}\r\n                animationTrajectory={animationTrajectory}\r\n              />\r\n              <AnimatedGridColumns\r\n                key={`gridcolumns-${animationTrajectory}`}\r\n                scale={scale}\r\n                stroke={gridColor}\r\n                height={scaleHeight}\r\n                numTicks={dataToggle ? 5 : 2}\r\n                animationTrajectory={animationTrajectory}\r\n              />\r\n              <AreaClosed\r\n                data={values.map((x) => [\r\n                  (scale(x) ?? 0) +\r\n                    (\"bandwidth\" in scale &&\r\n                    typeof scale.bandwidth !== \"undefined\"\r\n                      ? scale.bandwidth() / 2\r\n                      : 0),\r\n                  yScale(10 + Math.random() * 90)\r\n                ])}\r\n                yScale={yScale}\r\n                curve={curveMonotoneX}\r\n                fill={gridColor}\r\n                fillOpacity={0.2}\r\n              />\r\n              <AnimatedAxis\r\n                key={`axis-${animationTrajectory}`}\r\n                orientation={Orientation.bottom}\r\n                top={scaleHeight}\r\n                scale={scale}\r\n                tickFormat={tickFormat}\r\n                stroke={axisColor}\r\n                tickStroke={axisColor}\r\n                tickLabelProps={tickLabelProps}\r\n                tickValues={\r\n                  label === \"log\" || label === \"time\" ? undefined : values\r\n                }\r\n                numTicks={label === \"time\" ? 6 : undefined}\r\n                label={label}\r\n                labelProps={{\r\n                  x: width + 30,\r\n                  y: -10,\r\n                  fill: labelColor,\r\n                  fontSize: 18,\r\n                  strokeWidth: 0,\r\n                  stroke: \"#fff\",\r\n                  paintOrder: \"stroke\",\r\n                  fontFamily: \"sans-serif\",\r\n                  textAnchor: \"start\"\r\n                }}\r\n                animationTrajectory={animationTrajectory}\r\n              />\r\n            </g>\r\n          ))}\r\n        </g>\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst BarChart = () => {\r\n    return (\r\n        <div>\r\n            <LineChart />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}