{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Line } from '@visx/shape';\nimport { Text } from '@visx/text';\nimport getLabelTransform from '../utils/getLabelTransform';\nimport Ticks from './Ticks';\nimport { Orientation } from '..';\nvar defaultTextProps = {\n  textAnchor: 'middle',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  fill: '#222'\n};\nexport default function AxisRenderer(_ref) {\n  var axisFromPoint = _ref.axisFromPoint,\n      axisLineClassName = _ref.axisLineClassName,\n      axisToPoint = _ref.axisToPoint,\n      hideAxisLine = _ref.hideAxisLine,\n      hideTicks = _ref.hideTicks,\n      horizontal = _ref.horizontal,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === void 0 ? 14 : _ref$labelOffset,\n      _ref$labelProps = _ref.labelProps,\n      labelProps = _ref$labelProps === void 0 ? defaultTextProps : _ref$labelProps,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? Orientation.bottom : _ref$orientation,\n      scale = _ref.scale,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#222' : _ref$stroke,\n      strokeDasharray = _ref.strokeDasharray,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      tickClassName = _ref.tickClassName,\n      tickComponent = _ref.tickComponent,\n      tickLineProps = _ref.tickLineProps,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === void 0 ? function () {\n    return (\n      /** tickValue, index, tickValues */\n      defaultTextProps\n    );\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength,\n      _ref$tickStroke = _ref.tickStroke,\n      tickStroke = _ref$tickStroke === void 0 ? '#222' : _ref$tickStroke,\n      tickTransform = _ref.tickTransform,\n      ticks = _ref.ticks,\n      _ref$ticksComponent = _ref.ticksComponent,\n      ticksComponent = _ref$ticksComponent === void 0 ? Ticks : _ref$ticksComponent; // compute the max tick label size to compute label offset\n\n  var allTickLabelProps = ticks.map(function (_ref2) {\n    var value = _ref2.value,\n        index = _ref2.index;\n    return tickLabelProps(value, index, ticks);\n  });\n  var maxTickLabelFontSize = Math.max.apply(Math, [10].concat(allTickLabelProps.map(function (props) {\n    return typeof props.fontSize === 'number' ? props.fontSize : 0;\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ticksComponent({\n    hideTicks: hideTicks,\n    horizontal: horizontal,\n    orientation: orientation,\n    scale: scale,\n    tickClassName: tickClassName,\n    tickComponent: tickComponent,\n    tickLabelProps: allTickLabelProps,\n    tickStroke: tickStroke,\n    tickTransform: tickTransform,\n    ticks: ticks,\n    strokeWidth: strokeWidth,\n    tickLineProps: tickLineProps\n  }), !hideAxisLine && /*#__PURE__*/React.createElement(Line, {\n    className: cx('visx-axis-line', axisLineClassName),\n    from: axisFromPoint,\n    to: axisToPoint,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray\n  }), label && /*#__PURE__*/React.createElement(Text, _extends({\n    className: cx('visx-axis-label', labelClassName)\n  }, getLabelTransform({\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    orientation: orientation,\n    range: scale.range(),\n    tickLabelFontSize: maxTickLabelFontSize,\n    tickLength: tickLength\n  }), labelProps), label));\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/axis/esm/axis/AxisRenderer.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","cx","Line","Text","getLabelTransform","Ticks","Orientation","defaultTextProps","textAnchor","fontFamily","fontSize","fill","AxisRenderer","_ref","axisFromPoint","axisLineClassName","axisToPoint","hideAxisLine","hideTicks","horizontal","_ref$label","label","labelClassName","_ref$labelOffset","labelOffset","_ref$labelProps","labelProps","_ref$orientation","orientation","bottom","scale","_ref$stroke","stroke","strokeDasharray","_ref$strokeWidth","strokeWidth","tickClassName","tickComponent","tickLineProps","_ref$tickLabelProps","tickLabelProps","_ref$tickLength","tickLength","_ref$tickStroke","tickStroke","tickTransform","ticks","_ref$ticksComponent","ticksComponent","allTickLabelProps","map","_ref2","value","index","maxTickLabelFontSize","Math","max","concat","props","createElement","Fragment","className","from","to","range","tickLabelFontSize"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Line } from '@visx/shape';\nimport { Text } from '@visx/text';\nimport getLabelTransform from '../utils/getLabelTransform';\nimport Ticks from './Ticks';\nimport { Orientation } from '..';\nvar defaultTextProps = {\n  textAnchor: 'middle',\n  fontFamily: 'Arial',\n  fontSize: 10,\n  fill: '#222'\n};\nexport default function AxisRenderer(_ref) {\n  var axisFromPoint = _ref.axisFromPoint,\n      axisLineClassName = _ref.axisLineClassName,\n      axisToPoint = _ref.axisToPoint,\n      hideAxisLine = _ref.hideAxisLine,\n      hideTicks = _ref.hideTicks,\n      horizontal = _ref.horizontal,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === void 0 ? 14 : _ref$labelOffset,\n      _ref$labelProps = _ref.labelProps,\n      labelProps = _ref$labelProps === void 0 ? defaultTextProps : _ref$labelProps,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? Orientation.bottom : _ref$orientation,\n      scale = _ref.scale,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#222' : _ref$stroke,\n      strokeDasharray = _ref.strokeDasharray,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      tickClassName = _ref.tickClassName,\n      tickComponent = _ref.tickComponent,\n      tickLineProps = _ref.tickLineProps,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === void 0 ? function () {\n    return (\n      /** tickValue, index, tickValues */\n      defaultTextProps\n    );\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength,\n      _ref$tickStroke = _ref.tickStroke,\n      tickStroke = _ref$tickStroke === void 0 ? '#222' : _ref$tickStroke,\n      tickTransform = _ref.tickTransform,\n      ticks = _ref.ticks,\n      _ref$ticksComponent = _ref.ticksComponent,\n      ticksComponent = _ref$ticksComponent === void 0 ? Ticks : _ref$ticksComponent;\n  // compute the max tick label size to compute label offset\n  var allTickLabelProps = ticks.map(function (_ref2) {\n    var value = _ref2.value,\n        index = _ref2.index;\n    return tickLabelProps(value, index, ticks);\n  });\n  var maxTickLabelFontSize = Math.max.apply(Math, [10].concat(allTickLabelProps.map(function (props) {\n    return typeof props.fontSize === 'number' ? props.fontSize : 0;\n  })));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ticksComponent({\n    hideTicks: hideTicks,\n    horizontal: horizontal,\n    orientation: orientation,\n    scale: scale,\n    tickClassName: tickClassName,\n    tickComponent: tickComponent,\n    tickLabelProps: allTickLabelProps,\n    tickStroke: tickStroke,\n    tickTransform: tickTransform,\n    ticks: ticks,\n    strokeWidth: strokeWidth,\n    tickLineProps: tickLineProps\n  }), !hideAxisLine && /*#__PURE__*/React.createElement(Line, {\n    className: cx('visx-axis-line', axisLineClassName),\n    from: axisFromPoint,\n    to: axisToPoint,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray\n  }), label && /*#__PURE__*/React.createElement(Text, _extends({\n    className: cx('visx-axis-label', labelClassName)\n  }, getLabelTransform({\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    orientation: orientation,\n    range: scale.range(),\n    tickLabelFontSize: maxTickLabelFontSize,\n    tickLength: tickLength\n  }), labelProps), label));\n}"]},"metadata":{},"sourceType":"module"}