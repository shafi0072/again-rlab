{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rlab\\\\client\\\\src\\\\Components\\\\Home\\\\Locations\\\\LocationDevice.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from '../../Shared/Navbar';\nimport DeviceForm from './DevicesForm';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyBXXL_2svIOIRYEArzq7Ai8G8xLQTTTqrU\",\n    authDomain: \"iot-comm.firebaseapp.com\",\n    projectId: \"iot-comm\",\n    storageBucket: \"iot-comm.appspot.com\",\n    messagingSenderId: \"707981957974\",\n    appId: \"1:707981957974:web:5e3ecb242770f42e7b14f7\",\n    measurementId: \"G-VFR4XEJGHK\"\n  });\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nconst db = firebase.firestore();\n\nconst LocationDevice = () => {\n  _s();\n\n  const {\n    Lid\n  } = useParams();\n  console.log({\n    Lid\n  });\n  const [DBLocationDV, setDBLocationDV] = useState({});\n  useEffect(() => {\n    var docRef = db.collection(\"location\").doc(Lid);\n    docRef.get().then(doc => {\n      if (doc.exists) {\n        setDBLocationDV({ ...doc.data(),\n          key: doc.id\n        });\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }).catch(error => {\n      console.log(\"Error getting document:\", error);\n    });\n  }, [Lid]);\n  console.log({\n    DBLocationDV\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-9\",\n      children: /*#__PURE__*/_jsxDEV(DeviceForm, {\n        data: DBLocationDV\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LocationDevice, \"AhcVZvqaeHkpkqgPJ88HCUY8hPA=\", false, function () {\n  return [useParams];\n});\n\n_c = LocationDevice;\nexport default LocationDevice;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDevice\");","map":{"version":3,"sources":["F:/Rlab/client/src/Components/Home/Locations/LocationDevice.js"],"names":["React","useParams","Navbar","DeviceForm","firebase","useEffect","useState","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","firestore","LocationDevice","Lid","console","log","DBLocationDV","setDBLocationDV","docRef","collection","doc","get","then","exists","data","key","id","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,IAAI,CAACF,QAAQ,CAACG,IAAT,CAAcC,MAAnB,EAA2B;AACvBJ,EAAAA,QAAQ,CAACK,aAAT,CAAuB;AACnBC,IAAAA,MAAM,EAAE,yCADW;AAEzBC,IAAAA,UAAU,EAAE,0BAFa;AAGzBC,IAAAA,SAAS,EAAE,UAHc;AAIzBC,IAAAA,aAAa,EAAE,sBAJU;AAKzBC,IAAAA,iBAAiB,EAAE,cALM;AAMzBC,IAAAA,KAAK,EAAE,2CANkB;AAOzBC,IAAAA,aAAa,EAAE;AAPU,GAAvB;AASF,CAVF,MAUO;AACHZ,EAAAA,QAAQ,CAACa,GAAT,GADG,CACa;AAClB;;AAEF,MAAMC,EAAE,GAAGd,QAAQ,CAACe,SAAT,EAAX;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAQpB,SAAS,EAAvB;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,MAAM,GAAGR,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BP,GAA9B,CAAb;AAEAK,IAAAA,MAAM,CAACG,GAAP,GAAaC,IAAb,CAAmBF,GAAD,IAAS;AACvB,UAAIA,GAAG,CAACG,MAAR,EAAgB;AACZN,QAAAA,eAAe,CAAC,EAAC,GAAGG,GAAG,CAACI,IAAJ,EAAJ;AAAgBC,UAAAA,GAAG,EAACL,GAAG,CAACM;AAAxB,SAAD,CAAf;AACH,OAFD,MAEO;AACH;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KAPD,EAOGY,KAPH,CAOUC,KAAD,IAAW;AAChBd,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCa,KAAvC;AACH,KATD;AAUH,GAbQ,EAaN,CAACf,GAAD,CAbM,CAAT;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,IAAAA;AAAD,GAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7BD;;GAAMJ,c;UACYnB,S;;;KADZmB,c;AA+BN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeviceForm from './DevicesForm';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyBXXL_2svIOIRYEArzq7Ai8G8xLQTTTqrU\",\r\n  authDomain: \"iot-comm.firebaseapp.com\",\r\n  projectId: \"iot-comm\",\r\n  storageBucket: \"iot-comm.appspot.com\",\r\n  messagingSenderId: \"707981957974\",\r\n  appId: \"1:707981957974:web:5e3ecb242770f42e7b14f7\",\r\n  measurementId: \"G-VFR4XEJGHK\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst LocationDevice = () => {\r\n    const {Lid} = useParams();\r\n    console.log({Lid});\r\n    const [DBLocationDV, setDBLocationDV] = useState({})\r\n    useEffect(() => {\r\n        var docRef = db.collection(\"location\").doc(Lid);\r\n\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDBLocationDV({...doc.data(), key:doc.id});\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }, [Lid])\r\n    console.log({DBLocationDV});\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-3\">\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n                <DeviceForm data={DBLocationDV}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationDevice;"]},"metadata":{},"sourceType":"module"}