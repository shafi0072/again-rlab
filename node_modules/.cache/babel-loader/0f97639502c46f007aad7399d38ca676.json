{"ast":null,"code":"var _jsxFileName = \"C:\\\\remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161\\\\src\\\\Components\\\\Home\\\\Locations\\\\Dashboard\\\\BarChart.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { format } from \"date-fns\";\nimport { AnimatedAxis, AnimatedGrid, AnimatedLineSeries, Tooltip, XYChart } from \"@visx/xychart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data1 = [{\n  x: \"2018-03-01\",\n  y: 30\n}, {\n  x: \"2018-04-01\",\n  y: 16\n}, {\n  x: \"2018-05-01\",\n  y: 17\n}, {\n  x: \"2018-06-01\",\n  y: 24\n}, {\n  x: \"2018-07-01\",\n  y: 47\n}, {\n  x: \"2018-08-01\",\n  y: 32\n}, {\n  x: \"2018-09-01\",\n  y: 8\n}, {\n  x: \"2018-10-01\",\n  y: 27\n}, {\n  x: \"2018-11-01\",\n  y: 31\n}, {\n  x: \"2018-12-01\",\n  y: 105\n}, {\n  x: \"2019-01-01\",\n  y: 166\n}, {\n  x: \"2019-02-01\",\n  y: 181\n}, {\n  x: \"2019-03-01\",\n  y: 232\n}, {\n  x: \"2019-04-01\",\n  y: 224\n}, {\n  x: \"2019-05-01\",\n  y: 196\n}, {\n  x: \"2019-06-01\",\n  y: 211\n}];\nconst tickLabelOffset = 10;\nconst accessors = {\n  xAccessor: d => new Date(`${d.x}T00:00:00`),\n  yAccessor: d => d.y\n};\n\nconst LineChart = () => {\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: /*#__PURE__*/_jsxDEV(XYChart, {\n      height: 270,\n      margin: {\n        left: 60,\n        top: 35,\n        bottom: 38,\n        right: 27\n      },\n      xScale: {\n        type: \"time\"\n      },\n      yScale: {\n        type: \"linear\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(AnimatedGrid, {\n        columns: false,\n        numTicks: 4,\n        lineStyle: {\n          stroke: \"#e1e1e1\",\n          strokeLinecap: \"round\",\n          strokeWidth: 1\n        },\n        strokeDasharray: \"0, 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatedAxis, {\n        hideAxisLine: true,\n        hideTicks: true,\n        orientation: \"bottom\",\n        tickLabelProps: () => ({\n          dy: tickLabelOffset\n        }),\n        left: 30,\n        numTicks: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatedAxis, {\n        hideAxisLine: true,\n        hideTicks: true,\n        orientation: \"left\",\n        numTicks: 4,\n        tickLabelProps: () => ({\n          dx: -10\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatedLineSeries, {\n        stroke: \"#008561\",\n        dataKey: \"primary_line\",\n        data: data1,\n        ...accessors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        snapTooltipToDatumX: true,\n        snapTooltipToDatumY: true,\n        showSeriesGlyphs: true,\n        glyphStyle: {\n          fill: \"#008561\",\n          strokeWidth: 0\n        },\n        renderTooltip: ({\n          tooltipData\n        }) => {\n          return /*#__PURE__*/_jsxDEV(TooltipContainer, {\n            children: Object.entries(tooltipData.datumByKey).map(lineDataArray => {\n              const [key, value] = lineDataArray;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date\",\n                  children: format(accessors.xAccessor(value.datum), \"MMM d\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"value\",\n                  children: [/*#__PURE__*/_jsxDEV(ColoredSquare, {\n                    color: \"#008561\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this), accessors.yAccessor(value.datum)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LineChart;\n\nconst BarChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Example, {\n      width: \"500\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = BarChart;\nexport default BarChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"BarChart\");","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/src/Components/Home/Locations/Dashboard/BarChart.js"],"names":["React","styled","format","AnimatedAxis","AnimatedGrid","AnimatedLineSeries","Tooltip","XYChart","data1","x","y","tickLabelOffset","accessors","xAccessor","d","Date","yAccessor","LineChart","left","top","bottom","right","type","stroke","strokeLinecap","strokeWidth","dy","dx","fill","tooltipData","Object","entries","datumByKey","map","lineDataArray","key","value","datum","BarChart"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { format } from \"date-fns\";\r\nimport {\r\n  AnimatedAxis,\r\n  AnimatedGrid,\r\n  AnimatedLineSeries,\r\n  Tooltip,\r\n  XYChart\r\n} from \"@visx/xychart\";\r\n\r\nconst data1 = [\r\n  {\r\n    x: \"2018-03-01\",\r\n    y: 30\r\n  },\r\n  {\r\n    x: \"2018-04-01\",\r\n    y: 16\r\n  },\r\n  {\r\n    x: \"2018-05-01\",\r\n    y: 17\r\n  },\r\n  {\r\n    x: \"2018-06-01\",\r\n    y: 24\r\n  },\r\n  {\r\n    x: \"2018-07-01\",\r\n    y: 47\r\n  },\r\n  {\r\n    x: \"2018-08-01\",\r\n    y: 32\r\n  },\r\n  {\r\n    x: \"2018-09-01\",\r\n    y: 8\r\n  },\r\n  {\r\n    x: \"2018-10-01\",\r\n    y: 27\r\n  },\r\n  {\r\n    x: \"2018-11-01\",\r\n    y: 31\r\n  },\r\n  {\r\n    x: \"2018-12-01\",\r\n    y: 105\r\n  },\r\n  {\r\n    x: \"2019-01-01\",\r\n    y: 166\r\n  },\r\n  {\r\n    x: \"2019-02-01\",\r\n    y: 181\r\n  },\r\n  {\r\n    x: \"2019-03-01\",\r\n    y: 232\r\n  },\r\n  {\r\n    x: \"2019-04-01\",\r\n    y: 224\r\n  },\r\n  {\r\n    x: \"2019-05-01\",\r\n    y: 196\r\n  },\r\n  {\r\n    x: \"2019-06-01\",\r\n    y: 211\r\n  }\r\n];\r\n\r\nconst tickLabelOffset = 10;\r\n\r\nconst accessors = {\r\n  xAccessor: (d) => new Date(`${d.x}T00:00:00`),\r\n  yAccessor: (d) => d.y\r\n};\r\n\r\nconst LineChart = () => {\r\n  return (\r\n    <ChartContainer>\r\n      <XYChart\r\n        height={270}\r\n        margin={{ left: 60, top: 35, bottom: 38, right: 27 }}\r\n        xScale={{ type: \"time\" }}\r\n        yScale={{ type: \"linear\" }}\r\n      >\r\n        <AnimatedGrid\r\n          columns={false}\r\n          numTicks={4}\r\n          lineStyle={{\r\n            stroke: \"#e1e1e1\",\r\n            strokeLinecap: \"round\",\r\n            strokeWidth: 1\r\n          }}\r\n          strokeDasharray=\"0, 4\"\r\n        />\r\n        <AnimatedAxis\r\n          hideAxisLine\r\n          hideTicks\r\n          orientation=\"bottom\"\r\n          tickLabelProps={() => ({ dy: tickLabelOffset })}\r\n          left={30}\r\n          numTicks={4}\r\n        />\r\n        <AnimatedAxis\r\n          hideAxisLine\r\n          hideTicks\r\n          orientation=\"left\"\r\n          numTicks={4}\r\n          tickLabelProps={() => ({ dx: -10 })}\r\n        />\r\n\r\n        <AnimatedLineSeries\r\n          stroke=\"#008561\"\r\n          dataKey=\"primary_line\"\r\n          data={data1}\r\n          {...accessors}\r\n        />\r\n        <Tooltip\r\n          snapTooltipToDatumX\r\n          snapTooltipToDatumY\r\n          showSeriesGlyphs\r\n          glyphStyle={{\r\n            fill: \"#008561\",\r\n            strokeWidth: 0\r\n          }}\r\n          renderTooltip={({ tooltipData }) => {\r\n            return (\r\n              <TooltipContainer>\r\n                {Object.entries(tooltipData.datumByKey).map((lineDataArray) => {\r\n                  const [key, value] = lineDataArray;\r\n\r\n                  return (\r\n                    <div className=\"row\" key={key}>\r\n                      <div className=\"date\">\r\n                        {format(accessors.xAccessor(value.datum), \"MMM d\")}\r\n                      </div>\r\n                      <div className=\"value\">\r\n                        <ColoredSquare color=\"#008561\" />\r\n                        {accessors.yAccessor(value.datum)}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </TooltipContainer>\r\n            );\r\n          }}\r\n        />\r\n      </XYChart>\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst BarChart = () => {\r\n    return (\r\n        <div>\r\n            <Example width=\"500\" height=\"300\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}