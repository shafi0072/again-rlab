{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2020 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSpan = void 0;\n\nconst api_1 = require(\"@opentelemetry/api\"); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nconst PKG = require('../../package.json');\n/**\n * @internal\n * Instantiates a Opentelemetry tracer for the library\n */\n\n\nconst libraryTracer = api_1.trace.getTracer('@google-cloud/pubsub', PKG.version);\n/**\n * Creates a new span with the given properties\n *\n * @param {string} spanName the name for the span\n * @param {Attributes?} attributes an object containing the attributes to be set for the span\n * @param {SpanContext?} parent the context of the parent span to link to the span\n */\n\nfunction createSpan(spanName, kind, attributes, parent) {\n  return libraryTracer.startSpan(spanName, {\n    // set the kind of the span\n    kind,\n    // set the attributes of the span\n    attributes: attributes\n  }, parent ? api_1.trace.setSpanContext(api_1.context.active(), parent) : undefined);\n}\n\nexports.createSpan = createSpan;","map":{"version":3,"sources":["../../src/opentelemetry-tracing.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;AAaG;;;;;;;AAEH,MAAA,KAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAUA;;;AACA,MAAM,GAAG,GAAG,OAAO,CAAC,oBAAD,CAAnB;AAEA;;;AAGG;;;AACH,MAAM,aAAa,GAAW,KAAA,CAAA,KAAA,CAAM,SAAN,CAC5B,sBAD4B,EAE5B,GAAG,CAAC,OAFwB,CAA9B;AAKA;;;;;;AAMG;;AACH,SAAgB,UAAhB,CACE,QADF,EAEE,IAFF,EAGE,UAHF,EAIE,MAJF,EAIsB;AAEpB,SAAO,aAAa,CAAC,SAAd,CACL,QADK,EAEL;AACE;AACA,IAAA,IAFF;AAGE;AACA,IAAA,UAAU,EAAE;AAJd,GAFK,EAQL,MAAM,GAAG,KAAA,CAAA,KAAA,CAAM,cAAN,CAAqB,KAAA,CAAA,OAAA,CAAQ,MAAR,EAArB,EAAuC,MAAvC,CAAH,GAAoD,SARrD,CAAP;AAUD;;AAhBD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2020 Google LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSpan = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst PKG = require('../../package.json');\n/**\n * @internal\n * Instantiates a Opentelemetry tracer for the library\n */\nconst libraryTracer = api_1.trace.getTracer('@google-cloud/pubsub', PKG.version);\n/**\n * Creates a new span with the given properties\n *\n * @param {string} spanName the name for the span\n * @param {Attributes?} attributes an object containing the attributes to be set for the span\n * @param {SpanContext?} parent the context of the parent span to link to the span\n */\nfunction createSpan(spanName, kind, attributes, parent) {\n    return libraryTracer.startSpan(spanName, {\n        // set the kind of the span\n        kind,\n        // set the attributes of the span\n        attributes: attributes,\n    }, parent ? api_1.trace.setSpanContext(api_1.context.active(), parent) : undefined);\n}\nexports.createSpan = createSpan;\n//# sourceMappingURL=opentelemetry-tracing.js.map"]},"metadata":{},"sourceType":"script"}