{"ast":null,"code":"import _objectSpread from\"F:/Rlab/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"F:/Rlab/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useParams}from'react-router-dom';import Navbar from'../../Shared/Navbar';import DeviceForm from'./DevicesForm';import firebase from'firebase';import'firebase/firestore';import'./DeviceMeter.css';import{useEffect}from'react';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";if(!firebase.apps.length){firebase.initializeApp({apiKey:\"AIzaSyBXXL_2svIOIRYEArzq7Ai8G8xLQTTTqrU\",authDomain:\"iot-comm.firebaseapp.com\",projectId:\"iot-comm\",storageBucket:\"iot-comm.appspot.com\",messagingSenderId:\"707981957974\",appId:\"1:707981957974:web:5e3ecb242770f42e7b14f7\",measurementId:\"G-VFR4XEJGHK\"});}else{firebase.app();// if already initialized, use that one\n}var db=firebase.firestore();var LocationDevice=function LocationDevice(){var _useParams=useParams(),Lid=_useParams.Lid;console.log({Lid:Lid});var _useState=useState({}),_useState2=_slicedToArray(_useState,2),DBLocationDV=_useState2[0],setDBLocationDV=_useState2[1];useEffect(function(){var docRef=db.collection(\"location\").doc(Lid);docRef.get().then(function(doc){if(doc.exists){setDBLocationDV(_objectSpread(_objectSpread({},doc.data()),{},{key:doc.id}));}else{// doc.data() will be undefined in this case\nconsole.log(\"No such document!\");}}).catch(function(error){console.log(\"Error getting document:\",error);});},[Lid]);console.log({DBLocationDV:DBLocationDV});return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3 location-device-navbar\",children:/*#__PURE__*/_jsx(Navbar,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-9 location-device-background\",children:/*#__PURE__*/_jsx(DeviceForm,{data:DBLocationDV})})]});};export default LocationDevice;","map":{"version":3,"sources":["F:/Rlab/client/src/Components/Home/Locations/LocationDevice.js"],"names":["React","useParams","Navbar","DeviceForm","firebase","useEffect","useState","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","firestore","LocationDevice","Lid","console","log","DBLocationDV","setDBLocationDV","docRef","collection","doc","get","then","exists","data","key","id","catch","error"],"mappings":"yQAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAO,oBAAP,CACA,MAAO,mBAAP,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,GAAI,CAACF,QAAQ,CAACG,IAAT,CAAcC,MAAnB,CAA2B,CACvBJ,QAAQ,CAACK,aAAT,CAAuB,CACnBC,MAAM,CAAE,yCADW,CAEzBC,UAAU,CAAE,0BAFa,CAGzBC,SAAS,CAAE,UAHc,CAIzBC,aAAa,CAAE,sBAJU,CAKzBC,iBAAiB,CAAE,cALM,CAMzBC,KAAK,CAAE,2CANkB,CAOzBC,aAAa,CAAE,cAPU,CAAvB,EASF,CAVF,IAUO,CACHZ,QAAQ,CAACa,GAAT,GAAgB;AAClB,CAEF,GAAMC,CAAAA,EAAE,CAAGd,QAAQ,CAACe,SAAT,EAAX,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,gBACXnB,SAAS,EADE,CAClBoB,GADkB,YAClBA,GADkB,CAEzBC,OAAO,CAACC,GAAR,CAAY,CAACF,GAAG,CAAHA,GAAD,CAAZ,EAFyB,cAGef,QAAQ,CAAC,EAAD,CAHvB,wCAGlBkB,YAHkB,eAGJC,eAHI,eAIzBpB,SAAS,CAAC,UAAM,CACZ,GAAIqB,CAAAA,MAAM,CAAGR,EAAE,CAACS,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BP,GAA9B,CAAb,CAEAK,MAAM,CAACG,GAAP,GAAaC,IAAb,CAAkB,SAACF,GAAD,CAAS,CACvB,GAAIA,GAAG,CAACG,MAAR,CAAgB,CACZN,eAAe,gCAAKG,GAAG,CAACI,IAAJ,EAAL,MAAiBC,GAAG,CAACL,GAAG,CAACM,EAAzB,GAAf,CACH,CAFD,IAEO,CACH;AACAZ,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACH,CACJ,CAPD,EAOGY,KAPH,CAOS,SAACC,KAAD,CAAW,CAChBd,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCa,KAAvC,EACH,CATD,EAUH,CAbQ,CAaN,CAACf,GAAD,CAbM,CAAT,CAcAC,OAAO,CAACC,GAAR,CAAY,CAACC,YAAY,CAAZA,YAAD,CAAZ,EACA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,YAAK,SAAS,CAAC,iCAAf,uBACI,KAAC,MAAD,IADJ,EADJ,cAII,YAAK,SAAS,CAAC,qCAAf,uBACI,KAAC,UAAD,EAAY,IAAI,CAAEA,YAAlB,EADJ,EAJJ,GADJ,CAUH,CA7BD,CA+BA,cAAeJ,CAAAA,cAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Navbar from '../../Shared/Navbar';\r\nimport DeviceForm from './DevicesForm';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport './DeviceMeter.css'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n        apiKey: \"AIzaSyBXXL_2svIOIRYEArzq7Ai8G8xLQTTTqrU\",\r\n  authDomain: \"iot-comm.firebaseapp.com\",\r\n  projectId: \"iot-comm\",\r\n  storageBucket: \"iot-comm.appspot.com\",\r\n  messagingSenderId: \"707981957974\",\r\n  appId: \"1:707981957974:web:5e3ecb242770f42e7b14f7\",\r\n  measurementId: \"G-VFR4XEJGHK\"\r\n    });\r\n }else {\r\n    firebase.app(); // if already initialized, use that one\r\n }\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst LocationDevice = () => {\r\n    const {Lid} = useParams();\r\n    console.log({Lid});\r\n    const [DBLocationDV, setDBLocationDV] = useState({})\r\n    useEffect(() => {\r\n        var docRef = db.collection(\"location\").doc(Lid);\r\n\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                setDBLocationDV({...doc.data(), key:doc.id});\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }, [Lid])\r\n    console.log({DBLocationDV});\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-3 location-device-navbar\">\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"col-md-9 location-device-background\">\r\n                <DeviceForm data={DBLocationDV}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationDevice;"]},"metadata":{},"sourceType":"module"}