{"ast":null,"code":"var _jsxFileName = \"C:\\\\remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161\\\\src\\\\Components\\\\Home\\\\DeviceDashBoard\\\\DeviceDashBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../../Shared/Navbar';\nimport DeveiceMeter from '../Locations/DeveiceMeter';\nimport logo from '../../../Resorces/logo_RLAB.png';\nimport './DeviceDashBoard.css';\nimport { useParams } from \"react-router-dom\";\nimport db from '../../FirebaseConfig/Firebase';\nimport { useContext } from 'react';\nimport { userContext } from '../../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeviceDashBoard = () => {\n  _s();\n\n  let {\n    format,\n    id\n  } = useParams();\n  const [status, setStatus] = useState([]);\n  const [pastData, setPastData] = useState([]);\n  const [user] = useContext(userContext);\n  useEffect(() => {\n    if (user.present === true) {\n      const userDb = db.collection(\"RealTime\").doc(id).onSnapshot(querySnapshot => {\n        setStatus({ ...querySnapshot.data(),\n          key: querySnapshot.id\n        }); // const maxNumber1 = maxNumber(getDataFirebase);\n      });\n      return userDb;\n    }\n  }, [format, id, user]);\n  useEffect(() => {\n    let UnixTimeFOrToday = Date.now();\n\n    if (user.week === true) {\n      let unixToWeek = UnixTimeFOrToday - 6.048e+8;\n      db.collection(id).where(\"dateSocket\", \">=\", unixToWeek).where(\"dateSocket\", \"<=\", UnixTimeFOrToday).onSnapshot(querySnapshot => {\n        let getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n        setPastData(getDataFirebase);\n      });\n    } else if (user.day === true) {\n      let unixToDay = UnixTimeFOrToday - 8.64e+7;\n      db.collection(id).where(\"dateSocket\", \">\", unixToDay).where(\"dateSocket\", \"<=\", UnixTimeFOrToday).onSnapshot(querySnapshot => {\n        let getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n        setPastData(getDataFirebase);\n      });\n    } else if (user.halfDay === true) {\n      let unixToHalfDay = UnixTimeFOrToday - 4.32e+7;\n      db.collection(id).where(\"dateSocket\", \">=\", unixToHalfDay).where(\"dateSocket\", \"<=\", UnixTimeFOrToday).onSnapshot(querySnapshot => {\n        let getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n        setPastData(getDataFirebase);\n      });\n    } else if (user.sixH === true) {\n      let unixToSix = UnixTimeFOrToday - 2.16e+7;\n      db.collection(id).where(\"dateSocket\", \">=\", unixToSix).where(\"dateSocket\", \"<=\", UnixTimeFOrToday).onSnapshot(querySnapshot => {\n        let getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n        setPastData(getDataFirebase);\n      });\n    } else if (user.oneH === true) {\n      let unixToOneH = UnixTimeFOrToday - 3.6e+6;\n      db.collection(id).where(\"dateSocket\", \">=\", unixToOneH).where(\"dateSocket\", \"<=\", UnixTimeFOrToday).onSnapshot(querySnapshot => {\n        let getDataFirebase = [];\n        querySnapshot.forEach(doc => {\n          // doc.data() is never undefined for query doc snapshots\n          getDataFirebase.push({ ...doc.data(),\n            key: doc.id\n          });\n        });\n        setPastData(getDataFirebase);\n      });\n    }\n  }, [user, id, setOneH, setHalfDay, setSixH, setDay, setPastData]);\n  console.log({\n    pastData\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-1\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-11 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\",\n        style: {\n          width: '20%'\n        },\n        className: \"mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeveiceMeter, {\n        data: status,\n        pastData: pastData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeviceDashBoard, \"UsVCL3k59wdNmGWcyyRucD2NRBI=\", false, function () {\n  return [useParams];\n});\n\n_c = DeviceDashBoard;\nexport default DeviceDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDashBoard\");","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/src/Components/Home/DeviceDashBoard/DeviceDashBoard.js"],"names":["React","useEffect","useState","Navbar","DeveiceMeter","logo","useParams","db","useContext","userContext","DeviceDashBoard","format","id","status","setStatus","pastData","setPastData","user","present","userDb","collection","doc","onSnapshot","querySnapshot","data","key","UnixTimeFOrToday","Date","now","week","unixToWeek","where","getDataFirebase","forEach","push","day","unixToDay","halfDay","unixToHalfDay","sixH","unixToSix","oneH","unixToOneH","setOneH","setHalfDay","setSixH","setDay","console","log","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Navbar from '../../Shared/Navbar';\nimport DeveiceMeter from '../Locations/DeveiceMeter';\n\nimport logo from '../../../Resorces/logo_RLAB.png';\nimport './DeviceDashBoard.css';\n\nimport {useParams} from \"react-router-dom\";\n\nimport db from '../../FirebaseConfig/Firebase'\nimport {useContext} from 'react';\nimport {userContext} from '../../../App';\n\nconst DeviceDashBoard = () => {\n    let {format, id} = useParams();\n\n    const [status, setStatus] = useState([])\n    \n    const [pastData, setPastData] = useState([]);\n    \n    \n\n    const [user] = useContext(userContext)\n\n    \n    \n\n\n    useEffect(() => {\n        if (user.present === true) {\n            const userDb = db\n                .collection(\"RealTime\")\n                .doc(id)\n                .onSnapshot((querySnapshot) => {\n\n                    setStatus({\n                        ...querySnapshot.data(),\n                        key: querySnapshot.id\n                    });\n\n                    // const maxNumber1 = maxNumber(getDataFirebase);\n\n                });\n            return userDb;\n        }\n        \n    }, [ format, id, user]);\n    useEffect(() => {\n         \n        let UnixTimeFOrToday = Date.now();\n          if(user.week === true){\n            \n            let unixToWeek = UnixTimeFOrToday - 6.048e+8;\n            db.collection(id).where(\"dateSocket\", \">=\", unixToWeek).where(\"dateSocket\", \"<=\", UnixTimeFOrToday)\n            .onSnapshot((querySnapshot) => {\n              let getDataFirebase = [];\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    getDataFirebase.push({...doc.data(),key: doc.id});\n                });\n                setPastData(getDataFirebase)\n               \n            })\n          }\n          \n        \n        \n           else if(user.day === true){\n            let unixToDay = UnixTimeFOrToday - 8.64e+7;\n            db.collection(id).where(\"dateSocket\", \">\", unixToDay).where(\"dateSocket\", \"<=\", UnixTimeFOrToday)\n            .onSnapshot((querySnapshot) => {\n              let getDataFirebase = [];\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    getDataFirebase.push({...doc.data(),key: doc.id});\n                });\n                setPastData(getDataFirebase)\n            })\n            }\n            \n            \n            \n          \n          \n            else if(user.halfDay === true){\n            let unixToHalfDay = UnixTimeFOrToday - 4.32e+7;\n            db.collection(id).where(\"dateSocket\", \">=\", unixToHalfDay).where(\"dateSocket\", \"<=\", UnixTimeFOrToday)\n            .onSnapshot((querySnapshot) => {\n              let getDataFirebase = [];\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    getDataFirebase.push({...doc.data(),key: doc.id});\n                });\n                setPastData(getDataFirebase)\n            })\n            \n            }\n            \n            \n          \n          \n            \n           else if(user.sixH === true){\n            let unixToSix= UnixTimeFOrToday - 2.16e+7;\n            db.collection(id).where(\"dateSocket\", \">=\", unixToSix).where(\"dateSocket\", \"<=\", UnixTimeFOrToday)\n            .onSnapshot((querySnapshot) => {\n              let getDataFirebase = [];\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    getDataFirebase.push({...doc.data(),key: doc.id});\n                });\n                setPastData(getDataFirebase)\n            })\n           }\n            \n            \n          \n         \n            else if(user.oneH === true){\n            let unixToOneH = UnixTimeFOrToday - 3.6e+6;\n            db.collection(id).where(\"dateSocket\", \">=\", unixToOneH).where(\"dateSocket\", \"<=\", UnixTimeFOrToday)\n            .onSnapshot((querySnapshot) => {\n              let getDataFirebase = [];\n                querySnapshot.forEach((doc) => {\n                    // doc.data() is never undefined for query doc snapshots\n                    getDataFirebase.push({...doc.data(),key: doc.id});\n                });\n                setPastData(getDataFirebase)\n            })\n            }\n            \n            \n          \n    }, [user, id,setOneH, setHalfDay, setSixH, setDay, setPastData]);\n    \n    console.log({pastData})\n    return (\n        <div className='row'>\n            <div className=\"col-md-1\">\n                <Navbar/>\n            </div>\n            <div className=\"col-md-11 text-center\">\n                <img\n                    src={logo}\n                    alt=\"\"\n                    style={{\n                        width: '20%'\n                    }}\n                    className='mt-5'/>\n\n                <DeveiceMeter data={status} pastData={pastData}/>\n            </div>\n        </div>\n    );\n};\n\nexport default DeviceDashBoard;"]},"metadata":{},"sourceType":"module"}