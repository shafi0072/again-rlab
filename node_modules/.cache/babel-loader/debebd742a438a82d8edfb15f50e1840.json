{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Histogram = void 0;\n/*!\n * The Histogram class is used to capture the lifespan of messages within the\n * the client. These durations are then used to calculate the 99th percentile\n * of ack deadlines for future messages.\n *\n * @private\n * @class\n */\n\nclass Histogram {\n  constructor(options) {\n    this.options = Object.assign({\n      min: 0,\n      max: Number.MAX_SAFE_INTEGER\n    }, options);\n    this.data = new Map();\n    this.length = 0;\n  }\n  /*!\n   * Adds a value to the histogram.\n   *\n   * @private\n   * @param {numnber} value - The value in milliseconds.\n   */\n\n\n  add(value) {\n    value = Math.ceil(value);\n    value = Math.max(value, this.options.min);\n    value = Math.min(value, this.options.max);\n\n    if (!this.data.has(value)) {\n      this.data.set(value, 0);\n    }\n\n    const count = this.data.get(value);\n    this.data.set(value, count + 1);\n    this.length += 1;\n  }\n  /*!\n   * Retrieves the nth percentile of recorded values.\n   *\n   * @private\n   * @param {number} percent The requested percentage.\n   * @return {number}\n   */\n\n\n  percentile(percent) {\n    percent = Math.min(percent, 100);\n    let target = this.length - this.length * (percent / 100);\n    const keys = Array.from(this.data.keys());\n    let key;\n\n    for (let i = keys.length - 1; i > -1; i--) {\n      key = keys[i];\n      target -= this.data.get(key);\n\n      if (target <= 0) {\n        return key;\n      }\n    }\n\n    return this.options.min;\n  }\n\n}\n\nexports.Histogram = Histogram;","map":{"version":3,"sources":["../../src/histogram.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAOH;;;;;;;AAOG;;AACH,MAAa,SAAb,CAAsB;AAIpB,EAAA,WAAA,CAAY,OAAZ,EAAsC;AACpC,SAAK,OAAL,GAAe,MAAM,CAAC,MAAP,CACb;AAAC,MAAA,GAAG,EAAE,CAAN;AAAS,MAAA,GAAG,EAAE,MAAM,CAAC;AAArB,KADa,EAEb,OAFa,CAAf;AAIA,SAAK,IAAL,GAAY,IAAI,GAAJ,EAAZ;AACA,SAAK,MAAL,GAAc,CAAd;AACD;AACD;;;;;AAKG;;;AACH,EAAA,GAAG,CAAC,KAAD,EAAc;AACf,IAAA,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,KAAV,CAAR;AACA,IAAA,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,KAAK,OAAL,CAAa,GAA7B,CAAR;AACA,IAAA,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,KAAK,OAAL,CAAa,GAA7B,CAAR;;AACA,QAAI,CAAC,KAAK,IAAL,CAAU,GAAV,CAAc,KAAd,CAAL,EAA2B;AACzB,WAAK,IAAL,CAAU,GAAV,CAAc,KAAd,EAAqB,CAArB;AACD;;AACD,UAAM,KAAK,GAAG,KAAK,IAAL,CAAU,GAAV,CAAc,KAAd,CAAd;AACA,SAAK,IAAL,CAAU,GAAV,CAAc,KAAd,EAAqB,KAAK,GAAG,CAA7B;AACA,SAAK,MAAL,IAAe,CAAf;AACD;AACD;;;;;;AAMG;;;AACH,EAAA,UAAU,CAAC,OAAD,EAAgB;AACxB,IAAA,OAAO,GAAG,IAAI,CAAC,GAAL,CAAS,OAAT,EAAkB,GAAlB,CAAV;AACA,QAAI,MAAM,GAAG,KAAK,MAAL,GAAc,KAAK,MAAL,IAAe,OAAO,GAAG,GAAzB,CAA3B;AACA,UAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,IAAL,CAAU,IAAV,EAAX,CAAb;AACA,QAAI,GAAJ;;AACA,SAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAL,GAAc,CAA3B,EAA8B,CAAC,GAAG,CAAC,CAAnC,EAAsC,CAAC,EAAvC,EAA2C;AACzC,MAAA,GAAG,GAAG,IAAI,CAAC,CAAD,CAAV;AACA,MAAA,MAAM,IAAI,KAAK,IAAL,CAAU,GAAV,CAAc,GAAd,CAAV;;AACA,UAAI,MAAM,IAAI,CAAd,EAAiB;AACf,eAAO,GAAP;AACD;AACF;;AACD,WAAO,KAAK,OAAL,CAAa,GAApB;AACD;;AAjDmB;;AAAtB,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Histogram = void 0;\n/*!\n * The Histogram class is used to capture the lifespan of messages within the\n * the client. These durations are then used to calculate the 99th percentile\n * of ack deadlines for future messages.\n *\n * @private\n * @class\n */\nclass Histogram {\n    constructor(options) {\n        this.options = Object.assign({ min: 0, max: Number.MAX_SAFE_INTEGER }, options);\n        this.data = new Map();\n        this.length = 0;\n    }\n    /*!\n     * Adds a value to the histogram.\n     *\n     * @private\n     * @param {numnber} value - The value in milliseconds.\n     */\n    add(value) {\n        value = Math.ceil(value);\n        value = Math.max(value, this.options.min);\n        value = Math.min(value, this.options.max);\n        if (!this.data.has(value)) {\n            this.data.set(value, 0);\n        }\n        const count = this.data.get(value);\n        this.data.set(value, count + 1);\n        this.length += 1;\n    }\n    /*!\n     * Retrieves the nth percentile of recorded values.\n     *\n     * @private\n     * @param {number} percent The requested percentage.\n     * @return {number}\n     */\n    percentile(percent) {\n        percent = Math.min(percent, 100);\n        let target = this.length - this.length * (percent / 100);\n        const keys = Array.from(this.data.keys());\n        let key;\n        for (let i = keys.length - 1; i > -1; i--) {\n            key = keys[i];\n            target -= this.data.get(key);\n            if (target <= 0) {\n                return key;\n            }\n        }\n        return this.options.min;\n    }\n}\nexports.Histogram = Histogram;\n//# sourceMappingURL=histogram.js.map"]},"metadata":{},"sourceType":"script"}