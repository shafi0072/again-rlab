{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { textColor } from './colors';\nvar defaultLabelStyles = {\n  fontFamily: '-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif',\n  fontWeight: 700,\n  fontSize: 12,\n  textAnchor: 'middle',\n  pointerEvents: 'none',\n  letterSpacing: 0.4\n};\n/** Provides a simplified API to build a full XYChartTheme. */\n\nexport default function buildChartTheme(config) {\n  var _ref, _ref2, _config$htmlLabel$col, _config$htmlLabel, _config$svgLabelBig, _config$svgLabelSmall;\n\n  var baseSvgLabel = _extends({}, defaultLabelStyles, {\n    fill: textColor,\n    stroke: 'none'\n  }, config.svgLabelBig);\n\n  var baseTickLabel = _extends({}, defaultLabelStyles, {\n    fontWeight: 200,\n    fontSize: 11,\n    fill: textColor,\n    stroke: 'none'\n  }, config.svgLabelSmall);\n\n  var baseHtmlLabel = _extends({\n    color: (_ref = (_ref2 = (_config$htmlLabel$col = (_config$htmlLabel = config.htmlLabel) == null ? void 0 : _config$htmlLabel.color) != null ? _config$htmlLabel$col : (_config$svgLabelBig = config.svgLabelBig) == null ? void 0 : _config$svgLabelBig.fill) != null ? _ref2 : (_config$svgLabelSmall = config.svgLabelSmall) == null ? void 0 : _config$svgLabelSmall.fill) != null ? _ref : textColor\n  }, defaultLabelStyles, config.htmlLabel);\n\n  return {\n    backgroundColor: config.backgroundColor,\n    colors: [].concat(config.colors),\n    htmlLabel: _extends({}, baseHtmlLabel),\n    svgLabelSmall: _extends({}, baseTickLabel),\n    svgLabelBig: _extends({}, baseSvgLabel),\n    gridStyles: _extends({\n      stroke: config.gridColor,\n      strokeWidth: 1\n    }, config.gridStyles),\n    axisStyles: {\n      x: {\n        top: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dy: '-0.25em' // needs to include font-size\n\n          }),\n          axisLine: _extends({\n            stroke: config.gridColorDark,\n            strokeWidth: 2\n          }, config.xAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            dy: '-0.25em' // needs to include font-size\n\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.xTickLineStyles)\n        },\n        bottom: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dy: '-0.25em'\n          }),\n          axisLine: _extends({\n            stroke: config.gridColorDark,\n            strokeWidth: 2\n          }, config.xAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            dy: '0.125em'\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.xTickLineStyles)\n        }\n      },\n      y: {\n        left: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dx: '-1.25em'\n          }),\n          axisLine: _extends({\n            stroke: config.gridColor,\n            strokeWidth: 1\n          }, config.yAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            textAnchor: 'end',\n            dx: '-0.25em',\n            dy: '0.25em'\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.yTickLineStyles)\n        },\n        right: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dx: '1.25em'\n          }),\n          axisLine: _extends({\n            stroke: config.gridColor,\n            strokeWidth: 1\n          }, config.yAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            textAnchor: 'start',\n            dx: '0.25em',\n            dy: '0.25em'\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.yTickLineStyles)\n        }\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/xychart/esm/theme/buildChartTheme.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","textColor","defaultLabelStyles","fontFamily","fontWeight","fontSize","textAnchor","pointerEvents","letterSpacing","buildChartTheme","config","_ref","_ref2","_config$htmlLabel$col","_config$htmlLabel","_config$svgLabelBig","_config$svgLabelSmall","baseSvgLabel","fill","stroke","svgLabelBig","baseTickLabel","svgLabelSmall","baseHtmlLabel","color","htmlLabel","backgroundColor","colors","concat","gridStyles","gridColor","strokeWidth","axisStyles","x","top","axisLabel","dy","axisLine","gridColorDark","xAxisLineStyles","tickLabel","tickLength","tickLine","xTickLineStyles","bottom","y","left","dx","yAxisLineStyles","yTickLineStyles","right"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { textColor } from './colors';\nvar defaultLabelStyles = {\n  fontFamily: '-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif',\n  fontWeight: 700,\n  fontSize: 12,\n  textAnchor: 'middle',\n  pointerEvents: 'none',\n  letterSpacing: 0.4\n};\n/** Provides a simplified API to build a full XYChartTheme. */\n\nexport default function buildChartTheme(config) {\n  var _ref, _ref2, _config$htmlLabel$col, _config$htmlLabel, _config$svgLabelBig, _config$svgLabelSmall;\n\n  var baseSvgLabel = _extends({}, defaultLabelStyles, {\n    fill: textColor,\n    stroke: 'none'\n  }, config.svgLabelBig);\n\n  var baseTickLabel = _extends({}, defaultLabelStyles, {\n    fontWeight: 200,\n    fontSize: 11,\n    fill: textColor,\n    stroke: 'none'\n  }, config.svgLabelSmall);\n\n  var baseHtmlLabel = _extends({\n    color: (_ref = (_ref2 = (_config$htmlLabel$col = (_config$htmlLabel = config.htmlLabel) == null ? void 0 : _config$htmlLabel.color) != null ? _config$htmlLabel$col : (_config$svgLabelBig = config.svgLabelBig) == null ? void 0 : _config$svgLabelBig.fill) != null ? _ref2 : (_config$svgLabelSmall = config.svgLabelSmall) == null ? void 0 : _config$svgLabelSmall.fill) != null ? _ref : textColor\n  }, defaultLabelStyles, config.htmlLabel);\n\n  return {\n    backgroundColor: config.backgroundColor,\n    colors: [].concat(config.colors),\n    htmlLabel: _extends({}, baseHtmlLabel),\n    svgLabelSmall: _extends({}, baseTickLabel),\n    svgLabelBig: _extends({}, baseSvgLabel),\n    gridStyles: _extends({\n      stroke: config.gridColor,\n      strokeWidth: 1\n    }, config.gridStyles),\n    axisStyles: {\n      x: {\n        top: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dy: '-0.25em' // needs to include font-size\n\n          }),\n          axisLine: _extends({\n            stroke: config.gridColorDark,\n            strokeWidth: 2\n          }, config.xAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            dy: '-0.25em' // needs to include font-size\n\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.xTickLineStyles)\n        },\n        bottom: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dy: '-0.25em'\n          }),\n          axisLine: _extends({\n            stroke: config.gridColorDark,\n            strokeWidth: 2\n          }, config.xAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            dy: '0.125em'\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.xTickLineStyles)\n        }\n      },\n      y: {\n        left: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dx: '-1.25em'\n          }),\n          axisLine: _extends({\n            stroke: config.gridColor,\n            strokeWidth: 1\n          }, config.yAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            textAnchor: 'end',\n            dx: '-0.25em',\n            dy: '0.25em'\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.yTickLineStyles)\n        },\n        right: {\n          axisLabel: _extends({}, baseSvgLabel, {\n            dx: '1.25em'\n          }),\n          axisLine: _extends({\n            stroke: config.gridColor,\n            strokeWidth: 1\n          }, config.yAxisLineStyles),\n          tickLabel: _extends({}, baseTickLabel, {\n            textAnchor: 'start',\n            dx: '0.25em',\n            dy: '0.25em'\n          }),\n          tickLength: config.tickLength,\n          tickLine: _extends({\n            strokeWidth: 1,\n            stroke: config.gridColor\n          }, config.yTickLineStyles)\n        }\n      }\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}