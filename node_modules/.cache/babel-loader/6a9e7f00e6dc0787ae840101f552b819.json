{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport Line from '@visx/shape/lib/shapes/Line';\nimport { Group } from '@visx/group';\nimport { Point } from '@visx/point';\nimport { getTicks, coerceNumber } from '@visx/scale';\nimport getScaleBandwidth from '../utils/getScaleBandwidth';\nexport default function GridColumns(_ref) {\n  var _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      scale = _ref.scale,\n      height = _ref.height,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#eaf0f6' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      className = _ref.className,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks,\n      lineStyle = _ref.lineStyle,\n      offset = _ref.offset,\n      tickValues = _ref.tickValues,\n      children = _ref.children,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"top\", \"left\", \"scale\", \"height\", \"stroke\", \"strokeWidth\", \"strokeDasharray\", \"className\", \"numTicks\", \"lineStyle\", \"offset\", \"tickValues\", \"children\"]);\n\n  var ticks = tickValues != null ? tickValues : getTicks(scale, numTicks);\n  var scaleOffset = (offset != null ? offset : 0) + getScaleBandwidth(scale) / 2;\n  var tickLines = ticks.map(function (d) {\n    var _coerceNumber;\n\n    var x = ((_coerceNumber = coerceNumber(scale(d))) != null ? _coerceNumber : 0) + scaleOffset;\n    return {\n      from: new Point({\n        x: x,\n        y: 0\n      }),\n      to: new Point({\n        x: x,\n        y: height\n      })\n    };\n  });\n  return /*#__PURE__*/React.createElement(Group, {\n    className: cx('visx-columns', className),\n    top: top,\n    left: left\n  }, children ? children({\n    lines: tickLines\n  }) : tickLines.map(function (_ref2, i) {\n    var from = _ref2.from,\n        to = _ref2.to;\n    return /*#__PURE__*/React.createElement(Line, _extends({\n      key: \"column-line-\" + i,\n      from: from,\n      to: to,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      style: lineStyle\n    }, restProps));\n  }));\n}\nGridColumns.propTypes = {\n  tickValues: _pt.array,\n  height: _pt.number.isRequired\n};","map":{"version":3,"sources":["C:/remotePackRlab-acab49ee44aa8f06acbfc147116dbc3387885161/node_modules/@visx/grid/esm/grids/GridColumns.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","cx","Line","Group","Point","getTicks","coerceNumber","getScaleBandwidth","GridColumns","_ref","_ref$top","top","_ref$left","left","scale","height","_ref$stroke","stroke","_ref$strokeWidth","strokeWidth","strokeDasharray","className","_ref$numTicks","numTicks","lineStyle","offset","tickValues","children","restProps","ticks","scaleOffset","tickLines","map","d","_coerceNumber","x","from","y","to","createElement","lines","_ref2","style","propTypes","array","number","isRequired"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport Line from '@visx/shape/lib/shapes/Line';\nimport { Group } from '@visx/group';\nimport { Point } from '@visx/point';\nimport { getTicks, coerceNumber } from '@visx/scale';\nimport getScaleBandwidth from '../utils/getScaleBandwidth';\nexport default function GridColumns(_ref) {\n  var _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      scale = _ref.scale,\n      height = _ref.height,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#eaf0f6' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      className = _ref.className,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks,\n      lineStyle = _ref.lineStyle,\n      offset = _ref.offset,\n      tickValues = _ref.tickValues,\n      children = _ref.children,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"top\", \"left\", \"scale\", \"height\", \"stroke\", \"strokeWidth\", \"strokeDasharray\", \"className\", \"numTicks\", \"lineStyle\", \"offset\", \"tickValues\", \"children\"]);\n\n  var ticks = tickValues != null ? tickValues : getTicks(scale, numTicks);\n  var scaleOffset = (offset != null ? offset : 0) + getScaleBandwidth(scale) / 2;\n  var tickLines = ticks.map(function (d) {\n    var _coerceNumber;\n\n    var x = ((_coerceNumber = coerceNumber(scale(d))) != null ? _coerceNumber : 0) + scaleOffset;\n    return {\n      from: new Point({\n        x: x,\n        y: 0\n      }),\n      to: new Point({\n        x: x,\n        y: height\n      })\n    };\n  });\n  return /*#__PURE__*/React.createElement(Group, {\n    className: cx('visx-columns', className),\n    top: top,\n    left: left\n  }, children ? children({\n    lines: tickLines\n  }) : tickLines.map(function (_ref2, i) {\n    var from = _ref2.from,\n        to = _ref2.to;\n    return /*#__PURE__*/React.createElement(Line, _extends({\n      key: \"column-line-\" + i,\n      from: from,\n      to: to,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      style: lineStyle\n    }, restProps));\n  }));\n}\nGridColumns.propTypes = {\n  tickValues: _pt.array,\n  height: _pt.number.isRequired\n};"]},"metadata":{},"sourceType":"module"}